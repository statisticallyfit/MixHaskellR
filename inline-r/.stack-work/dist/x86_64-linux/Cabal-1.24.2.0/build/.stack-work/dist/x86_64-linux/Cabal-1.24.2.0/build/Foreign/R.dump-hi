
==================== FINAL INTERFACE ====================
2017-12-28 08:02:23.405377 UTC

interface inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs:Foreign.R 8002
  interface hash: b8a38cf36d12dc1d87d65990d4a02c58
  ABI hash: 76af03c75eee17c66f999e9a2952a2da
  export-list hash: 48f78775472e7fa46d6f356ef53096ba
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 6ed57a69cf416ded65115d87c040d870
  sig of: Nothing
  used TH splices: False
  where
exports:
  Foreign.R.allocList
  Foreign.R.allocSEXP
  Foreign.R.allocVector
  Foreign.R.allocVectorProtected
  Foreign.R.car
  Foreign.R.cdr
  Foreign.R.char
  Foreign.R.closureBody
  Foreign.R.closureEnv
  Foreign.R.closureFormals
  Foreign.R.complex
  Foreign.R.cons
  Foreign.R.envEnclosing
  Foreign.R.envFrame
  Foreign.R.envHashtab
  Foreign.R.eval
  Foreign.R.findFun
  Foreign.R.findVar
  Foreign.R.gc
  Foreign.R.indexVector
  Foreign.R.install
  Foreign.R.integer
  Foreign.R.lang1
  Foreign.R.lang2
  Foreign.R.lang3
  Foreign.R.lcons
  Foreign.R.logical
  Foreign.R.mkChar
  Foreign.R.mkCharCE
  Foreign.R.mkString
  Foreign.R.mkWeakRef
  Foreign.R.preserveObject
  Foreign.R.printValue
  Foreign.R.promiseCode
  Foreign.R.promiseEnv
  Foreign.R.promiseValue
  Foreign.R.protect
  Foreign.R.raw
  Foreign.R.readVector
  Foreign.R.real
  Foreign.R.releaseObject
  Foreign.R.string
  Foreign.R.symbolInternal
  Foreign.R.symbolPrintName
  Foreign.R.symbolValue
  Foreign.R.tag
  Foreign.R.trueLength
  Foreign.R.tryEval
  Foreign.R.tryEvalSilent
  Foreign.R.unprotect
  Foreign.R.unprotectPtr
  Foreign.R.withProtected
  Foreign.R.writeVector
  Foreign.R.Internal.asTypeOf
  Foreign.R.Internal.baseEnv
  Foreign.R.Internal.cast
  Foreign.R.Internal.emptyEnv
  Foreign.R.Internal.getAttribute
  Foreign.R.Internal.getAttributes
  Foreign.R.Internal.globalEnv
  Foreign.R.Internal.interruptsPending
  Foreign.R.Internal.isRInteractive
  Foreign.R.Internal.isS4
  Foreign.R.Internal.length
  Foreign.R.Internal.mark
  Foreign.R.Internal.missingArg
  Foreign.R.Internal.named
  Foreign.R.Internal.nilValue
  Foreign.R.Internal.peekInfo
  Foreign.R.Internal.pokeInfo
  Foreign.R.Internal.release
  Foreign.R.Internal.setAttributes
  Foreign.R.Internal.setCar
  Foreign.R.Internal.setCdr
  Foreign.R.Internal.setTag
  Foreign.R.Internal.sexp
  Foreign.R.Internal.signalHandlers
  Foreign.R.Internal.typeOf
  Foreign.R.Internal.unSomeSEXP
  Foreign.R.Internal.unboundValue
  Foreign.R.Internal.unsafeCoerce
  Foreign.R.Internal.unsafeRelease
  Foreign.R.Internal.unsafeSEXPToVectorPtr
  Foreign.R.Internal.unsafeVectorPtrToSEXP
  Foreign.R.Internal.unsexp
  Foreign.R.CEType{Foreign.R.CE_ANY Foreign.R.CE_BYTES Foreign.R.CE_LATIN1 Foreign.R.CE_NATIVE Foreign.R.CE_SYMBOL Foreign.R.CE_UTF8}
  Foreign.R.SEXP0
  Foreign.R.Internal.SEXP{Foreign.R.Internal.SEXP unSEXP}
  Foreign.R.Internal.SEXPInfo{Foreign.R.Internal.SEXPInfo infoDebug infoGcCls infoGcGen infoGp infoMark infoNamed infoObj infoSpare infoTrace infoType}
  Foreign.R.Internal.SEXPREC
  Foreign.R.Internal.SomeSEXP{Foreign.R.Internal.SomeSEXP}
  Foreign.R.Type.IsExpression
  Foreign.R.Type.IsGenericVector
  Foreign.R.Type.IsList
  Foreign.R.Type.IsPairList
  Foreign.R.Type.IsVector
  Foreign.R.Type.Logical{Foreign.R.Type.FALSE Foreign.R.Type.NA Foreign.R.Type.TRUE}
  Foreign.R.Type.PairList
  Foreign.R.Type.SEXPTYPE{Foreign.R.Type.Any Foreign.R.Type.Builtin Foreign.R.Type.Bytecode Foreign.R.Type.Char Foreign.R.Type.Closure Foreign.R.Type.Complex Foreign.R.Type.DotDotDot Foreign.R.Type.Env Foreign.R.Type.Expr Foreign.R.Type.ExtPtr Foreign.R.Type.Free Foreign.R.Type.Fun Foreign.R.Type.Int Foreign.R.Type.Lang Foreign.R.Type.List Foreign.R.Type.Logical Foreign.R.Type.New Foreign.R.Type.Nil Foreign.R.Type.Promise Foreign.R.Type.Raw Foreign.R.Type.Real Foreign.R.Type.S4 Foreign.R.Type.Special Foreign.R.Type.String Foreign.R.Type.Symbol Foreign.R.Type.Vector Foreign.R.Type.WeakRef}
  Foreign.R.Type.SSEXPTYPE
  Data.Singletons.Sing{Foreign.R.Type.SAny Foreign.R.Type.SBuiltin Foreign.R.Type.SBytecode Foreign.R.Type.SChar Foreign.R.Type.SClosure Foreign.R.Type.SComplex Foreign.R.Type.SDotDotDot Foreign.R.Type.SEnv Foreign.R.Type.SExpr Foreign.R.Type.SExtPtr Foreign.R.Type.SFree Foreign.R.Type.SFun Foreign.R.Type.SInt Foreign.R.Type.SLang Foreign.R.Type.SList Foreign.R.Type.SLogical Foreign.R.Type.SNew Foreign.R.Type.SNil Foreign.R.Type.SPromise Foreign.R.Type.SRaw Foreign.R.Type.SReal Foreign.R.Type.SS4 Foreign.R.Type.SSpecial Foreign.R.Type.SString Foreign.R.Type.SSymbol Foreign.R.Type.SVector Foreign.R.Type.SWeakRef Data.Singletons.SLambda Data.Singletons.Prelude.Instances.SFalse Data.Singletons.Prelude.Instances.STrue Data.Singletons.Prelude.Instances.STuple0 Data.Singletons.Prelude.Instances.STuple2 Data.Singletons.Prelude.Instances.STuple3 Data.Singletons.Prelude.Instances.STuple4 Data.Singletons.Prelude.Instances.STuple5 Data.Singletons.Prelude.Instances.STuple6 Data.Singletons.Prelude.Instances.STuple7 applySing}
module dependencies: Control.Memory.Region Foreign.R.Constraints
                     Foreign.R.Internal Foreign.R.Type Internal.Error
                     Language.R.HExp [boot]
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-boot-th-8.0.2@ghc-boot-th-8.0.2
                      ghc-prim-0.5.0.0 integer-gmp-1.0.0.1
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      safe-0.3.15@safe-0.3.15-2Yd45VWFfdcKqKyispOifY
                      singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3
                      syb-0.7@syb-0.7-4OKdCpwGutyB1rNRmoa0ya template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      th-desugar-1.6@th-desugar-1.6-4xe2xTMQQiAGUPVUAkAZhp
                      th-expand-syns-0.4.3.0@th-expand-syns-0.4.3.0-A2GRp9XTxmBCMfV7DnYdn0
                      th-lift-0.7.7@th-lift-0.7.7-JWI9Gh7wB0MC9Q5wqv5aoI
                      th-lift-instances-0.1.11@th-lift-instances-0.1.11-A7sWuFC2KLsFTBmLagoRSX
                      th-orphans-0.13.4@th-orphans-0.13.4-IGsCpZ5u2Ab1MvGd5biF2z
                      th-reify-many-0.1.8@th-reify-many-0.1.8-5ZNbfXxMl3y5DMJznTzmN9
                      transformers-0.5.2.0@transformers-0.5.2.0
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Decide
         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Prelude.Instances
         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.TypeLits
         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.TypeLits.Internal
         syb-0.7@syb-0.7-4OKdCpwGutyB1rNRmoa0ya:Data.Generics.Instances
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         th-lift-0.7.7@th-lift-0.7.7-JWI9Gh7wB0MC9Q5wqv5aoI:Language.Haskell.TH.Lift
         th-lift-instances-0.1.11@th-lift-instances-0.1.11-A7sWuFC2KLsFTBmLagoRSX:Instances.TH.Lift
         th-orphans-0.13.4@th-orphans-0.13.4-IGsCpZ5u2Ab1MvGd5biF2z:Language.Haskell.TH.Instances
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs:Control.Memory.Region
                         inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs:Foreign.R.Type
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Prelude.Bool
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Prelude.Eq
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Prelude.Instances
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Prelude.Num
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Prelude.Ord
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Syntax
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.TypeLits.Internal
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         th-desugar-1.6@th-desugar-1.6-4xe2xTMQQiAGUPVUAkAZhp:Language.Haskell.TH.Desugar.Core
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
import  -/  base-4.9.1.0:Control.Applicative 32430a90492e727f4bd80db71c28600c
import  -/  base-4.9.1.0:Control.Exception a76dd9666251322fe34dbcca3a0817bf
import  -/  base-4.9.1.0:Control.Exception.Base 1e106916283856f4d9caeddab92cd861
import  -/  base-4.9.1.0:Data.Bits d707ac81dd0124c7a7fb3234df2c8548
import  -/  base-4.9.1.0:Data.Complex ec864ed8b68bbdf9c6cffa700c3cfe8e
import  -/  base-4.9.1.0:Data.Int 07f5a36c488acfe0ac32e81c7536b8ff
import  -/  base-4.9.1.0:Foreign b4bee334aade4f33021057fdecf4a495
import  -/  base-4.9.1.0:Foreign.C b8d6c8cd5e89ba05da67379943abaffb
import  -/  base-4.9.1.0:Foreign.C.String b924799565cbc1299cb1e113052a7304
import  -/  base-4.9.1.0:Foreign.C.Types bf568ee9a3ec4aa42333a0da5f4345de
import  -/  base-4.9.1.0:Foreign.Ptr 436587875917047a95f3be0fc1891fc4
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Enum 3811281f7b5f26da514529cf3ed44009
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.Int e6f85fcab22769385fba2b5fce0acb40
import  -/  base-4.9.1.0:GHC.Ptr 427a6ad9312f04edb98e0f5b7c4e2596
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  deepseq-1.4.2.0@deepseq-1.4.2.0:Control.DeepSeq 3b9ddb93b8ec16cf9a98d6096b46c390
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  Control.Memory.Region 308182c83bf046edf073fad284bcd617
  exports: 0c21e32b92bdaf94d0d4d90814626648
  G 5206da058dee6b52317e30a2eceb5c81
  V 761191645162463b83c4dd72888da9ec
import  -/  Foreign.R.Internal 94b91017c41283795b0b9850baa548e1
  exports: c0d5408e19dcf48aa85ceb904e52646b
  SEXP fc0be32d064254795db93fc76b1941a7
  SEXP e854911eaf3995eafd7923a39be3730e
  SEXPInfo 24db3b4c99951373613e4cb157d7387b
  SEXPInfo 9d214aad3b6633e81e3c3d084c00a52b
  SEXPREC 40cf897b0e8734016b53580ffa7529c0
  SomeSEXP ac06eddac9c804dceae070cd71dda1a9
  SomeSEXP 2d223e0ee1874a597046c351c68c0d5d
  asTypeOf 2dff8bd562e00213d8bd23a10773c79d
  baseEnv 15c2e9caa8d1bf073e2b44b4e3784701
  cIntFromEnum af90f372180d41f18ce435743f2edd49
  cUIntFromSingEnum 434792366c479a97c0d73c183267ff92
  cast 501e93daec148bbca57637c7fcf43886
  emptyEnv a0bcdfbc5bc197c0a1e56ad853aa0d82
  getAttribute 42d9889e67247148b3b4e811800d0204
  getAttributes 5ae2952a41e309cb11169fe857ec652f
  globalEnv da9dd2c1f6db587a751b529ea3af632f
  infoDebug 42014baa6fc63adc04dd249dde85ecc7
  infoGcCls 435eb73e0e65729da591387197254d22
  infoGcGen 4e054c45d5c356cc7d76cb26c3f38987
  infoGp 1d0c10ea07aa320a4df3819950bd28e6
  infoMark 14518be1d0eebb14e6f42774c892b4e9
  infoNamed 85ae89b968ad5362cd7e66c09245cdb1
  infoObj 31684c667de64fe4d997d83db1e9d802
  infoSpare 04d24fc2825f0a7af1876a6b2c3833e2
  infoTrace 54cba3d3db45e38fabf1807532cac0c9
  infoType 371c06245d4bd9fdf959de07485f76e1
  interruptsPending e7a29b53890153e1240bb95aa8bd3d31
  isRInteractive 4cabb6ad3770e8ad5f46b7166c3e60d4
  isS4 f6704e2f36041851f8f1a0db48a1e09f
  length 7b00fa24a3705c784a67bedc5d336182
  mark 97c98b915fa4ed4c1696f07408e08fbf
  missingArg fb827e50ac9e05a6832c735f46e4a6cb
  named 686fce3819fabac71e89078f2a9c0971
  nilValue 5ad7899bdebb0f6c79ad98f1ab880349
  peekInfo a1f5a9ee4d52360b1edf2713d67bff5d
  pokeInfo 922e4a93b92c9224c81218fe9e36cab9
  release 5116a27e38d30bf46ba100a28ca95c3e
  setAttributes 5142646483ea567492e622ee85a9d6cd
  setCar 6731a61b68657699781777d181086d19
  setCdr 6bd7d7a38eaed97ba3e27ff0856179b5
  setTag 9bc1906902b2d818bb3ba093f6b267b6
  sexp 1268627fcf8e40c2ecce670fbe030f70
  signalHandlers 785763aa1d824117cee651020952d368
  somesexp 8c4a4dc73d79a8e61b277b88ce8fe44e
  typeOf e26b9c7c09b9012981d3d2dc3a28898b
  unSEXP ac9a9f4ac5a481a3cc9393d42bf465e3
  unSomeSEXP ca36941a32aa8d757e49edcb3c310066
  unboundValue d7e6be1a04080a2cc4c7de2b8a146335
  unsafeCoerce 2e39492f3a025c453536013a0cfc7981
  unsafeRelease 9fd97ad066a257ca40faf80b46003d47
  unsafeSEXPToVectorPtr ad9529ee338bb707cc43d0da4de9d170
  unsafeVectorPtrToSEXP e892d6545c9bcd52f6349b6f827c1680
  unsexp 1573041870e0760e000ed172b72eb84f
import  -/  Foreign.R.Type 87886be580abef21e3eb082d49bd5e09
  exports: 4a9e8ba576dbff5e9a94102d7ea58a6b
  Any a734370b2cac1dac40b0e4feb41135b0
  Builtin d8ac72169caf3a576f432d1d82537515
  Bytecode 85ce11fdb1549940b92a224571a5736e
  Char 5a1ac22d2987bdd3eece5f743d2cb5f4
  Closure f25a5ab3f8557db5885d7c165eba218f
  Complex e3ab53f74c77296d0ba4be591701521d
  DotDotDot 0fa1c57a0a041b5663475fe88029b40f
  Env bef9e3e9269a52cbeb1c06d7ded3b526
  Expr be9c3f2d7dd8742451490d026e98e87c
  ExtPtr 47fbb737cdf190aa2f58d5acfa226e26
  FALSE e3632e8ae25aaa4a2b2ba864ba37d95e
  Free 01bcdcdeb50f6bf0c8103a623f609147
  Fun 689f648d2d4e697bb651398a00dba211
  Int 6bcba177d987d55800c18b81ba8743df
  IsExpression 8319442ef302f2480c0bc1dd672b73e2
  IsGenericVector 9d807e27543e580c446b617ade3715c9
  IsList bd77f97006a8afe5d65288be25c8a267
  IsPairList 7ac8f46c98b128926b8b9677d3b322c5
  IsVector 0143b1d3b569e92594aeca4f8bd230af
  Lang b3937d90d734f5d0b0900acf81c0bedf
  List f4ae464dc873c2e846b875004ec7042b
  Logical 7bdfc2078965c38226b1ce131bf680a9
  Logical 9963a440f8731b94f650595bd8b72193
  NA cc3bb2869cee657681dfb4579e6d521f
  New 2f2dc697a1facab6a3cb5d97b5cad27e
  Nil 212555b06d565953b4a32f21b70b2d75
  PairList 3bde7d8f308b061ddd799f9a95c4ead0
  Promise dffc4a41a38f4090cb5d9ef15da74140
  Raw d02f4414723e232e799f99e1614148a7
  Real 0c81d244b1d6437d5b712aeb06759a1e
  S4 472f50bf953d5d0dba9f06c0e2b328d2
  SAny 4f6873f9584bd610a73971af18494431
  SBuiltin 5c321cc3cbb4e6612e25fca793420e9f
  SBytecode fefdd504cf6ae64a32ea21d896978f77
  SChar 7dc1f7723988eefa7793c176e4cacac7
  SClosure 424ec79a35fb953d1e5f31309bf16222
  SComplex 54b81e8707d38c4b469613f5223eae9f
  SDotDotDot 37d8886fa4739d864be514b9faea7874
  SEXPTYPE afeb9caa0ff491cd3c753bbb63a08899
  SEnv ee376fb87c528f957ed253687f51b856
  SExpr 11c192ce841f3d4ec46bbf2d3483fa18
  SExtPtr e7fd51683b5fbaaa451ecdac64a3055b
  SFree ba9374f0ac04f2ee55df637df4cde9c3
  SFun 57c5d9f88dfc7a0b647dcfbce32b5b5c
  SInt 6e04e257d758aaf7f71ade6e64c4de22
  SLang e7598c5c287e53938034c858291fa1e9
  SList 51a5845870cf2c7b7607552b2a0f73af
  SLogical 8b0066778b273512d3b678fb0ab9bd5e
  SNew 0698e75ea9173fa247dba67f8ef21830
  SNil 069deb2411a05720accb835b6a0026b5
  SPromise 800c92b84a35fd8f5cd3e65de868ad92
  SRaw 717cc0b9ac67d9fdb83f209cc6bf70bb
  SReal 3d68441893b05c6081a311dd708dd8bb
  SS4 cd465e7e43bd4b297098275cd06e5cbf
  SSEXPTYPE 86bcbd3d4f0ba71e6665b69a8de66c05
  SSpecial c969713b2991a088e7fc93af821cfc74
  SString a839f70b2d1e71f32547a442f73a1af5
  SSymbol 139b97f0751773544fde87dfbffca0a9
  SVector 5bde52973c7e9820a40efd260026251b
  SWeakRef 69e2485adcd00e7e91a9cda5e2757816
  Special 4a537229a8b3c2392f94a647bbc6d7a7
  String dbce0f4ae053a2b4d564fb855017ab2a
  Symbol d255e2f2703d9aa2d62ec00a540bd8d4
  TRUE d80b8ab95dff1d047e7b6791bef92f07
  Vector f4e580af838f2d80bd3b1cd7b62854f9
  WeakRef 2f6932839ba059294e2a1d00d44fbd1a
import  -/  Language.R.HExp db5873273ba29246ea59d721e9255d15
  exports: f46a428a6a4652f8ba8c0092a268096b
import  -/  primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive 6f29f7c5aeee7400d08244e0179fc37e
import  -/  singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons 96f581fbb6b163dc76612f9ad2e8eb18
import  -/  singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Prelude.Instances 4ecd6ec728bfe64891bdfed50c41aa5d
addDependentFile "src/Foreign/R.chs"
addDependentFile "/datascience/bin/stack/programs/x86_64-linux/ghc-8.0.2/lib/ghc-8.0.2/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-1.24.2.0/build/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
60eab699d3ba055a746521f998ce3353
  $fEnumCEType :: GHC.Enum.Enum Foreign.R.CEType
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.R.CEType
                  Foreign.R.$fEnumCEType_$csucc
                  Foreign.R.$fEnumCEType_$cpred
                  Foreign.R.$fEnumCEType_$ctoEnum
                  Foreign.R.$fEnumCEType_$cfromEnum
                  Foreign.R.$fEnumCEType_$cenumFrom
                  Foreign.R.$fEnumCEType_$cenumFromThen
                  Foreign.R.$fEnumCEType_$cenumFromTo
                  Foreign.R.$fEnumCEType_$cenumFromThenTo -}
60eab699d3ba055a746521f998ce3353
  $fEnumCEType1 :: Foreign.R.CEType
  {- Strictness: x -}
60eab699d3ba055a746521f998ce3353
  $fEnumCEType2 :: GHC.Prim.Int# -> Foreign.R.CEType
  {- Arity: 1, Strictness: <L,U>x -}
b29f6d93671dd7b1121d94848566b32f
  $fEnumCEType3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 99#) -}
227a125fc13e8da4abd5b2a11d6fa19d
  $fEnumCEType4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5#) -}
40cf4c0778723d8b9d8cb6a1e7d54a0a
  $fEnumCEType5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
9767042f1dd399e42cd1b8ef4adf1c60
  $fEnumCEType6 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
02b8973eb8c6ad0e1102163521976b54
  $fEnumCEType7 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
2b9743ee2d20ca20a24f102056773aeb
  $fEnumCEType8 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
60eab699d3ba055a746521f998ce3353
  $fEnumCEType9 :: Foreign.R.CEType
  {- Strictness: x -}
60eab699d3ba055a746521f998ce3353
  $fEnumCEType_$cenumFrom :: Foreign.R.CEType -> [Foreign.R.CEType]
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (from :: Foreign.R.CEType) ->
                 Foreign.R.$fEnumCEType_$cenumFromTo from Foreign.R.CE_ANY) -}
60eab699d3ba055a746521f998ce3353
  $fEnumCEType_$cenumFromThen ::
    Foreign.R.CEType -> Foreign.R.CEType -> [Foreign.R.CEType]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: Foreign.R.CEType) (y :: Foreign.R.CEType) ->
                 let {
                   $j :: GHC.Prim.Int# -> [Foreign.R.CEType]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x1 :: GHC.Prim.Int#)[OneShot] ->
                     case y of wild {
                       Foreign.R.CE_NATIVE
                       -> GHC.Base.map
                            @ GHC.Types.Int
                            @ Foreign.R.CEType
                            Foreign.R.$fEnumCEType_$ctoEnum
                            (GHC.Enum.efdInt x1 0#)
                       Foreign.R.CE_UTF8
                       -> GHC.Base.map
                            @ GHC.Types.Int
                            @ Foreign.R.CEType
                            Foreign.R.$fEnumCEType_$ctoEnum
                            (GHC.Enum.efdInt x1 1#)
                       Foreign.R.CE_LATIN1
                       -> GHC.Base.map
                            @ GHC.Types.Int
                            @ Foreign.R.CEType
                            Foreign.R.$fEnumCEType_$ctoEnum
                            (GHC.Enum.efdInt x1 2#)
                       Foreign.R.CE_BYTES
                       -> GHC.Base.map
                            @ GHC.Types.Int
                            @ Foreign.R.CEType
                            Foreign.R.$fEnumCEType_$ctoEnum
                            (GHC.Enum.efdInt x1 3#)
                       Foreign.R.CE_SYMBOL
                       -> GHC.Base.map
                            @ GHC.Types.Int
                            @ Foreign.R.CEType
                            Foreign.R.$fEnumCEType_$ctoEnum
                            (GHC.Enum.efdInt x1 5#)
                       Foreign.R.CE_ANY
                       -> GHC.Base.map
                            @ GHC.Types.Int
                            @ Foreign.R.CEType
                            Foreign.R.$fEnumCEType_$ctoEnum
                            (GHC.Enum.efdInt x1 99#) }
                 } in
                 case x of wild {
                   Foreign.R.CE_NATIVE -> $j 0#
                   Foreign.R.CE_UTF8 -> $j 1#
                   Foreign.R.CE_LATIN1 -> $j 2#
                   Foreign.R.CE_BYTES -> $j 3#
                   Foreign.R.CE_SYMBOL -> $j 5#
                   Foreign.R.CE_ANY -> $j 99# }) -}
60eab699d3ba055a746521f998ce3353
  $fEnumCEType_$cenumFromThenTo ::
    Foreign.R.CEType
    -> Foreign.R.CEType -> Foreign.R.CEType -> [Foreign.R.CEType]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U> -}
60eab699d3ba055a746521f998ce3353
  $fEnumCEType_$cenumFromTo ::
    Foreign.R.CEType -> Foreign.R.CEType -> [Foreign.R.CEType]
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: (\ (from :: Foreign.R.CEType)
                   (to :: Foreign.R.CEType) ->
                 letrec {
                   go :: Foreign.R.CEType -> [Foreign.R.CEType]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (v :: Foreign.R.CEType) ->
                     let {
                       $j :: GHC.Prim.Int# -> [Foreign.R.CEType]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (x# :: GHC.Prim.Int#)[OneShot] ->
                         let {
                           $j1 :: GHC.Prim.Int# -> [Foreign.R.CEType]
                             {- Arity: 1, Strictness: <S,U> -}
                           = \ (y# :: GHC.Prim.Int#)[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.<# x# y#) of wild {
                               GHC.Types.False
                               -> case GHC.Prim.tagToEnum#
                                         @ GHC.Types.Bool
                                         (GHC.Prim.==# x# y#) of wild1 {
                                    GHC.Types.False -> GHC.Types.[] @ Foreign.R.CEType
                                    GHC.Types.True
                                    -> GHC.Types.:
                                         @ Foreign.R.CEType
                                         v
                                         (GHC.Types.[] @ Foreign.R.CEType) }
                               GHC.Types.True
                               -> GHC.Types.:
                                    @ Foreign.R.CEType
                                    v
                                    (go (Foreign.R.$fEnumCEType_$csucc v)) }
                         } in
                         case to of wild {
                           Foreign.R.CE_NATIVE -> $j1 0#
                           Foreign.R.CE_UTF8 -> $j1 1#
                           Foreign.R.CE_LATIN1 -> $j1 2#
                           Foreign.R.CE_BYTES -> $j1 3#
                           Foreign.R.CE_SYMBOL -> $j1 5#
                           Foreign.R.CE_ANY -> $j1 99# }
                     } in
                     case v of wild {
                       Foreign.R.CE_NATIVE -> $j 0#
                       Foreign.R.CE_UTF8 -> $j 1#
                       Foreign.R.CE_LATIN1 -> $j 2#
                       Foreign.R.CE_BYTES -> $j 3#
                       Foreign.R.CE_SYMBOL -> $j 5#
                       Foreign.R.CE_ANY -> $j 99# }
                 } in
                 go from) -}
60eab699d3ba055a746521f998ce3353
  $fEnumCEType_$cfromEnum :: Foreign.R.CEType -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foreign.R.CEType) ->
                 case ds of wild {
                   Foreign.R.CE_NATIVE -> Foreign.R.$fEnumCEType8
                   Foreign.R.CE_UTF8 -> Foreign.R.$fEnumCEType7
                   Foreign.R.CE_LATIN1 -> Foreign.R.$fEnumCEType6
                   Foreign.R.CE_BYTES -> Foreign.R.$fEnumCEType5
                   Foreign.R.CE_SYMBOL -> Foreign.R.$fEnumCEType4
                   Foreign.R.CE_ANY -> Foreign.R.$fEnumCEType3 }) -}
60eab699d3ba055a746521f998ce3353
  $fEnumCEType_$cpred :: Foreign.R.CEType -> Foreign.R.CEType
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foreign.R.CEType) ->
                 case ds of wild {
                   Foreign.R.CE_NATIVE -> Foreign.R.$fEnumCEType9
                   Foreign.R.CE_UTF8 -> Foreign.R.CE_NATIVE
                   Foreign.R.CE_LATIN1 -> Foreign.R.CE_UTF8
                   Foreign.R.CE_BYTES -> Foreign.R.CE_LATIN1
                   Foreign.R.CE_SYMBOL -> Foreign.R.CE_BYTES
                   Foreign.R.CE_ANY -> Foreign.R.CE_SYMBOL }) -}
60eab699d3ba055a746521f998ce3353
  $fEnumCEType_$csucc :: Foreign.R.CEType -> Foreign.R.CEType
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foreign.R.CEType) ->
                 case ds of wild {
                   Foreign.R.CE_NATIVE -> Foreign.R.CE_UTF8
                   Foreign.R.CE_UTF8 -> Foreign.R.CE_LATIN1
                   Foreign.R.CE_LATIN1 -> Foreign.R.CE_BYTES
                   Foreign.R.CE_BYTES -> Foreign.R.CE_SYMBOL
                   Foreign.R.CE_SYMBOL -> Foreign.R.CE_ANY
                   Foreign.R.CE_ANY -> Foreign.R.$fEnumCEType1 }) -}
60eab699d3ba055a746521f998ce3353
  $fEnumCEType_$ctoEnum :: GHC.Types.Int -> Foreign.R.CEType
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 -> Foreign.R.$w$ctoEnum ww1 }) -}
60eab699d3ba055a746521f998ce3353
  $fEqCEType :: GHC.Classes.Eq Foreign.R.CEType
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.R.CEType
                  Foreign.R.$fEqCEType_$c==
                  Foreign.R.$fEqCEType_$c/= -}
60eab699d3ba055a746521f998ce3353
  $fEqCEType_$c/= ::
    Foreign.R.CEType -> Foreign.R.CEType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Foreign.R.CEType) (b :: Foreign.R.CEType) ->
                 case a of wild {
                   Foreign.R.CE_NATIVE
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Foreign.R.CE_NATIVE -> GHC.Types.False }
                   Foreign.R.CE_UTF8
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Foreign.R.CE_UTF8 -> GHC.Types.False }
                   Foreign.R.CE_LATIN1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Foreign.R.CE_LATIN1 -> GHC.Types.False }
                   Foreign.R.CE_BYTES
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Foreign.R.CE_BYTES -> GHC.Types.False }
                   Foreign.R.CE_SYMBOL
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Foreign.R.CE_SYMBOL -> GHC.Types.False }
                   Foreign.R.CE_ANY
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Foreign.R.CE_ANY -> GHC.Types.False } }) -}
60eab699d3ba055a746521f998ce3353
  $fEqCEType_$c== ::
    Foreign.R.CEType -> Foreign.R.CEType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Foreign.R.CEType) (ds1 :: Foreign.R.CEType) ->
                 case ds of wild {
                   Foreign.R.CE_NATIVE
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Foreign.R.CE_NATIVE -> GHC.Types.True }
                   Foreign.R.CE_UTF8
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Foreign.R.CE_UTF8 -> GHC.Types.True }
                   Foreign.R.CE_LATIN1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Foreign.R.CE_LATIN1 -> GHC.Types.True }
                   Foreign.R.CE_BYTES
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Foreign.R.CE_BYTES -> GHC.Types.True }
                   Foreign.R.CE_SYMBOL
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Foreign.R.CE_SYMBOL -> GHC.Types.True }
                   Foreign.R.CE_ANY
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Foreign.R.CE_ANY -> GHC.Types.True } }) -}
60eab699d3ba055a746521f998ce3353
  $fShowCEType :: GHC.Show.Show Foreign.R.CEType
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.R.CEType
                  Foreign.R.$fShowCEType_$cshowsPrec
                  Foreign.R.$fShowCEType_$cshow
                  Foreign.R.$fShowCEType_$cshowList -}
9cbb15688fb56ce384ea7e4184b642ca
  $fShowCEType1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CE_ANY"#) -}
8fd8b377dbcabf49db0c50ecf881949a
  $fShowCEType2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CE_SYMBOL"#) -}
b5a4c447a5515b25cd3df1d048dbf198
  $fShowCEType3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CE_BYTES"#) -}
5290e8443d0339783e031279de2adc22
  $fShowCEType4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CE_LATIN1"#) -}
ee05ddf69d9f56cc544eb54b5ac339e5
  $fShowCEType5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CE_UTF8"#) -}
c19e49eca88a19041a80cdd9838a2803
  $fShowCEType6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CE_NATIVE"#) -}
60eab699d3ba055a746521f998ce3353
  $fShowCEType_$cshow :: Foreign.R.CEType -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Foreign.R.CEType) ->
                 Foreign.R.$fShowCEType_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
60eab699d3ba055a746521f998ce3353
  $fShowCEType_$cshowList :: [Foreign.R.CEType] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Foreign.R.CEType
                   Foreign.R.$w$cshowsPrec) -}
60eab699d3ba055a746521f998ce3353
  $fShowCEType_$cshowsPrec ::
    GHC.Types.Int -> Foreign.R.CEType -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Foreign.R.CEType)
                   (w2 :: GHC.Base.String) ->
                 Foreign.R.$w$cshowsPrec w1 w2) -}
0360c59ad8ce8e1c8f18fa1c4e4e3c6c
  $tc'CE_ANY :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14131458242017906448##
                   396257046895374842##
                   Foreign.R.$trModule
                   Foreign.R.$tc'CE_ANY1) -}
525428e7940b5e65f20a276c0ca8235a
  $tc'CE_ANY1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CE_ANY"#) -}
3ecf126345d2ff1bd8cfb394cfcb6536
  $tc'CE_BYTES :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6438780864092904899##
                   10376630756219656802##
                   Foreign.R.$trModule
                   Foreign.R.$tc'CE_BYTES1) -}
fbc37cd30fac1f7e6380390e8fa6b723
  $tc'CE_BYTES1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CE_BYTES"#) -}
96312f3e6ecb6409cf7ba369af42f997
  $tc'CE_LATIN1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1515914884419200912##
                   16150724552137860203##
                   Foreign.R.$trModule
                   Foreign.R.$tc'CE_LATIN2) -}
eb1f09a2ca35429db3b9f6314c72ceaf
  $tc'CE_LATIN2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CE_LATIN1"#) -}
3adbae9427824c2728fe655009a61fb0
  $tc'CE_NATIVE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16932676942989598233##
                   9396269796457522763##
                   Foreign.R.$trModule
                   Foreign.R.$tc'CE_NATIVE1) -}
e199916d385f25633b98e1be2b52ee5b
  $tc'CE_NATIVE1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CE_NATIVE"#) -}
e4c73c21183c3ecd39949ffbad6b6de5
  $tc'CE_SYMBOL :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9314339233873073556##
                   8062801796608973805##
                   Foreign.R.$trModule
                   Foreign.R.$tc'CE_SYMBOL1) -}
8a0c7d6b3d5a6f5cc32cd000a8ca755a
  $tc'CE_SYMBOL1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CE_SYMBOL"#) -}
794cf44b8891d60d51afbc93e1c8e992
  $tc'CE_UTF1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CE_UTF8"#) -}
7014af186003316770057ccc3474512e
  $tc'CE_UTF8 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11429126268192492362##
                   3632514205955228163##
                   Foreign.R.$trModule
                   Foreign.R.$tc'CE_UTF1) -}
c3be00a0b007271d35a317bffc1e7bba
  $tcCEType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1614366672900074721##
                   9954225952333281949##
                   Foreign.R.$trModule
                   Foreign.R.$tcCEType1) -}
48df2f5a49390b5226301a56d425ddcf
  $tcCEType1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "CEType"#) -}
e97cc2f76c5ea9d2990e34332d512189
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Foreign.R.$trModule2
                   Foreign.R.$trModule1) -}
ae2ced9c393a5e60f9997db4c87013ad
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Foreign.R"#) -}
3e73431f2460cef765a853deddded134
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs"#) -}
60eab699d3ba055a746521f998ce3353
  $w$cshowsPrec ::
    Foreign.R.CEType -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: Foreign.R.CEType) (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Foreign.R.CE_NATIVE
                   -> GHC.Base.++ @ GHC.Types.Char Foreign.R.$fShowCEType6 w1
                   Foreign.R.CE_UTF8
                   -> GHC.Base.++ @ GHC.Types.Char Foreign.R.$fShowCEType5 w1
                   Foreign.R.CE_LATIN1
                   -> GHC.Base.++ @ GHC.Types.Char Foreign.R.$fShowCEType4 w1
                   Foreign.R.CE_BYTES
                   -> GHC.Base.++ @ GHC.Types.Char Foreign.R.$fShowCEType3 w1
                   Foreign.R.CE_SYMBOL
                   -> GHC.Base.++ @ GHC.Types.Char Foreign.R.$fShowCEType2 w1
                   Foreign.R.CE_ANY
                   -> GHC.Base.++ @ GHC.Types.Char Foreign.R.$fShowCEType1 w1 }) -}
60eab699d3ba055a746521f998ce3353
  $w$ctoEnum :: GHC.Prim.Int# -> Foreign.R.CEType
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case ww of ds {
                   DEFAULT -> Foreign.R.$fEnumCEType2 ds
                   0# -> Foreign.R.CE_NATIVE
                   1# -> Foreign.R.CE_UTF8
                   2# -> Foreign.R.CE_LATIN1
                   3# -> Foreign.R.CE_BYTES
                   5# -> Foreign.R.CE_SYMBOL
                   99# -> Foreign.R.CE_ANY }) -}
20c687622dc94283ebd3f974da075fdf
  $wallocVector ::
    Foreign.R.Type.SSEXPTYPE a
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP Control.Memory.Region.V a #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ (a :: Foreign.R.Type.SEXPTYPE)
                   (w :: Foreign.R.Type.SSEXPTYPE a)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Foreign.R.Type.$w$cfromEnum
                        (Foreign.R.Type.$fSingKindSEXPTYPE_$cfromSing @ a w)
                          `cast`
                        (Sub (Foreign.R.Type.D:R:DemoteRepSEXPTYPE[0])) of ww1 { DEFAULT ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_allocVector GHC.Prim.Word#
                                                                                            -> GHC.Prim.Int#
                                                                                            -> GHC.Prim.State#
                                                                                                 GHC.Prim.RealWorld
                                                                                            -> (# GHC.Prim.State#
                                                                                                    GHC.Prim.RealWorld,
                                                                                                  GHC.Prim.Addr# #)}
                        (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# ww1))
                        ww
                        w1 of wild { (#,#) ds ds1 ->
                 (# ds,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds1)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           Control.Memory.Region.V a>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <Control.Memory.Region.V>_P <a>_P))) #) } }) -}
adb9e886f42cc49a3b96dd0bff3bd1fa
  $wallocVectorProtected ::
    Foreign.R.Type.SSEXPTYPE a
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s a #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ (a :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   (w :: Foreign.R.Type.SSEXPTYPE a)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Foreign.R.Type.$w$cfromEnum
                        (Foreign.R.Type.$fSingKindSEXPTYPE_$cfromSing @ a w)
                          `cast`
                        (Sub (Foreign.R.Type.D:R:DemoteRepSEXPTYPE[0])) of ww1 { DEFAULT ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_allocVector GHC.Prim.Word#
                                                                                            -> GHC.Prim.Int#
                                                                                            -> GHC.Prim.State#
                                                                                                 GHC.Prim.RealWorld
                                                                                            -> (# GHC.Prim.State#
                                                                                                    GHC.Prim.RealWorld,
                                                                                                  GHC.Prim.Addr# #)}
                        (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# ww1))
                        ww
                        w1 of wild { (#,#) ds ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_protect GHC.Prim.Addr#
                                                                                        -> GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld
                                                                                        -> (# GHC.Prim.State#
                                                                                                GHC.Prim.RealWorld,
                                                                                              GHC.Prim.Addr# #)}
                        ds1
                        ds of wild1 { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp s a>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P))) #) } } }) -}
0eaf23152d0f5f9c90aabe40cdeee2bf
  $wmkCharCE ::
    Foreign.R.CEType
    -> GHC.Prim.Addr#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Char #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ (w :: Foreign.R.CEType)
                   (ww :: GHC.Prim.Addr#)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of wild {
                   Foreign.R.CE_NATIVE
                   -> case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_mkCharCE GHC.Prim.Addr#
                                                                                              -> GHC.Prim.Int#
                                                                                              -> GHC.Prim.State#
                                                                                                   GHC.Prim.RealWorld
                                                                                              -> (# GHC.Prim.State#
                                                                                                      GHC.Prim.RealWorld,
                                                                                                    GHC.Prim.Addr# #)}
                             ww
                             0#
                             w1 of wild1 { (#,#) ds ds1 ->
                      (# ds,
                         (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds1)
                           `cast`
                         (Trans
                              (GHC.Ptr.Ptr
                                 <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                Control.Memory.Region.V
                                                                'Foreign.R.Type.Char>)_R
                              (Sym (Foreign.R.Internal.N:SEXP[0]
                                        <Control.Memory.Region.V>_P <'Foreign.R.Type.Char>_P))) #) }
                   Foreign.R.CE_UTF8
                   -> case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_mkCharCE GHC.Prim.Addr#
                                                                                              -> GHC.Prim.Int#
                                                                                              -> GHC.Prim.State#
                                                                                                   GHC.Prim.RealWorld
                                                                                              -> (# GHC.Prim.State#
                                                                                                      GHC.Prim.RealWorld,
                                                                                                    GHC.Prim.Addr# #)}
                             ww
                             1#
                             w1 of wild1 { (#,#) ds ds1 ->
                      (# ds,
                         (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds1)
                           `cast`
                         (Trans
                              (GHC.Ptr.Ptr
                                 <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                Control.Memory.Region.V
                                                                'Foreign.R.Type.Char>)_R
                              (Sym (Foreign.R.Internal.N:SEXP[0]
                                        <Control.Memory.Region.V>_P <'Foreign.R.Type.Char>_P))) #) }
                   Foreign.R.CE_LATIN1
                   -> case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_mkCharCE GHC.Prim.Addr#
                                                                                              -> GHC.Prim.Int#
                                                                                              -> GHC.Prim.State#
                                                                                                   GHC.Prim.RealWorld
                                                                                              -> (# GHC.Prim.State#
                                                                                                      GHC.Prim.RealWorld,
                                                                                                    GHC.Prim.Addr# #)}
                             ww
                             2#
                             w1 of wild1 { (#,#) ds ds1 ->
                      (# ds,
                         (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds1)
                           `cast`
                         (Trans
                              (GHC.Ptr.Ptr
                                 <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                Control.Memory.Region.V
                                                                'Foreign.R.Type.Char>)_R
                              (Sym (Foreign.R.Internal.N:SEXP[0]
                                        <Control.Memory.Region.V>_P <'Foreign.R.Type.Char>_P))) #) }
                   Foreign.R.CE_BYTES
                   -> case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_mkCharCE GHC.Prim.Addr#
                                                                                              -> GHC.Prim.Int#
                                                                                              -> GHC.Prim.State#
                                                                                                   GHC.Prim.RealWorld
                                                                                              -> (# GHC.Prim.State#
                                                                                                      GHC.Prim.RealWorld,
                                                                                                    GHC.Prim.Addr# #)}
                             ww
                             3#
                             w1 of wild1 { (#,#) ds ds1 ->
                      (# ds,
                         (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds1)
                           `cast`
                         (Trans
                              (GHC.Ptr.Ptr
                                 <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                Control.Memory.Region.V
                                                                'Foreign.R.Type.Char>)_R
                              (Sym (Foreign.R.Internal.N:SEXP[0]
                                        <Control.Memory.Region.V>_P <'Foreign.R.Type.Char>_P))) #) }
                   Foreign.R.CE_SYMBOL
                   -> case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_mkCharCE GHC.Prim.Addr#
                                                                                              -> GHC.Prim.Int#
                                                                                              -> GHC.Prim.State#
                                                                                                   GHC.Prim.RealWorld
                                                                                              -> (# GHC.Prim.State#
                                                                                                      GHC.Prim.RealWorld,
                                                                                                    GHC.Prim.Addr# #)}
                             ww
                             5#
                             w1 of wild1 { (#,#) ds ds1 ->
                      (# ds,
                         (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds1)
                           `cast`
                         (Trans
                              (GHC.Ptr.Ptr
                                 <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                Control.Memory.Region.V
                                                                'Foreign.R.Type.Char>)_R
                              (Sym (Foreign.R.Internal.N:SEXP[0]
                                        <Control.Memory.Region.V>_P <'Foreign.R.Type.Char>_P))) #) }
                   Foreign.R.CE_ANY
                   -> case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_mkCharCE GHC.Prim.Addr#
                                                                                              -> GHC.Prim.Int#
                                                                                              -> GHC.Prim.State#
                                                                                                   GHC.Prim.RealWorld
                                                                                              -> (# GHC.Prim.State#
                                                                                                      GHC.Prim.RealWorld,
                                                                                                    GHC.Prim.Addr# #)}
                             ww
                             99#
                             w1 of wild1 { (#,#) ds ds1 ->
                      (# ds,
                         (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds1)
                           `cast`
                         (Trans
                              (GHC.Ptr.Ptr
                                 <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                Control.Memory.Region.V
                                                                'Foreign.R.Type.Char>)_R
                              (Sym (Foreign.R.Internal.N:SEXP[0]
                                        <Control.Memory.Region.V>_P
                                        <'Foreign.R.Type.Char>_P))) #) } }) -}
82ad741a018940bd3cbbef51574e1816
  $wmkWeakRef ::
    GHC.Prim.Addr#
    -> GHC.Prim.Addr#
    -> GHC.Prim.Addr#
    -> GHC.Types.Bool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.WeakRef #)
  {- Arity: 5, HasNoCafRefs, Strictness: <S,U><S,U><S,U><S,1*U><S,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   @ (b :: Foreign.R.Type.SEXPTYPE)
                   @ (c1 :: Foreign.R.Type.SEXPTYPE)
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.Prim.Addr#)
                   (ww2 :: GHC.Prim.Addr#)
                   (w :: GHC.Types.Bool)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of wild {
                   GHC.Types.False
                   -> case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_MakeWeakRef GHC.Prim.Addr#
                                                                                                -> GHC.Prim.Addr#
                                                                                                -> GHC.Prim.Addr#
                                                                                                -> GHC.Prim.Int#
                                                                                                -> GHC.Prim.State#
                                                                                                     GHC.Prim.RealWorld
                                                                                                -> (# GHC.Prim.State#
                                                                                                        GHC.Prim.RealWorld,
                                                                                                      GHC.Prim.Addr# #)}
                             ww
                             ww1
                             ww2
                             0#
                             w1 of wild1 { (#,#) ds ds1 ->
                      (# ds,
                         (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds1)
                           `cast`
                         (Trans
                              (GHC.Ptr.Ptr
                                 <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                Control.Memory.Region.V
                                                                'Foreign.R.Type.WeakRef>)_R
                              (Sym (Foreign.R.Internal.N:SEXP[0]
                                        <Control.Memory.Region.V>_P
                                        <'Foreign.R.Type.WeakRef>_P))) #) }
                   GHC.Types.True
                   -> case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_MakeWeakRef GHC.Prim.Addr#
                                                                                                -> GHC.Prim.Addr#
                                                                                                -> GHC.Prim.Addr#
                                                                                                -> GHC.Prim.Int#
                                                                                                -> GHC.Prim.State#
                                                                                                     GHC.Prim.RealWorld
                                                                                                -> (# GHC.Prim.State#
                                                                                                        GHC.Prim.RealWorld,
                                                                                                      GHC.Prim.Addr# #)}
                             ww
                             ww1
                             ww2
                             1#
                             w1 of wild1 { (#,#) ds ds1 ->
                      (# ds,
                         (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds1)
                           `cast`
                         (Trans
                              (GHC.Ptr.Ptr
                                 <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                Control.Memory.Region.V
                                                                'Foreign.R.Type.WeakRef>)_R
                              (Sym (Foreign.R.Internal.N:SEXP[0]
                                        <Control.Memory.Region.V>_P
                                        <'Foreign.R.Type.WeakRef>_P))) #) } }) -}
60eab699d3ba055a746521f998ce3353
  data CEType
    = CE_NATIVE | CE_UTF8 | CE_LATIN1 | CE_BYTES | CE_SYMBOL | CE_ANY
0eeb89e7217ea8e0302525d4f50efa0d
  type RLogical = 'Foreign.R.Type.Logical :: Foreign.R.Type.SEXPTYPE
12efc2d6507407c762763b432400a30a
  type SEXP0 = GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC
006f954cb453653a530d736508ad8246
  allocList ::
    GHC.Types.Int
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.List)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.allocList1
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.List>_R)) -}
04baa85ba7bc1866d15701d55b258450
  allocList1 ::
    GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.List #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a1 :: GHC.Types.Int)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1 of wild { GHC.Types.I# x# ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_allocList GHC.Prim.Int#
                                                                                          -> GHC.Prim.State#
                                                                                               GHC.Prim.RealWorld
                                                                                          -> (# GHC.Prim.State#
                                                                                                  GHC.Prim.RealWorld,
                                                                                                GHC.Prim.Addr# #)}
                        (GHC.Prim.narrow32Int# x#)
                        s of wild1 { (#,#) ds ds1 ->
                 (# ds,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds1)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           Control.Memory.Region.V
                                                           'Foreign.R.Type.List>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <Control.Memory.Region.V>_P
                                   <'Foreign.R.Type.List>_P))) #) } }) -}
4ae7a28b1379ff8c3d0d1cc9b0901ace
  allocSEXP ::
    Foreign.R.Type.SSEXPTYPE a
    -> GHC.Types.IO (Foreign.R.Internal.SEXP Control.Memory.Region.V a)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.allocSEXP1
                  `cast`
                (forall (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Type.SSEXPTYPE a>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP Control.Memory.Region.V a>_R)) -}
f5d3d06500e25f8d4ea70b8221917450
  allocSEXP1 ::
    Foreign.R.Type.SSEXPTYPE a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP Control.Memory.Region.V a #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: (\ @ (a :: Foreign.R.Type.SEXPTYPE)
                   (a1 :: Foreign.R.Type.SSEXPTYPE a)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Foreign.R.Type.$w$cfromEnum
                        (Foreign.R.Type.$fSingKindSEXPTYPE_$cfromSing @ a a1)
                          `cast`
                        (Sub (Foreign.R.Type.D:R:DemoteRepSEXPTYPE[0])) of ww { DEFAULT ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_allocSExp GHC.Prim.Word#
                                                                                          -> GHC.Prim.State#
                                                                                               GHC.Prim.RealWorld
                                                                                          -> (# GHC.Prim.State#
                                                                                                  GHC.Prim.RealWorld,
                                                                                                GHC.Prim.Addr# #)}
                        (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# ww))
                        s of wild { (#,#) ds ds1 ->
                 (# ds,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds1)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           Control.Memory.Region.V a>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <Control.Memory.Region.V>_P <a>_P))) #) } }) -}
baae24e9e27a16a83e3d16cb75aa5f5d
  allocVector ::
    Foreign.R.Type.IsVector a =>
    Foreign.R.Type.SSEXPTYPE a
    -> GHC.Types.Int
    -> GHC.Types.IO (Foreign.R.Internal.SEXP Control.Memory.Region.V a)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S,1*U><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.allocVector1
                  `cast`
                (forall (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Type.IsVector a>_R
                 ->_R <Foreign.R.Type.SSEXPTYPE a>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP Control.Memory.Region.V a>_R)) -}
b00e67ceba95278ad14543a7c6bd0a96
  allocVector1 ::
    Foreign.R.Type.IsVector a =>
    Foreign.R.Type.SSEXPTYPE a
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP Control.Memory.Region.V a #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S,1*U><S(S),1*U(U)><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ (a :: Foreign.R.Type.SEXPTYPE)
                   (w :: Foreign.R.Type.IsVector a)
                   (w1 :: Foreign.R.Type.SSEXPTYPE a)
                   (w2 :: GHC.Types.Int)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w2 of ww { GHC.Types.I# ww1 ->
                 Foreign.R.$wallocVector @ a w1 ww1 w3 }) -}
71347bce6e92254e0902672061881189
  allocVectorProtected ::
    Foreign.R.Type.IsVector a =>
    Foreign.R.Type.SSEXPTYPE a
    -> GHC.Types.Int -> GHC.Types.IO (Foreign.R.Internal.SEXP s a)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S,1*U><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.allocVectorProtected1
                  `cast`
                (forall (a :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <GHC.Types.*>_N).
                 <Foreign.R.Type.IsVector a>_R
                 ->_R <Foreign.R.Type.SSEXPTYPE a>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SEXP s a>_R)) -}
f74d0fd3092d5040275d69288dccf113
  allocVectorProtected1 ::
    Foreign.R.Type.IsVector a =>
    Foreign.R.Type.SSEXPTYPE a
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s a #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S,1*U><S(S),1*U(U)><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ (a :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   (w :: Foreign.R.Type.IsVector a)
                   (w1 :: Foreign.R.Type.SSEXPTYPE a)
                   (w2 :: GHC.Types.Int)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w2 of ww { GHC.Types.I# ww1 ->
                 Foreign.R.$wallocVectorProtected @ a @ s w1 ww1 w3 }) -}
da1b506114224ea7f78e92dac582c942
  car ::
    Foreign.R.Internal.SEXP s a
    -> GHC.Types.IO (Foreign.R.Internal.SomeSEXP s)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.car1
                  `cast`
                (forall (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP s>_R)) -}
cea8c4c333b333822b9e8f670a4a6e73
  car1 ::
    Foreign.R.Internal.SEXP s a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP s #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs CAR GHC.Prim.Addr#
                                                                                 -> GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld
                                                                                 -> (# GHC.Prim.State#
                                                                                         GHC.Prim.RealWorld,
                                                                                       GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    Foreign.R.Internal.SomeSEXP @ s @ GHC.Prim.Any ds3 #) } }) -}
d181c4ee237c8a4bbb33fe91f7dde1ea
  cdr ::
    Foreign.R.Internal.SEXP s a
    -> GHC.Types.IO (Foreign.R.Internal.SomeSEXP s)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.cdr1
                  `cast`
                (forall (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP s>_R)) -}
0d03cfb3bc05fd447b326347a71a8d7f
  cdr1 ::
    Foreign.R.Internal.SEXP s a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP s #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs CDR GHC.Prim.Addr#
                                                                                 -> GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld
                                                                                 -> (# GHC.Prim.State#
                                                                                         GHC.Prim.RealWorld,
                                                                                       GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    Foreign.R.Internal.SomeSEXP @ s @ GHC.Prim.Any ds3 #) } }) -}
b2a4a1e4e4ccded4c92342ae1eb26bbe
  char ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Char
    -> GHC.Types.IO Foreign.C.String.CString
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.char1
                  `cast`
                (forall (s :: <GHC.Types.*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Char>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <GHC.Ptr.Ptr Foreign.C.Types.CChar>_R)) -}
ecf2b646eda2bca97cd55bd6643e483b
  char1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Char
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Ptr.Ptr Foreign.C.Types.CChar #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Char)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Char>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Char, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_CHAR GHC.Prim.Addr#
                                                                                    -> GHC.Prim.State#
                                                                                         GHC.Prim.RealWorld
                                                                                    -> (# GHC.Prim.State#
                                                                                            GHC.Prim.RealWorld,
                                                                                          GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2, GHC.Ptr.Ptr @ Foreign.C.Types.CChar ds3 #) } }) -}
945eb4b29fdcbc4597296804db79744a
  closureBody ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure
    -> GHC.Types.IO (Foreign.R.Internal.SomeSEXP s)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.closureBody1
                  `cast`
                (forall (s :: <GHC.Types.*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP s>_R)) -}
3830175eed9b135e34e654696563c4d9
  closureBody1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP s #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Closure>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Closure, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs BODY GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    Foreign.R.Internal.SomeSEXP @ s @ GHC.Prim.Any ds3 #) } }) -}
e51a747ea539dc6bc849d5f13d201357
  closureEnv ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure
    -> GHC.Types.IO (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.closureEnv1
                  `cast`
                (forall (s :: <GHC.Types.*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env>_R)) -}
48b801c2019bd478571eb0ec5088009f
  closureEnv1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Closure>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Closure, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs CLOENV GHC.Prim.Addr#
                                                                                    -> GHC.Prim.State#
                                                                                         GHC.Prim.RealWorld
                                                                                    -> (# GHC.Prim.State#
                                                                                            GHC.Prim.RealWorld,
                                                                                          GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           s 'Foreign.R.Type.Env>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <s>_P <'Foreign.R.Type.Env>_P))) #) } }) -}
c3f3da4005a5810e0106ee1371f419e6
  closureFormals ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure
    -> GHC.Types.IO (Foreign.R.Internal.SEXP s Foreign.R.Type.PairList)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.closureFormals1
                  `cast`
                (forall (s :: <GHC.Types.*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP s Foreign.R.Type.PairList>_R)) -}
4904c86b8ffbc81b9d6917e37ddbd983
  closureFormals1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s Foreign.R.Type.PairList #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Closure>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Closure, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs FORMALS GHC.Prim.Addr#
                                                                                     -> GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld
                                                                                     -> (# GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld,
                                                                                           GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           s Foreign.R.Type.PairList>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <s>_P <Foreign.R.Type.PairList>_P))) #) } }) -}
8297e921cd836c8f19ce5988523dac04
  complex ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Complex
    -> GHC.Types.IO
         (GHC.Ptr.Ptr (Data.Complex.Complex GHC.Types.Double))
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.complex1
                  `cast`
                (forall (s :: <GHC.Types.*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Complex>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <GHC.Ptr.Ptr (Data.Complex.Complex GHC.Types.Double)>_R)) -}
61d29bb914a2875a42d24d5322c2df4e
  complex1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Complex
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Ptr.Ptr (Data.Complex.Complex GHC.Types.Double) #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Complex)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Complex>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Complex, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs COMPLEX GHC.Prim.Addr#
                                                                                     -> GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld
                                                                                     -> (# GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld,
                                                                                           GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ () ds3)
                      `cast`
                    (GHC.Ptr.Ptr
                       <(), Data.Complex.Complex GHC.Types.Double>)_R #) } }) -}
0100243ed4ac017e371118b3954f78cd
  cons ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s b
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.List)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.cons1
                  `cast`
                (forall (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N) (b :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R <Foreign.R.Internal.SEXP s b>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.List>_R)) -}
1d4a7805edb67c71107ce95c176722d9
  cons1 ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s b
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.List #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   @ (b :: Foreign.R.Type.SEXPTYPE)
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (a2 :: Foreign.R.Internal.SEXP s b)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case a2
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <b>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s b, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_cons GHC.Prim.Addr#
                                                                                     -> GHC.Prim.Addr#
                                                                                     -> GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld
                                                                                     -> (# GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld,
                                                                                           GHC.Prim.Addr# #)}
                        ds1
                        ds3
                        s1 of wild { (#,#) ds4 ds5 ->
                 (# ds4,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds5)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           Control.Memory.Region.V
                                                           'Foreign.R.Type.List>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <Control.Memory.Region.V>_P
                                   <'Foreign.R.Type.List>_P))) #) } } }) -}
886b288a17d53b744444c233a3994f0b
  envEnclosing ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Types.IO (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.envEnclosing1
                  `cast`
                (forall (s :: <GHC.Types.*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env>_R)) -}
73e6c0de3cc58a36cacfcb8ff01d0349
  envEnclosing1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Env>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Env, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs ENCLOS GHC.Prim.Addr#
                                                                                    -> GHC.Prim.State#
                                                                                         GHC.Prim.RealWorld
                                                                                    -> (# GHC.Prim.State#
                                                                                            GHC.Prim.RealWorld,
                                                                                          GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           s 'Foreign.R.Type.Env>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <s>_P <'Foreign.R.Type.Env>_P))) #) } }) -}
f59a67f0cec9c5feccb85268a3be57e8
  envFrame ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Types.IO (Foreign.R.Internal.SEXP s Foreign.R.Type.PairList)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.envFrame1
                  `cast`
                (forall (s :: <GHC.Types.*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP s Foreign.R.Type.PairList>_R)) -}
8ec2b21b79dc4b27851fb6a01df82aa8
  envFrame1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s Foreign.R.Type.PairList #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Env>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Env, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs FRAME GHC.Prim.Addr#
                                                                                   -> GHC.Prim.State#
                                                                                        GHC.Prim.RealWorld
                                                                                   -> (# GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld,
                                                                                         GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           s Foreign.R.Type.PairList>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <s>_P <Foreign.R.Type.PairList>_P))) #) } }) -}
74892fd0d89d6884df2a880bcf36fe78
  envHashtab ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Types.IO (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Vector)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.envHashtab1
                  `cast`
                (forall (s :: <GHC.Types.*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Vector>_R)) -}
cf33571e157f00d749bb8c700ad290aa
  envHashtab1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s 'Foreign.R.Type.Vector #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Env>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Env, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs HASHTAB GHC.Prim.Addr#
                                                                                     -> GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld
                                                                                     -> (# GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld,
                                                                                           GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           s 'Foreign.R.Type.Vector>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <s>_P <'Foreign.R.Type.Vector>_P))) #) } }) -}
a164a12b19a5f056758721bce39ee4aa
  eval ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Types.IO
         (Foreign.R.Internal.SomeSEXP Control.Memory.Region.V)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.eval1
                  `cast`
                (forall (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SomeSEXP Control.Memory.Region.V>_R)) -}
e3832f9764568dd86c281d8e31490a67
  eval1 ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP Control.Memory.Region.V #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (a2 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case a2
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Env>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Env, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_eval GHC.Prim.Addr#
                                                                                     -> GHC.Prim.Addr#
                                                                                     -> GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld
                                                                                     -> (# GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld,
                                                                                           GHC.Prim.Addr# #)}
                        ds1
                        ds3
                        s1 of wild { (#,#) ds4 ds5 ->
                 (# ds4,
                    Foreign.R.Internal.SomeSEXP
                      @ Control.Memory.Region.V
                      @ GHC.Prim.Any
                      ds5 #) } } }) -}
694fcb5ed01c754742ca348236168773
  findFun ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Types.IO (Foreign.R.Internal.SomeSEXP s)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.findFun1
                  `cast`
                (forall (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP s>_R)) -}
dd57a73aada16abb711530c6e9817809
  findFun1 ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP s #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (a2 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case a2
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Env>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Env, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_findFun GHC.Prim.Addr#
                                                                                        -> GHC.Prim.Addr#
                                                                                        -> GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld
                                                                                        -> (# GHC.Prim.State#
                                                                                                GHC.Prim.RealWorld,
                                                                                              GHC.Prim.Addr# #)}
                        ds1
                        ds3
                        s1 of wild { (#,#) ds4 ds5 ->
                 (# ds4,
                    Foreign.R.Internal.SomeSEXP @ s @ GHC.Prim.Any ds5 #) } } }) -}
20e947ea19df0f38dba981d18d920c2b
  findVar ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Types.IO (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.findVar1
                  `cast`
                (forall (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol>_R)) -}
2fb64c73f078c9cc1968cdefd74a37fa
  findVar1 ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (a2 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case a2
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Env>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Env, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_findVar GHC.Prim.Addr#
                                                                                        -> GHC.Prim.Addr#
                                                                                        -> GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld
                                                                                        -> (# GHC.Prim.State#
                                                                                                GHC.Prim.RealWorld,
                                                                                              GHC.Prim.Addr# #)}
                        ds1
                        ds3
                        s1 of wild { (#,#) ds4 ds5 ->
                 (# ds4,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds5)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           s 'Foreign.R.Type.Symbol>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <s>_P <'Foreign.R.Type.Symbol>_P))) #) } } }) -}
e171a47f48d84eaef3656d55c4b1bd68
  gc :: GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.gc1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
00592b011808c6965f7c4bd7b25d775a
  gc1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_gc GHC.Prim.State#
                                                                                    GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld #)}
                        s of wild { Unit# ds ->
                 (# ds, GHC.Tuple.() #) }) -}
6d65ffd5262d3fcbb96c8369c40467f7
  indexVector ::
    Foreign.R.Type.IsGenericVector a =>
    Foreign.R.Internal.SEXP s a
    -> GHC.Types.Int -> GHC.Types.IO (Foreign.R.Internal.SomeSEXP s)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.indexVector1
                  `cast`
                (forall (a :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <GHC.Types.*>_N).
                 <Foreign.R.Type.IsGenericVector a>_R
                 ->_R <Foreign.R.Internal.SEXP s a>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP s>_R)) -}
809e2c02ae806695de4ca837c5e7e955
  indexVector1 ::
    Foreign.R.Type.IsGenericVector a =>
    Foreign.R.Internal.SEXP s a
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP s #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ (a :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($d(%,%) :: Foreign.R.Type.IsGenericVector a)
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (a2 :: GHC.Types.Int)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case a2 of wild { GHC.Types.I# x# ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs VECTOR_ELT GHC.Prim.Addr#
                                                                                        -> GHC.Prim.Int#
                                                                                        -> GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld
                                                                                        -> (# GHC.Prim.State#
                                                                                                GHC.Prim.RealWorld,
                                                                                              GHC.Prim.Addr# #)}
                        ds1
                        x#
                        s1 of wild1 { (#,#) ds2 ds3 ->
                 (# ds2,
                    Foreign.R.Internal.SomeSEXP @ s @ GHC.Prim.Any ds3 #) } } }) -}
395c56c1b149ebf0c90df54649cce2c0
  install ::
    Foreign.C.String.CString
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Symbol)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.install1
                  `cast`
                (<Foreign.C.String.CString>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.Symbol>_R)) -}
997e669f2dcd29f3a77a3651b390734a
  install1 ::
    Foreign.C.String.CString
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Symbol #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a1 :: Foreign.C.String.CString)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1 of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_install GHC.Prim.Addr#
                                                                                        -> GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld
                                                                                        -> (# GHC.Prim.State#
                                                                                                GHC.Prim.RealWorld,
                                                                                              GHC.Prim.Addr# #)}
                        ds1
                        s of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           Control.Memory.Region.V
                                                           'Foreign.R.Type.Symbol>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <Control.Memory.Region.V>_P
                                   <'Foreign.R.Type.Symbol>_P))) #) } }) -}
c4c5d893acfe7d31628594fafe339660
  integer ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Int
    -> GHC.Types.IO (GHC.Ptr.Ptr GHC.Int.Int32)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.integer1
                  `cast`
                (forall (s :: <GHC.Types.*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Ptr.Ptr GHC.Int.Int32>_R)) -}
de181b5065087d6f3eb2ef71d776d89c
  integer1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Ptr.Ptr GHC.Int.Int32 #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Int)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Int>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Int, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs INTEGER GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.C.Types.CInt ds3)
                      `cast`
                    (GHC.Ptr.Ptr <Foreign.C.Types.CInt, GHC.Int.Int32>)_R #) } }) -}
f2c1d78dea2efefa9975b09e0e9aa817
  lang1 ::
    Foreign.R.Internal.SEXP s a
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Lang)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.lang4
                  `cast`
                (forall (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.Lang>_R)) -}
56ef702f6f5e057a7dfd3e63ccde48c3
  lang2 ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s b
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Lang)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.lang5
                  `cast`
                (forall (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N) (b :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R <Foreign.R.Internal.SEXP s b>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.Lang>_R)) -}
033ae739c668f408f75aefa3cd12fd40
  lang3 ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s b
    -> Foreign.R.Internal.SEXP s c
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Lang)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.lang6
                  `cast`
                (forall (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N) (b :: <Foreign.R.Type.SEXPTYPE>_N) (c1 :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R <Foreign.R.Internal.SEXP s b>_R
                 ->_R <Foreign.R.Internal.SEXP s c1>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.Lang>_R)) -}
9bf98518f3418a72c8e64f028e8f950b
  lang4 ::
    Foreign.R.Internal.SEXP s a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Lang #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_lang1 GHC.Prim.Addr#
                                                                                      -> GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld
                                                                                      -> (# GHC.Prim.State#
                                                                                              GHC.Prim.RealWorld,
                                                                                            GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           Control.Memory.Region.V
                                                           'Foreign.R.Type.Lang>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <Control.Memory.Region.V>_P
                                   <'Foreign.R.Type.Lang>_P))) #) } }) -}
afd6df9f28305b91171227ad1554b3e6
  lang5 ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s b
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Lang #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   @ (b :: Foreign.R.Type.SEXPTYPE)
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (a2 :: Foreign.R.Internal.SEXP s b)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case a2
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <b>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s b, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_lang2 GHC.Prim.Addr#
                                                                                      -> GHC.Prim.Addr#
                                                                                      -> GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld
                                                                                      -> (# GHC.Prim.State#
                                                                                              GHC.Prim.RealWorld,
                                                                                            GHC.Prim.Addr# #)}
                        ds1
                        ds3
                        s1 of wild { (#,#) ds4 ds5 ->
                 (# ds4,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds5)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           Control.Memory.Region.V
                                                           'Foreign.R.Type.Lang>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <Control.Memory.Region.V>_P
                                   <'Foreign.R.Type.Lang>_P))) #) } } }) -}
c34dff32258c4303c8d4a34babd7547d
  lang6 ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s b
    -> Foreign.R.Internal.SEXP s c
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Lang #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   @ (b :: Foreign.R.Type.SEXPTYPE)
                   @ (c1 :: Foreign.R.Type.SEXPTYPE)
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (a2 :: Foreign.R.Internal.SEXP s b)
                   (a3 :: Foreign.R.Internal.SEXP s c1)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case a2
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <b>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s b, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case a3
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <c1>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s c1, Foreign.R.Internal.SEXPREC>)_R) of ds4 { GHC.Ptr.Ptr ds5 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_lang3 GHC.Prim.Addr#
                                                                                      -> GHC.Prim.Addr#
                                                                                      -> GHC.Prim.Addr#
                                                                                      -> GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld
                                                                                      -> (# GHC.Prim.State#
                                                                                              GHC.Prim.RealWorld,
                                                                                            GHC.Prim.Addr# #)}
                        ds1
                        ds3
                        ds5
                        s1 of wild { (#,#) ds6 ds7 ->
                 (# ds6,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds7)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           Control.Memory.Region.V
                                                           'Foreign.R.Type.Lang>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <Control.Memory.Region.V>_P
                                   <'Foreign.R.Type.Lang>_P))) #) } } } }) -}
293b799709ee93e9d31aef7e0ad9af36
  lcons ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s b
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Lang)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.lcons1
                  `cast`
                (forall (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N) (b :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R <Foreign.R.Internal.SEXP s b>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.Lang>_R)) -}
d99dcb09b83786d9baac8942982ea4b4
  lcons1 ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s b
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Lang #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   @ (b :: Foreign.R.Type.SEXPTYPE)
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (a2 :: Foreign.R.Internal.SEXP s b)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case a2
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <b>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s b, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_lcons GHC.Prim.Addr#
                                                                                      -> GHC.Prim.Addr#
                                                                                      -> GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld
                                                                                      -> (# GHC.Prim.State#
                                                                                              GHC.Prim.RealWorld,
                                                                                            GHC.Prim.Addr# #)}
                        ds1
                        ds3
                        s1 of wild { (#,#) ds4 ds5 ->
                 (# ds4,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds5)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           Control.Memory.Region.V
                                                           'Foreign.R.Type.Lang>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <Control.Memory.Region.V>_P
                                   <'Foreign.R.Type.Lang>_P))) #) } } }) -}
a56cafcf79d958004a17707bb9a3da18
  logical ::
    Foreign.R.Internal.SEXP s Foreign.R.RLogical
    -> GHC.Types.IO (GHC.Ptr.Ptr Foreign.R.Type.Logical)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.logical1
                  `cast`
                (forall (s :: <GHC.Types.*>_N).
                 <Foreign.R.Internal.SEXP s Foreign.R.RLogical>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <GHC.Ptr.Ptr Foreign.R.Type.Logical>_R)) -}
d3954190b8405dd26d915b8082f29c62
  logical1 ::
    Foreign.R.Internal.SEXP s Foreign.R.RLogical
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Ptr.Ptr Foreign.R.Type.Logical #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s Foreign.R.RLogical)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <Foreign.R.RLogical>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 Foreign.R.RLogical, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs LOGICAL GHC.Prim.Addr#
                                                                                     -> GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld
                                                                                     -> (# GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld,
                                                                                           GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.C.Types.CInt ds3)
                      `cast`
                    (GHC.Ptr.Ptr
                       <Foreign.C.Types.CInt, Foreign.R.Type.Logical>)_R #) } }) -}
436a9fe9f7e23dd542623a941d374a51
  mkChar ::
    Foreign.C.String.CString
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Char)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.mkChar1
                  `cast`
                (<Foreign.C.String.CString>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.Char>_R)) -}
40b1a0f361fa5debfca150897facf2b9
  mkChar1 ::
    Foreign.C.String.CString
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Char #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a1 :: Foreign.C.String.CString)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1 of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_mkChar GHC.Prim.Addr#
                                                                                       -> GHC.Prim.State#
                                                                                            GHC.Prim.RealWorld
                                                                                       -> (# GHC.Prim.State#
                                                                                               GHC.Prim.RealWorld,
                                                                                             GHC.Prim.Addr# #)}
                        ds1
                        s of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           Control.Memory.Region.V
                                                           'Foreign.R.Type.Char>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <Control.Memory.Region.V>_P
                                   <'Foreign.R.Type.Char>_P))) #) } }) -}
7a0513985c5e5d9d79765e4834818fd9
  mkCharCE ::
    Foreign.R.CEType
    -> Foreign.C.String.CString
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Char)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.mkCharCE1
                  `cast`
                (<Foreign.R.CEType>_R
                 ->_R <Foreign.C.String.CString>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.Char>_R)) -}
e5f8b02065761deee49c5326863643d1
  mkCharCE1 ::
    Foreign.R.CEType
    -> Foreign.C.String.CString
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Char #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><S(S),1*U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Foreign.R.CEType)
                   (w1 :: Foreign.C.String.CString)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { GHC.Ptr.Ptr ww1 ->
                 Foreign.R.$wmkCharCE w ww1 w2 }) -}
77215250b08ec75b7c89ad9246bfa2c4
  mkString ::
    Foreign.C.String.CString
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.String)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.mkString1
                  `cast`
                (<Foreign.C.String.CString>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.String>_R)) -}
e810a0f9aea915df37c3993ffc97a962
  mkString1 ::
    Foreign.C.String.CString
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.String #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a1 :: Foreign.C.String.CString)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1 of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_mkString GHC.Prim.Addr#
                                                                                         -> GHC.Prim.State#
                                                                                              GHC.Prim.RealWorld
                                                                                         -> (# GHC.Prim.State#
                                                                                                 GHC.Prim.RealWorld,
                                                                                               GHC.Prim.Addr# #)}
                        ds1
                        s of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           Control.Memory.Region.V
                                                           'Foreign.R.Type.String>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <Control.Memory.Region.V>_P
                                   <'Foreign.R.Type.String>_P))) #) } }) -}
e645508a7ae0be2a4a5d51cf57feacd1
  mkWeakRef ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s b
    -> Foreign.R.Internal.SEXP s c
    -> GHC.Types.Bool
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.WeakRef)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.mkWeakRef1
                  `cast`
                (forall (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N) (b :: <Foreign.R.Type.SEXPTYPE>_N) (c1 :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R <Foreign.R.Internal.SEXP s b>_R
                 ->_R <Foreign.R.Internal.SEXP s c1>_R
                 ->_R <GHC.Types.Bool>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.WeakRef>_R)) -}
10e331a8cd903d48f3256eeabbea372e
  mkWeakRef1 ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s b
    -> Foreign.R.Internal.SEXP s c
    -> GHC.Types.Bool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.WeakRef #)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,1*U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   @ (b :: Foreign.R.Type.SEXPTYPE)
                   @ (c1 :: Foreign.R.Type.SEXPTYPE)
                   (w :: Foreign.R.Internal.SEXP s a)
                   (w1 :: Foreign.R.Internal.SEXP s b)
                   (w2 :: Foreign.R.Internal.SEXP s c1)
                   (w3 :: GHC.Types.Bool)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w `cast`
                      (Foreign.R.Internal.N:SEXP[0]
                           <s>_P <a>_P) of ww { GHC.Ptr.Ptr ww1 ->
                 case w1
                        `cast`
                      (Foreign.R.Internal.N:SEXP[0]
                           <s>_P <b>_P) of ww2 { GHC.Ptr.Ptr ww3 ->
                 case w2
                        `cast`
                      (Foreign.R.Internal.N:SEXP[0]
                           <s>_P <c1>_P) of ww4 { GHC.Ptr.Ptr ww5 ->
                 Foreign.R.$wmkWeakRef @ s @ a @ b @ c1 ww1 ww3 ww5 w3 w4 } } }) -}
0e08bf189a187a4aa853b52f9b16edb2
  preserveObject :: Foreign.R.Internal.SEXP s a -> GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.preserveObject1
                  `cast`
                (forall (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
b2d23f6918c63897705136bd5375fae1
  preserveObject1 ::
    Foreign.R.Internal.SEXP s a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_PreserveObject GHC.Prim.Addr#
                                                                                              -> GHC.Prim.State#
                                                                                                   GHC.Prim.RealWorld
                                                                                              -> (# GHC.Prim.State#
                                                                                                      GHC.Prim.RealWorld #)}
                        ds1
                        s1 of wild { Unit# ds2 ->
                 (# ds2, GHC.Tuple.() #) } }) -}
a8b7a72e9e2282cff609f6ae82c211f2
  printValue :: Foreign.R.Internal.SEXP s a -> GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.printValue1
                  `cast`
                (forall (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
1e9260c18342af62e99e14bb83110308
  printValue1 ::
    Foreign.R.Internal.SEXP s a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_PrintValue GHC.Prim.Addr#
                                                                                           -> GHC.Prim.State#
                                                                                                GHC.Prim.RealWorld
                                                                                           -> (# GHC.Prim.State#
                                                                                                   GHC.Prim.RealWorld #)}
                        ds1
                        s1 of wild { Unit# ds2 ->
                 (# ds2, GHC.Tuple.() #) } }) -}
1f506cfb18e96c60c1c8925bda12f665
  promiseCode ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Promise
    -> GHC.Types.IO (Foreign.R.Internal.SomeSEXP s)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.promiseCode1
                  `cast`
                (forall (s :: <GHC.Types.*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Promise>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP s>_R)) -}
4778c126e153c1b94c0907fc159d4cc4
  promiseCode1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Promise
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP s #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Promise)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Promise>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Promise, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs PRCODE GHC.Prim.Addr#
                                                                                    -> GHC.Prim.State#
                                                                                         GHC.Prim.RealWorld
                                                                                    -> (# GHC.Prim.State#
                                                                                            GHC.Prim.RealWorld,
                                                                                          GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    Foreign.R.Internal.SomeSEXP @ s @ GHC.Prim.Any ds3 #) } }) -}
b8c34df4c5e815689fb167265c331e0b
  promiseEnv ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Promise
    -> GHC.Types.IO (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.promiseEnv1
                  `cast`
                (forall (s :: <GHC.Types.*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Promise>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env>_R)) -}
ef04796d9851958dbd6253b4515342ac
  promiseEnv1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Promise
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Promise)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Promise>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Promise, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs PRENV GHC.Prim.Addr#
                                                                                   -> GHC.Prim.State#
                                                                                        GHC.Prim.RealWorld
                                                                                   -> (# GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld,
                                                                                         GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           s 'Foreign.R.Type.Env>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <s>_P <'Foreign.R.Type.Env>_P))) #) } }) -}
f29d8740f4f61e810da3965b98b92cb7
  promiseValue ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Promise
    -> GHC.Types.IO (Foreign.R.Internal.SomeSEXP s)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.promiseValue1
                  `cast`
                (forall (s :: <GHC.Types.*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Promise>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP s>_R)) -}
6a8540f678a1c8a259214e39012798ca
  promiseValue1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Promise
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP s #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Promise)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Promise>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Promise, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs PRVALUE GHC.Prim.Addr#
                                                                                     -> GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld
                                                                                     -> (# GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld,
                                                                                           GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    Foreign.R.Internal.SomeSEXP @ s @ GHC.Prim.Any ds3 #) } }) -}
da5d6af0b23aadb157f211119bb4a11b
  protect ::
    Foreign.R.Internal.SEXP s a
    -> GHC.Types.IO (Foreign.R.Internal.SEXP Control.Memory.Region.G a)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.protect1
                  `cast`
                (forall (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP Control.Memory.Region.G a>_R)) -}
0a6e51f0af19f1b20e4c5540045a40a8
  protect1 ::
    Foreign.R.Internal.SEXP s a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP Control.Memory.Region.G a #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_protect GHC.Prim.Addr#
                                                                                        -> GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld
                                                                                        -> (# GHC.Prim.State#
                                                                                                GHC.Prim.RealWorld,
                                                                                              GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           Control.Memory.Region.G a>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <Control.Memory.Region.G>_P <a>_P))) #) } }) -}
ddd70078c85d479dbd61f3aa7f0f25a3
  raw ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Raw
    -> GHC.Types.IO (GHC.Ptr.Ptr Foreign.C.Types.CChar)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.raw1
                  `cast`
                (forall (s :: <GHC.Types.*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Raw>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <GHC.Ptr.Ptr Foreign.C.Types.CChar>_R)) -}
f32ce60c8ab3775e6cdf999812bf7331
  raw1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Raw
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Ptr.Ptr Foreign.C.Types.CChar #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Raw)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Raw>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Raw, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs RAW GHC.Prim.Addr#
                                                                                 -> GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld
                                                                                 -> (# GHC.Prim.State#
                                                                                         GHC.Prim.RealWorld,
                                                                                       GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.C.Types.CUChar ds3)
                      `cast`
                    (GHC.Ptr.Ptr
                       <Foreign.C.Types.CUChar, Foreign.C.Types.CChar>)_R #) } }) -}
1da4225cc63066c1ec6738a3997ccbce
  readVector ::
    Foreign.R.Type.IsGenericVector a =>
    Foreign.R.Internal.SEXP s a
    -> GHC.Types.Int -> GHC.Types.IO (Foreign.R.Internal.SomeSEXP s)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.indexVector1
                  `cast`
                (forall (a :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <GHC.Types.*>_N).
                 <Foreign.R.Type.IsGenericVector a>_R
                 ->_R <Foreign.R.Internal.SEXP s a>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP s>_R)) -}
ff1fa50415abbb3d65b4c62c23d4f840
  real ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Real
    -> GHC.Types.IO (GHC.Ptr.Ptr GHC.Types.Double)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.real1
                  `cast`
                (forall (s :: <GHC.Types.*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Real>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Ptr.Ptr GHC.Types.Double>_R)) -}
2e28fb51036f971549476ca5e179fdc7
  real1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Real
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Ptr.Ptr GHC.Types.Double #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Real)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Real>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Real, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs REAL GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.C.Types.CDouble ds3)
                      `cast`
                    (GHC.Ptr.Ptr
                       <Foreign.C.Types.CDouble, GHC.Types.Double>)_R #) } }) -}
711c01c373517f31ca14144579814386
  releaseObject :: Foreign.R.Internal.SEXP s a -> GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.releaseObject1
                  `cast`
                (forall (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
2c311f2f14082647f24cedb10730bb87
  releaseObject1 ::
    Foreign.R.Internal.SEXP s a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_ReleaseObject GHC.Prim.Addr#
                                                                                             -> GHC.Prim.State#
                                                                                                  GHC.Prim.RealWorld
                                                                                             -> (# GHC.Prim.State#
                                                                                                     GHC.Prim.RealWorld #)}
                        ds1
                        s1 of wild { Unit# ds2 ->
                 (# ds2, GHC.Tuple.() #) } }) -}
dd5945bda265878449abcb1f4fd5970a
  string ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.String
    -> GHC.Types.IO
         (GHC.Ptr.Ptr (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Char))
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.string1
                  `cast`
                (forall (s :: <GHC.Types.*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.String>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <GHC.Ptr.Ptr
                                  (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Char)>_R)) -}
ae0cb158266f93cf23b126dd41532fc7
  string1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Ptr.Ptr (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Char) #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.String)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.String>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.String, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs STRING_PTR GHC.Prim.Addr#
                                                                                        -> GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld
                                                                                        -> (# GHC.Prim.State#
                                                                                                GHC.Prim.RealWorld,
                                                                                              GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.SEXP0 ds3)
                      `cast`
                    (GHC.Ptr.Ptr
                       <Foreign.R.SEXP0, Foreign.R.Internal.SEXP
                                           s 'Foreign.R.Type.Char>)_R #) } }) -}
29d3ea00494ce20abb6c51ff22a10305
  symbolInternal ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol
    -> GHC.Types.IO (Foreign.R.Internal.SEXP s a)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.symbolInternal1
                  `cast`
                (forall (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SEXP s a>_R)) -}
cc433a41a22815ce40d72672eb95ec44
  symbolInternal1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s a #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Symbol>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Symbol, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs INTERNAL GHC.Prim.Addr#
                                                                                      -> GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld
                                                                                      -> (# GHC.Prim.State#
                                                                                              GHC.Prim.RealWorld,
                                                                                            GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp s a>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P))) #) } }) -}
07c8499bd4bb81925d27598911d0391e
  symbolPrintName ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol
    -> GHC.Types.IO (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Char)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.symbolPrintName1
                  `cast`
                (forall (s :: <GHC.Types.*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Char>_R)) -}
28c5dc172399ad332f493acf6aa34627
  symbolPrintName1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s 'Foreign.R.Type.Char #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Symbol>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Symbol, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs PRINTNAME GHC.Prim.Addr#
                                                                                       -> GHC.Prim.State#
                                                                                            GHC.Prim.RealWorld
                                                                                       -> (# GHC.Prim.State#
                                                                                               GHC.Prim.RealWorld,
                                                                                             GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           s 'Foreign.R.Type.Char>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <s>_P <'Foreign.R.Type.Char>_P))) #) } }) -}
c23418e957cb47af74be3751bd411227
  symbolValue ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol
    -> GHC.Types.IO (Foreign.R.Internal.SEXP s a)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.symbolValue1
                  `cast`
                (forall (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SEXP s a>_R)) -}
a7e08db3180dbf368cdcef2e5209d115
  symbolValue1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s a #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Symbol>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Symbol, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs SYMVALUE GHC.Prim.Addr#
                                                                                      -> GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld
                                                                                      -> (# GHC.Prim.State#
                                                                                              GHC.Prim.RealWorld,
                                                                                            GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp s a>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P))) #) } }) -}
35495c2b3b29e02c2f760ae6b3ad834b
  tag ::
    Foreign.R.Internal.SEXP s a
    -> GHC.Types.IO (Foreign.R.Internal.SomeSEXP s)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.tag1
                  `cast`
                (forall (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP s>_R)) -}
2a160e86ba71d9338eaf38ec475562cc
  tag1 ::
    Foreign.R.Internal.SEXP s a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP s #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs TAG GHC.Prim.Addr#
                                                                                 -> GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld
                                                                                 -> (# GHC.Prim.State#
                                                                                         GHC.Prim.RealWorld,
                                                                                       GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    Foreign.R.Internal.SomeSEXP @ s @ GHC.Prim.Any ds3 #) } }) -}
9b1cd153e65ba1844ec524497362ded8
  trueLength ::
    Foreign.R.Type.IsVector a =>
    Foreign.R.Internal.SEXP s a -> GHC.Types.IO Foreign.C.Types.CInt
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.trueLength1
                  `cast`
                (forall (a :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <GHC.Types.*>_N).
                 <Foreign.R.Type.IsVector a>_R
                 ->_R <Foreign.R.Internal.SEXP s a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R)) -}
9af450d63b010d5833b214f31645e13b
  trueLength1 ::
    Foreign.R.Type.IsVector a =>
    Foreign.R.Internal.SEXP s a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (a :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($d(%,%) :: Foreign.R.Type.IsVector a)
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs TRUELENGTH GHC.Prim.Addr#
                                                                                        -> GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld
                                                                                        -> (# GHC.Prim.State#
                                                                                                GHC.Prim.RealWorld,
                                                                                              GHC.Prim.Int# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2, GHC.Int.I32# (GHC.Prim.narrow32Int# ds3) #)
                   `cast`
                 ((#,#)
                    <'GHC.Types.VoidRep>_R
                    <'GHC.Types.PtrRepLifted>_R
                    <GHC.Prim.State# GHC.Prim.RealWorld>_R
                    (Sym (Foreign.C.Types.N:CInt[0])))_R } }) -}
0f3c017e6f23cee7640b1413f2551f4e
  tryEval ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Ptr.Ptr Foreign.C.Types.CInt
    -> GHC.Types.IO
         (Foreign.R.Internal.SomeSEXP Control.Memory.Region.V)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.tryEval1
                  `cast`
                (forall (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env>_R
                 ->_R <GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SomeSEXP Control.Memory.Region.V>_R)) -}
faa92cc7cf9c0c1a1860c13c51ba88b9
  tryEval1 ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Ptr.Ptr Foreign.C.Types.CInt
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP Control.Memory.Region.V #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (a2 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env)
                   (a3 :: GHC.Ptr.Ptr Foreign.C.Types.CInt)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case a2
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Env>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Env, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case a3 of ds4 { GHC.Ptr.Ptr ds5 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_tryEval GHC.Prim.Addr#
                                                                                       -> GHC.Prim.Addr#
                                                                                       -> GHC.Prim.Addr#
                                                                                       -> GHC.Prim.State#
                                                                                            GHC.Prim.RealWorld
                                                                                       -> (# GHC.Prim.State#
                                                                                               GHC.Prim.RealWorld,
                                                                                             GHC.Prim.Addr# #)}
                        ds1
                        ds3
                        ds5
                        s1 of wild { (#,#) ds6 ds7 ->
                 (# ds6,
                    Foreign.R.Internal.SomeSEXP
                      @ Control.Memory.Region.V
                      @ GHC.Prim.Any
                      ds7 #) } } } }) -}
215357deb5442af89d5baee5cc9888f3
  tryEvalSilent ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Ptr.Ptr Foreign.C.Types.CInt
    -> GHC.Types.IO
         (Foreign.R.Internal.SomeSEXP Control.Memory.Region.V)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.tryEvalSilent1
                  `cast`
                (forall (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env>_R
                 ->_R <GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SomeSEXP Control.Memory.Region.V>_R)) -}
2ea8472b2cd1f3c25a1335411dff0209
  tryEvalSilent1 ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Ptr.Ptr Foreign.C.Types.CInt
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP Control.Memory.Region.V #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (a2 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env)
                   (a3 :: GHC.Ptr.Ptr Foreign.C.Types.CInt)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case a2
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Env>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Env, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case a3 of ds4 { GHC.Ptr.Ptr ds5 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_tryEvalSilent GHC.Prim.Addr#
                                                                                             -> GHC.Prim.Addr#
                                                                                             -> GHC.Prim.Addr#
                                                                                             -> GHC.Prim.State#
                                                                                                  GHC.Prim.RealWorld
                                                                                             -> (# GHC.Prim.State#
                                                                                                     GHC.Prim.RealWorld,
                                                                                                   GHC.Prim.Addr# #)}
                        ds1
                        ds3
                        ds5
                        s1 of wild { (#,#) ds6 ds7 ->
                 (# ds6,
                    Foreign.R.Internal.SomeSEXP
                      @ Control.Memory.Region.V
                      @ GHC.Prim.Any
                      ds7 #) } } } }) -}
1d53930f88b54905b7e5703f6cefc644
  unprotect :: GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.unprotect1
                  `cast`
                (<GHC.Types.Int>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
a96c839d1b108e413be8633d3fbc9cc8
  unprotect1 ::
    GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a1 :: GHC.Types.Int)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1 of wild { GHC.Types.I# x# ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_unprotect GHC.Prim.Int#
                                                                                          -> GHC.Prim.State#
                                                                                               GHC.Prim.RealWorld
                                                                                          -> (# GHC.Prim.State#
                                                                                                  GHC.Prim.RealWorld #)}
                        (GHC.Prim.narrow32Int# x#)
                        s of wild1 { Unit# ds ->
                 (# ds, GHC.Tuple.() #) } }) -}
9ed8fe968f5848504ad71ba4789d3afc
  unprotectPtr ::
    Foreign.R.Internal.SEXP Control.Memory.Region.G a
    -> GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.unprotectPtr1
                  `cast`
                (forall (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP Control.Memory.Region.G a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
5433b821abb18f9d9d982eb0e6c82210
  unprotectPtr1 ::
    Foreign.R.Internal.SEXP Control.Memory.Region.G a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ (a :: Foreign.R.Type.SEXPTYPE)
                   (a1 :: Foreign.R.Internal.SEXP Control.Memory.Region.G a)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <Control.Memory.Region.G>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.G
                                 a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_unprotect_ptr GHC.Prim.Addr#
                                                                                              -> GHC.Prim.State#
                                                                                                   GHC.Prim.RealWorld
                                                                                              -> (# GHC.Prim.State#
                                                                                                      GHC.Prim.RealWorld #)}
                        ds1
                        s of wild { Unit# ds2 ->
                 (# ds2, GHC.Tuple.() #) } }) -}
c6d380aac0f4491df5a9e0d7bb15dac7
  withProtected ::
    GHC.Types.IO (Foreign.R.Internal.SEXP Control.Memory.Region.V a)
    -> (Foreign.R.Internal.SEXP s a -> GHC.Types.IO b)
    -> GHC.Types.IO b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(S(SS(S))),1*C1(U(U,1*U(U)))><L,1*C1(C(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.withProtected1
                  `cast`
                (forall (a :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <GHC.Types.*>_N) (b :: <*>_N).
                 <GHC.Types.IO
                    (Foreign.R.Internal.SEXP Control.Memory.Region.V a)>_R
                 ->_R <Foreign.R.Internal.SEXP s a -> GHC.Types.IO b>_R
                 ->_R Sym (GHC.Types.N:IO[0] <b>_R)) -}
3ca6901b0cfdd55028b1c4262a222b4b
  withProtected1 ::
    GHC.Types.IO (Foreign.R.Internal.SEXP Control.Memory.Region.V a)
    -> (Foreign.R.Internal.SEXP s a -> GHC.Types.IO b)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(S(SS(S))),1*C1(U(U,1*U(U)))><L,1*C1(C(U))><S,U>,
     Unfolding: (\ @ (a :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   @ b
                   (create :: GHC.Types.IO
                                (Foreign.R.Internal.SEXP Control.Memory.Region.V a))
                   (f :: Foreign.R.Internal.SEXP s a -> GHC.Types.IO b)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.getMaskingState# eta of ds { (#,#) ipv ipv1 ->
                 case ipv1 of ds1 {
                   DEFAULT
                   -> case create
                             `cast`
                           (GHC.Types.N:IO[0]
                                <Foreign.R.Internal.SEXP Control.Memory.Region.V a>_R)
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ipv3
                             `cast`
                           (Trans
                                (Foreign.R.Internal.N:SEXP[0] <Control.Memory.Region.V>_P <a>_P)
                                (GHC.Ptr.Ptr
                                   <Language.R.HExp.HExp
                                      Control.Memory.Region.V
                                      a, Foreign.R.Internal.SEXPREC>)_R) of ds3 { GHC.Ptr.Ptr ds4 ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_protect GHC.Prim.Addr#
                                                                                             -> GHC.Prim.State#
                                                                                                  GHC.Prim.RealWorld
                                                                                             -> (# GHC.Prim.State#
                                                                                                     GHC.Prim.RealWorld,
                                                                                                   GHC.Prim.Addr# #)}
                             ds4
                             ipv2 of wild { (#,#) ds5 ds6 ->
                      case GHC.Prim.catch#
                             @ b
                             @ GHC.Exception.SomeException
                             (GHC.Magic.lazy
                                @ (GHC.Types.IO b)
                                (GHC.Prim.maskAsyncExceptions#
                                   @ b
                                   (f ds3
                                        `cast`
                                      (Trans
                                           (GHC.Ptr.Ptr
                                              <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                             s a>)_R
                                           (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P))))
                                     `cast`
                                   (GHC.Types.N:IO[0] <b>_R))
                                  `cast`
                                (Sym (GHC.Types.N:IO[0] <b>_R)))
                               `cast`
                             (GHC.Types.N:IO[0] <b>_R)
                             (Foreign.R.withProtected2 @ b)
                             ds5 of ds7 { (#,#) ipv4 ipv5 ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_unprotect GHC.Prim.Int#
                                                                                               -> GHC.Prim.State#
                                                                                                    GHC.Prim.RealWorld
                                                                                               -> (# GHC.Prim.State#
                                                                                                       GHC.Prim.RealWorld #)}
                             1#
                             ipv4 of wild1 { Unit# ds8 ->
                      (# ds8, ipv5 #) } } } } }
                   0#
                   -> GHC.Prim.maskAsyncExceptions#
                        @ b
                        (\ (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case create
                                `cast`
                              (GHC.Types.N:IO[0]
                                   <Foreign.R.Internal.SEXP Control.Memory.Region.V a>_R)
                                eta1 of ds2 { (#,#) ipv2 ipv3 ->
                         case ipv3
                                `cast`
                              (Trans
                                   (Foreign.R.Internal.N:SEXP[0] <Control.Memory.Region.V>_P <a>_P)
                                   (GHC.Ptr.Ptr
                                      <Language.R.HExp.HExp
                                         Control.Memory.Region.V
                                         a, Foreign.R.Internal.SEXPREC>)_R) of ds3 { GHC.Ptr.Ptr ds4 ->
                         case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_protect GHC.Prim.Addr#
                                                                                                -> GHC.Prim.State#
                                                                                                     GHC.Prim.RealWorld
                                                                                                -> (# GHC.Prim.State#
                                                                                                        GHC.Prim.RealWorld,
                                                                                                      GHC.Prim.Addr# #)}
                                ds4
                                ipv2 of wild { (#,#) ds5 ds6 ->
                         case GHC.Prim.catch#
                                @ b
                                @ GHC.Exception.SomeException
                                (GHC.Magic.lazy
                                   @ (GHC.Types.IO b)
                                   (GHC.Prim.unmaskAsyncExceptions#
                                      @ b
                                      (f ds3
                                           `cast`
                                         (Trans
                                              (GHC.Ptr.Ptr
                                                 <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                                s a>)_R
                                              (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P))))
                                        `cast`
                                      (GHC.Types.N:IO[0] <b>_R))
                                     `cast`
                                   (Sym (GHC.Types.N:IO[0] <b>_R)))
                                  `cast`
                                (GHC.Types.N:IO[0] <b>_R)
                                (Foreign.R.withProtected2 @ b)
                                ds5 of ds7 { (#,#) ipv4 ipv5 ->
                         case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_unprotect GHC.Prim.Int#
                                                                                                  -> GHC.Prim.State#
                                                                                                       GHC.Prim.RealWorld
                                                                                                  -> (# GHC.Prim.State#
                                                                                                          GHC.Prim.RealWorld #)}
                                1#
                                ipv4 of wild1 { Unit# ds8 ->
                         (# ds8, ipv5 #) } } } } })
                        ipv
                   1#
                   -> case create
                             `cast`
                           (GHC.Types.N:IO[0]
                                <Foreign.R.Internal.SEXP Control.Memory.Region.V a>_R)
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ipv3
                             `cast`
                           (Trans
                                (Foreign.R.Internal.N:SEXP[0] <Control.Memory.Region.V>_P <a>_P)
                                (GHC.Ptr.Ptr
                                   <Language.R.HExp.HExp
                                      Control.Memory.Region.V
                                      a, Foreign.R.Internal.SEXPREC>)_R) of ds3 { GHC.Ptr.Ptr ds4 ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_protect GHC.Prim.Addr#
                                                                                             -> GHC.Prim.State#
                                                                                                  GHC.Prim.RealWorld
                                                                                             -> (# GHC.Prim.State#
                                                                                                     GHC.Prim.RealWorld,
                                                                                                   GHC.Prim.Addr# #)}
                             ds4
                             ipv2 of wild { (#,#) ds5 ds6 ->
                      case GHC.Prim.catch#
                             @ b
                             @ GHC.Exception.SomeException
                             (GHC.Magic.lazy
                                @ (GHC.Types.IO b)
                                (GHC.Prim.maskUninterruptible#
                                   @ b
                                   (f ds3
                                        `cast`
                                      (Trans
                                           (GHC.Ptr.Ptr
                                              <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                             s a>)_R
                                           (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P))))
                                     `cast`
                                   (GHC.Types.N:IO[0] <b>_R))
                                  `cast`
                                (Sym (GHC.Types.N:IO[0] <b>_R)))
                               `cast`
                             (GHC.Types.N:IO[0] <b>_R)
                             (Foreign.R.withProtected2 @ b)
                             ds5 of ds7 { (#,#) ipv4 ipv5 ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_unprotect GHC.Prim.Int#
                                                                                               -> GHC.Prim.State#
                                                                                                    GHC.Prim.RealWorld
                                                                                               -> (# GHC.Prim.State#
                                                                                                       GHC.Prim.RealWorld #)}
                             1#
                             ipv4 of wild1 { Unit# ds8 ->
                      (# ds8, ipv5 #) } } } } } } }) -}
feeacfa866922b8c1a1a03bf7f021273
  withProtected2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>x -}
af0b19aa7e39b68779c4bc27b720314d
  writeVector ::
    Foreign.R.Type.IsGenericVector a =>
    Foreign.R.Internal.SEXP s a
    -> GHC.Types.Int
    -> Foreign.R.Internal.SEXP s b
    -> GHC.Types.IO (Foreign.R.Internal.SEXP s a)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.writeVector1
                  `cast`
                (forall (a :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <GHC.Types.*>_N) (b :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Type.IsGenericVector a>_R
                 ->_R <Foreign.R.Internal.SEXP s a>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <Foreign.R.Internal.SEXP s b>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SEXP s a>_R)) -}
2d1219e13ce31ec16cc96c4cccd04bc2
  writeVector1 ::
    Foreign.R.Type.IsGenericVector a =>
    Foreign.R.Internal.SEXP s a
    -> GHC.Types.Int
    -> Foreign.R.Internal.SEXP s b
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s a #)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ (a :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   @ (b :: Foreign.R.Type.SEXPTYPE)
                   ($d(%,%) :: Foreign.R.Type.IsGenericVector a)
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (a2 :: GHC.Types.Int)
                   (a3 :: Foreign.R.Internal.SEXP s b)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case a2 of wild { GHC.Types.I# x# ->
                 case a3
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <b>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s b, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs SET_VECTOR_ELT GHC.Prim.Addr#
                                                                                            -> GHC.Prim.Int#
                                                                                            -> GHC.Prim.Addr#
                                                                                            -> GHC.Prim.State#
                                                                                                 GHC.Prim.RealWorld
                                                                                            -> (# GHC.Prim.State#
                                                                                                    GHC.Prim.RealWorld,
                                                                                                  GHC.Prim.Addr# #)}
                        ds1
                        x#
                        ds3
                        s1 of wild1 { (#,#) ds4 ds5 ->
                 (# ds4,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds5)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp s a>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P))) #) } } } }) -}
instance GHC.Enum.Enum [Foreign.R.CEType] = Foreign.R.$fEnumCEType
instance GHC.Classes.Eq [Foreign.R.CEType] = Foreign.R.$fEqCEType
instance GHC.Show.Show [Foreign.R.CEType] = Foreign.R.$fShowCEType
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
Warnings indexVector Deprecated: "Use readVector instead."
trusted: none
require own pkg trusted: False

