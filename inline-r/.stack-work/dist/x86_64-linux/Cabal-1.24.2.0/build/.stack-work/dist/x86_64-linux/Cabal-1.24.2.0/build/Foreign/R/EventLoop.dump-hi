
==================== FINAL INTERFACE ====================
2017-12-28 08:02:18.92137 UTC

interface inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs:Foreign.R.EventLoop 8002
  interface hash: 48d3b541b02a637f81b57432249ffdb4
  ABI hash: 49f9ca72c40ef8ed7f46ab8983a64653
  export-list hash: 2a2c7226490f0f9bdf298c44509e88b2
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 8a0c238aac82ea318113c289abab1893
  sig of: Nothing
  used TH splices: False
  where
exports:
  Foreign.R.EventLoop.addInputHandler
  Foreign.R.EventLoop.checkActivity
  Foreign.R.EventLoop.graphicsPolledEvents
  Foreign.R.EventLoop.graphicsPollingPeriod
  Foreign.R.EventLoop.inputHandlers
  Foreign.R.EventLoop.polledEvents
  Foreign.R.EventLoop.pollingPeriod
  Foreign.R.EventLoop.removeInputHandler
  Foreign.R.EventLoop.runHandlers
  Foreign.R.EventLoop.InputHandler{Foreign.R.EventLoop.InputHandler inputHandlerActive inputHandlerActivity inputHandlerCallback inputHandlerFD inputHandlerNext inputHandlerUserData}
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Control.Applicative 32430a90492e727f4bd80db71c28600c
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:Foreign b4bee334aade4f33021057fdecf4a495
import  -/  base-4.9.1.0:Foreign.C b8d6c8cd5e89ba05da67379943abaffb
import  -/  base-4.9.1.0:Foreign.C.Types bf568ee9a3ec4aa42333a0da5f4345de
import  -/  base-4.9.1.0:Foreign.Marshal.Utils e811a64aac47ef3d985f1695041ab260
import  -/  base-4.9.1.0:Foreign.Storable 085c8d7f42ceec1dbb4e818f06339b9d
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.Ptr 427a6ad9312f04edb98e0f5b7c4e2596
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.Posix.Types 34e044fa9cd353c67fc7c3f4fb87da04
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
addDependentFile "src/Foreign/R/EventLoop.hsc"
addDependentFile "/datascience/bin/stack/programs/x86_64-linux/ghc-8.0.2/lib/ghc-8.0.2/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-1.24.2.0/build/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
5baf842a5d612b2516b5ea0be2857a6c
  $fEqInputHandler :: GHC.Classes.Eq Foreign.R.EventLoop.InputHandler
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.R.EventLoop.InputHandler
                  Foreign.R.EventLoop.$fEqInputHandler_$c==
                  Foreign.R.EventLoop.$fEqInputHandler_$c/= -}
5baf842a5d612b2516b5ea0be2857a6c
  $fEqInputHandler_$c/= ::
    Foreign.R.EventLoop.InputHandler
    -> Foreign.R.EventLoop.InputHandler -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(S(S)LLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Foreign.R.EventLoop.InputHandler)
                   (b :: Foreign.R.EventLoop.InputHandler) ->
                 case Foreign.R.EventLoop.$fEqInputHandler_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
5baf842a5d612b2516b5ea0be2857a6c
  $fEqInputHandler_$c== ::
    Foreign.R.EventLoop.InputHandler
    -> Foreign.R.EventLoop.InputHandler -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(S(S)LLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Foreign.R.EventLoop.InputHandler)
                   (w1 :: Foreign.R.EventLoop.InputHandler) ->
                 case w of ww { Foreign.R.EventLoop.InputHandler ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case ww1 of ww7 { GHC.Ptr.FunPtr ww8 ->
                 case w1 of ww9 { Foreign.R.EventLoop.InputHandler ww10 ww11 ww12 ww13 ww14 ww15 ->
                 case ww10 of ww16 { GHC.Ptr.FunPtr ww17 ->
                 Foreign.R.EventLoop.$w$c==
                   ww8
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww17
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15 } } } }) -}
5baf842a5d612b2516b5ea0be2857a6c
  $fShowInputHandler ::
    GHC.Show.Show Foreign.R.EventLoop.InputHandler
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.R.EventLoop.InputHandler
                  Foreign.R.EventLoop.$fShowInputHandler_$cshowsPrec
                  Foreign.R.EventLoop.$fShowInputHandler_$cshow
                  Foreign.R.EventLoop.$fShowInputHandler_$cshowList -}
5baf842a5d612b2516b5ea0be2857a6c
  $fShowInputHandler1 ::
    Foreign.R.EventLoop.InputHandler -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Foreign.R.EventLoop.InputHandler)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { Foreign.R.EventLoop.InputHandler ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Foreign.R.EventLoop.$w$cshowsPrec
                   0#
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1 }) -}
5baf842a5d612b2516b5ea0be2857a6c
  $fShowInputHandler_$cshow ::
    Foreign.R.EventLoop.InputHandler -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Foreign.R.EventLoop.InputHandler) ->
                 Foreign.R.EventLoop.$fShowInputHandler_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
5baf842a5d612b2516b5ea0be2857a6c
  $fShowInputHandler_$cshowList ::
    [Foreign.R.EventLoop.InputHandler] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Foreign.R.EventLoop.InputHandler
                   Foreign.R.EventLoop.$fShowInputHandler1) -}
5baf842a5d612b2516b5ea0be2857a6c
  $fShowInputHandler_$cshowsPrec ::
    GHC.Types.Int -> Foreign.R.EventLoop.InputHandler -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Foreign.R.EventLoop.InputHandler)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Foreign.R.EventLoop.InputHandler ww3 ww4 ww5 ww6 ww7 ww8 ->
                 Foreign.R.EventLoop.$w$cshowsPrec
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   w2 } }) -}
5baf842a5d612b2516b5ea0be2857a6c
  $fStorableInputHandler ::
    Foreign.Storable.Storable Foreign.R.EventLoop.InputHandler
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.R.EventLoop.InputHandler
                  Foreign.R.EventLoop.$fStorableInputHandler_$csizeOf
                  Foreign.R.EventLoop.$fStorableInputHandler_$calignment
                  Foreign.R.EventLoop.$fStorableInputHandler_$cpeekElemOff
                  Foreign.R.EventLoop.$fStorableInputHandler_$cpokeElemOff
                  Foreign.R.EventLoop.$fStorableInputHandler_$cpeekByteOff
                  Foreign.R.EventLoop.$fStorableInputHandler_$cpokeByteOff
                  Foreign.R.EventLoop.$fStorableInputHandler_$cpeek
                  Foreign.R.EventLoop.$fStorableInputHandler_$cpoke -}
5baf842a5d612b2516b5ea0be2857a6c
  $fStorableInputHandler1 ::
    GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> Foreign.R.EventLoop.InputHandler
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S(S)S(S)S(S)S(S)S(S)S(S)),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (hptr :: GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler)
                   (ds :: Foreign.R.EventLoop.InputHandler)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of wild { Foreign.R.EventLoop.InputHandler ds1 ds2 ds3 ds4 ds5 ds6 ->
                 case hptr of wild1 { GHC.Ptr.Ptr addr ->
                 case ds1 of wild2 { GHC.Ptr.FunPtr x ->
                 case GHC.Prim.writeAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 8#)
                        0#
                        x
                        eta of s2 { DEFAULT ->
                 case ds2
                        `cast`
                      (Foreign.C.Types.N:CInt[0]) of wild3 { GHC.Int.I32# x1 ->
                 case GHC.Prim.writeInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        addr
                        0#
                        x1
                        s2 of s1 { DEFAULT ->
                 case ds3
                        `cast`
                      (Foreign.C.Types.N:CInt[0]) of wild4 { GHC.Int.I32# x2 ->
                 case GHC.Prim.writeInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 24#)
                        0#
                        x2
                        s1 of s3 { DEFAULT ->
                 case ds4
                        `cast`
                      (Trans
                           (System.Posix.Types.N:Fd[0])
                           (Foreign.C.Types.N:CInt[0])) of wild5 { GHC.Int.I32# x3 ->
                 case GHC.Prim.writeInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 4#)
                        0#
                        x3
                        s3 of s4 { DEFAULT ->
                 case ds5 of wild6 { GHC.Ptr.Ptr x4 ->
                 case GHC.Prim.writeAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 32#)
                        0#
                        x4
                        s4 of s5 { DEFAULT ->
                 case ds6
                        `cast`
                      (GHC.Ptr.Ptr
                         <Foreign.R.EventLoop.InputHandler, GHC.Prim.Any>)_R of wild7 { GHC.Ptr.Ptr x5 ->
                 case GHC.Prim.writeAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 16#)
                        0#
                        x5
                        s5 of s6 { DEFAULT ->
                 (# s6, GHC.Tuple.() #) } } } } } } } } } } } } } }) -}
5baf842a5d612b2516b5ea0be2857a6c
  $fStorableInputHandler2 ::
    GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.EventLoop.InputHandler #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { GHC.Ptr.Ptr ww1 ->
                 Foreign.R.EventLoop.$w$cpeek ww1 w1 }) -}
5baf842a5d612b2516b5ea0be2857a6c
  $fStorableInputHandler3 ::
    GHC.Ptr.Ptr b
    -> GHC.Types.Int
    -> Foreign.R.EventLoop.InputHandler
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S(S)S(S)S(S)S(S)S(S)S(S)),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ b
                   (ptr :: GHC.Ptr.Ptr b)
                   (off :: GHC.Types.Int)
                   (eta :: Foreign.R.EventLoop.InputHandler)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case eta of wild { Foreign.R.EventLoop.InputHandler ds ds1 ds2 ds3 ds4 ds5 ->
                 case ptr of wild1 { GHC.Ptr.Ptr addr ->
                 case off of wild2 { GHC.Types.I# d ->
                 case ds of wild3 { GHC.Ptr.FunPtr x ->
                 let {
                   addr1 :: GHC.Prim.Addr# = GHC.Prim.plusAddr# addr d
                 } in
                 case GHC.Prim.writeAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr1 8#)
                        0#
                        x
                        eta1 of s2 { DEFAULT ->
                 case ds1
                        `cast`
                      (Foreign.C.Types.N:CInt[0]) of wild4 { GHC.Int.I32# x1 ->
                 case GHC.Prim.writeInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        addr1
                        0#
                        x1
                        s2 of s1 { DEFAULT ->
                 case ds2
                        `cast`
                      (Foreign.C.Types.N:CInt[0]) of wild5 { GHC.Int.I32# x2 ->
                 case GHC.Prim.writeInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr1 24#)
                        0#
                        x2
                        s1 of s3 { DEFAULT ->
                 case ds3
                        `cast`
                      (Trans
                           (System.Posix.Types.N:Fd[0])
                           (Foreign.C.Types.N:CInt[0])) of wild6 { GHC.Int.I32# x3 ->
                 case GHC.Prim.writeInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr1 4#)
                        0#
                        x3
                        s3 of s4 { DEFAULT ->
                 case ds4 of wild7 { GHC.Ptr.Ptr x4 ->
                 case GHC.Prim.writeAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr1 32#)
                        0#
                        x4
                        s4 of s5 { DEFAULT ->
                 case ds5
                        `cast`
                      (GHC.Ptr.Ptr
                         <Foreign.R.EventLoop.InputHandler, GHC.Prim.Any>)_R of wild8 { GHC.Ptr.Ptr x5 ->
                 case GHC.Prim.writeAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr1 16#)
                        0#
                        x5
                        s5 of s6 { DEFAULT ->
                 (# s6, GHC.Tuple.() #) } } } } } } } } } } } } } } }) -}
5baf842a5d612b2516b5ea0be2857a6c
  $fStorableInputHandler4 ::
    GHC.Ptr.Ptr b
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.EventLoop.InputHandler #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ b
                   (w :: GHC.Ptr.Ptr b)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { GHC.Ptr.Ptr ww1 ->
                 case w1 of ww2 { GHC.Types.I# ww3 ->
                 Foreign.R.EventLoop.$w$cpeekByteOff @ b ww1 ww3 w2 } }) -}
5baf842a5d612b2516b5ea0be2857a6c
  $fStorableInputHandler5 ::
    GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> GHC.Types.Int
    -> Foreign.R.EventLoop.InputHandler
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S(S)S(S)S(S)S(S)S(S)S(S)),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (ptr :: GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler)
                   (off :: GHC.Types.Int)
                   (val :: Foreign.R.EventLoop.InputHandler)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case val of wild { Foreign.R.EventLoop.InputHandler ds ds1 ds2 ds3 ds4 ds5 ->
                 case ptr of wild1 { GHC.Ptr.Ptr addr ->
                 case off of wild2 { GHC.Types.I# x ->
                 case ds of wild3 { GHC.Ptr.FunPtr x1 ->
                 let {
                   addr1 :: GHC.Prim.Addr#
                   = GHC.Prim.plusAddr# addr (GHC.Prim.*# x 40#)
                 } in
                 case GHC.Prim.writeAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr1 8#)
                        0#
                        x1
                        eta of s2 { DEFAULT ->
                 case ds1
                        `cast`
                      (Foreign.C.Types.N:CInt[0]) of wild4 { GHC.Int.I32# x2 ->
                 case GHC.Prim.writeInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        addr1
                        0#
                        x2
                        s2 of s1 { DEFAULT ->
                 case ds2
                        `cast`
                      (Foreign.C.Types.N:CInt[0]) of wild5 { GHC.Int.I32# x3 ->
                 case GHC.Prim.writeInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr1 24#)
                        0#
                        x3
                        s1 of s3 { DEFAULT ->
                 case ds3
                        `cast`
                      (Trans
                           (System.Posix.Types.N:Fd[0])
                           (Foreign.C.Types.N:CInt[0])) of wild6 { GHC.Int.I32# x4 ->
                 case GHC.Prim.writeInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr1 4#)
                        0#
                        x4
                        s3 of s4 { DEFAULT ->
                 case ds4 of wild7 { GHC.Ptr.Ptr x5 ->
                 case GHC.Prim.writeAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr1 32#)
                        0#
                        x5
                        s4 of s5 { DEFAULT ->
                 case ds5
                        `cast`
                      (GHC.Ptr.Ptr
                         <Foreign.R.EventLoop.InputHandler, GHC.Prim.Any>)_R of wild8 { GHC.Ptr.Ptr x6 ->
                 case GHC.Prim.writeAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr1 16#)
                        0#
                        x6
                        s5 of s6 { DEFAULT ->
                 (# s6, GHC.Tuple.() #) } } } } } } } } } } } } } } }) -}
5baf842a5d612b2516b5ea0be2857a6c
  $fStorableInputHandler6 ::
    GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.EventLoop.InputHandler #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { GHC.Ptr.Ptr ww1 ->
                 case w1 of ww2 { GHC.Types.I# ww3 ->
                 Foreign.R.EventLoop.$w$cpeekElemOff ww1 ww3 w2 } }) -}
ab401d99b61fee64c4a01592e8fa174c
  $fStorableInputHandler7 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 8#) -}
1a9fd41ab5c5be08b43d2f02656fe6c7
  $fStorableInputHandler8 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 40#) -}
5baf842a5d612b2516b5ea0be2857a6c
  $fStorableInputHandler_$calignment ::
    Foreign.R.EventLoop.InputHandler -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Foreign.R.EventLoop.InputHandler) ->
                 Foreign.R.EventLoop.$fStorableInputHandler7) -}
5baf842a5d612b2516b5ea0be2857a6c
  $fStorableInputHandler_$cpeek ::
    GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> GHC.Types.IO Foreign.R.EventLoop.InputHandler
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.EventLoop.$fStorableInputHandler2
                  `cast`
                (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.EventLoop.InputHandler>_R)) -}
5baf842a5d612b2516b5ea0be2857a6c
  $fStorableInputHandler_$cpeekByteOff ::
    GHC.Ptr.Ptr b
    -> GHC.Types.Int -> GHC.Types.IO Foreign.R.EventLoop.InputHandler
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.EventLoop.$fStorableInputHandler4
                  `cast`
                (forall (b :: <*>_N).
                 <GHC.Ptr.Ptr b>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.EventLoop.InputHandler>_R)) -}
5baf842a5d612b2516b5ea0be2857a6c
  $fStorableInputHandler_$cpeekElemOff ::
    GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> GHC.Types.Int -> GHC.Types.IO Foreign.R.EventLoop.InputHandler
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.EventLoop.$fStorableInputHandler6
                  `cast`
                (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.EventLoop.InputHandler>_R)) -}
5baf842a5d612b2516b5ea0be2857a6c
  $fStorableInputHandler_$cpoke ::
    GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> Foreign.R.EventLoop.InputHandler -> GHC.Types.IO ()
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S(S)S(S)S(S)S(S)S(S)S(S)),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.EventLoop.$fStorableInputHandler1
                  `cast`
                (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                 ->_R <Foreign.R.EventLoop.InputHandler>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
5baf842a5d612b2516b5ea0be2857a6c
  $fStorableInputHandler_$cpokeByteOff ::
    GHC.Ptr.Ptr b
    -> GHC.Types.Int
    -> Foreign.R.EventLoop.InputHandler
    -> GHC.Types.IO ()
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S(S)S(S)S(S)S(S)S(S)S(S)),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.EventLoop.$fStorableInputHandler3
                  `cast`
                (forall (b :: <*>_N).
                 <GHC.Ptr.Ptr b>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <Foreign.R.EventLoop.InputHandler>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
5baf842a5d612b2516b5ea0be2857a6c
  $fStorableInputHandler_$cpokeElemOff ::
    GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> GHC.Types.Int
    -> Foreign.R.EventLoop.InputHandler
    -> GHC.Types.IO ()
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S(S)S(S)S(S)S(S)S(S)S(S)),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.EventLoop.$fStorableInputHandler5
                  `cast`
                (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <Foreign.R.EventLoop.InputHandler>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
5baf842a5d612b2516b5ea0be2857a6c
  $fStorableInputHandler_$csizeOf ::
    Foreign.R.EventLoop.InputHandler -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Foreign.R.EventLoop.InputHandler) ->
                 Foreign.R.EventLoop.$fStorableInputHandler8) -}
a0f6234d9b90afaddace62fb5bf63139
  $tc'InputHandler :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18165054212053590253##
                   12298854735993937170##
                   Foreign.R.EventLoop.$trModule
                   Foreign.R.EventLoop.$tc'InputHandler1) -}
b2290300cefcc6af6f9871ab67c8f2ac
  $tc'InputHandler1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'InputHandler"#) -}
828d398d49a10798f2684734a46c3aa2
  $tcFdSet :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11801826800672465696##
                   402191255724115863##
                   Foreign.R.EventLoop.$trModule
                   Foreign.R.EventLoop.$tcFdSet1) -}
4536c6d11f6b1abbe327a6b41bf11843
  $tcFdSet1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "FdSet"#) -}
d47d87b3d0eda70c49d5aea4f128ee34
  $tcInputHandler :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10110606793623282656##
                   13779812265288378126##
                   Foreign.R.EventLoop.$trModule
                   Foreign.R.EventLoop.$tcInputHandler1) -}
25b24a370d6eff4e16612b7dd5c96d57
  $tcInputHandler1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "InputHandler"#) -}
0ba7cf605b549abd741da1f320ddd7d4
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Foreign.R.EventLoop.$trModule2
                   Foreign.R.EventLoop.$trModule1) -}
15e3f65782bcb08690a88ebf97c05fd5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Foreign.R.EventLoop"#) -}
bfa104337d1f6784032c2602ee730d8e
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs"#) -}
5baf842a5d612b2516b5ea0be2857a6c
  $w$c== ::
    GHC.Prim.Addr#
    -> Foreign.C.Types.CInt
    -> Foreign.C.Types.CInt
    -> System.Posix.Types.Fd
    -> GHC.Ptr.Ptr ()
    -> GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> GHC.Prim.Addr#
    -> Foreign.C.Types.CInt
    -> Foreign.C.Types.CInt
    -> System.Posix.Types.Fd
    -> GHC.Ptr.Ptr ()
    -> GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> GHC.Types.Bool
  {- Arity: 12, HasNoCafRefs,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: Foreign.C.Types.CInt)
                   (ww2 :: Foreign.C.Types.CInt)
                   (ww3 :: System.Posix.Types.Fd)
                   (ww4 :: GHC.Ptr.Ptr ())
                   (ww5 :: GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler)
                   (ww6 :: GHC.Prim.Addr#)
                   (ww7 :: Foreign.C.Types.CInt)
                   (ww8 :: Foreign.C.Types.CInt)
                   (ww9 :: System.Posix.Types.Fd)
                   (ww10 :: GHC.Ptr.Ptr ())
                   (ww11 :: GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqAddr# ww ww6) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case ww1
                             `cast`
                           (Foreign.C.Types.N:CInt[0]) of wild1 { GHC.Int.I32# x ->
                      case ww7
                             `cast`
                           (Foreign.C.Types.N:CInt[0]) of wild2 { GHC.Int.I32# y ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# x y) of wild3 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case ww2
                                  `cast`
                                (Foreign.C.Types.N:CInt[0]) of wild4 { GHC.Int.I32# x1 ->
                           case ww8
                                  `cast`
                                (Foreign.C.Types.N:CInt[0]) of wild5 { GHC.Int.I32# y1 ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# x1 y1) of wild6 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case ww3
                                       `cast`
                                     (Trans
                                          (System.Posix.Types.N:Fd[0])
                                          (Foreign.C.Types.N:CInt[0])) of wild7 { GHC.Int.I32# x2 ->
                                case ww9
                                       `cast`
                                     (Trans
                                          (System.Posix.Types.N:Fd[0])
                                          (Foreign.C.Types.N:CInt[0])) of wild8 { GHC.Int.I32# y2 ->
                                case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# x2 y2) of wild9 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True
                                  -> case ww4 of wild10 { GHC.Ptr.Ptr a1 ->
                                     case ww10 of wild11 { GHC.Ptr.Ptr b1 ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.eqAddr# a1 b1) of wild12 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True
                                       -> GHC.Ptr.$fEqPtr_$c==
                                            @ Foreign.R.EventLoop.InputHandler
                                            ww5
                                            ww11 } } } } } } } } } } } } }) -}
5baf842a5d612b2516b5ea0be2857a6c
  $w$cpeek ::
    GHC.Prim.Addr#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.EventLoop.InputHandler #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.readAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# ww 8#)
                        0#
                        w of ds2 { (#,#) ipv ipv1 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        ww
                        0#
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# ww 24#)
                        0#
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# ww 4#)
                        0#
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.Prim.readAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# ww 32#)
                        0#
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 case GHC.Prim.readAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# ww 16#)
                        0#
                        ipv8 of ds6 { (#,#) ipv10 ipv11 ->
                 (# ipv10,
                    Foreign.R.EventLoop.InputHandler
                      (GHC.Ptr.FunPtr @ (GHC.Ptr.Ptr () -> GHC.Types.IO ()) ipv1)
                      (GHC.Int.I32# ipv3) `cast` (Sym (Foreign.C.Types.N:CInt[0]))
                      (GHC.Int.I32# ipv5) `cast` (Sym (Foreign.C.Types.N:CInt[0]))
                      (GHC.Int.I32# ipv7)
                        `cast`
                      (Trans
                           (Sym (Foreign.C.Types.N:CInt[0]))
                           (Sym (System.Posix.Types.N:Fd[0])))
                      (GHC.Ptr.Ptr @ () ipv9)
                      (GHC.Ptr.Ptr @ GHC.Prim.Any ipv11)
                        `cast`
                      (GHC.Ptr.Ptr
                         <GHC.Prim.Any, Foreign.R.EventLoop.InputHandler>)_R #) } } } } } }) -}
5baf842a5d612b2516b5ea0be2857a6c
  $w$cpeekByteOff ::
    GHC.Prim.Addr#
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.EventLoop.InputHandler #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ b
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.Prim.Int#)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   addr :: GHC.Prim.Addr# = GHC.Prim.plusAddr# ww ww1
                 } in
                 case GHC.Prim.readAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 8#)
                        0#
                        w of ds2 { (#,#) ipv ipv1 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        addr
                        0#
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 24#)
                        0#
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 4#)
                        0#
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.Prim.readAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 32#)
                        0#
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 case GHC.Prim.readAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 16#)
                        0#
                        ipv8 of ds6 { (#,#) ipv10 ipv11 ->
                 (# ipv10,
                    Foreign.R.EventLoop.InputHandler
                      (GHC.Ptr.FunPtr @ (GHC.Ptr.Ptr () -> GHC.Types.IO ()) ipv1)
                      (GHC.Int.I32# ipv3) `cast` (Sym (Foreign.C.Types.N:CInt[0]))
                      (GHC.Int.I32# ipv5) `cast` (Sym (Foreign.C.Types.N:CInt[0]))
                      (GHC.Int.I32# ipv7)
                        `cast`
                      (Trans
                           (Sym (Foreign.C.Types.N:CInt[0]))
                           (Sym (System.Posix.Types.N:Fd[0])))
                      (GHC.Ptr.Ptr @ () ipv9)
                      (GHC.Ptr.Ptr @ GHC.Prim.Any ipv11)
                        `cast`
                      (GHC.Ptr.Ptr
                         <GHC.Prim.Any, Foreign.R.EventLoop.InputHandler>)_R #) } } } } } }) -}
5baf842a5d612b2516b5ea0be2857a6c
  $w$cpeekElemOff ::
    GHC.Prim.Addr#
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.EventLoop.InputHandler #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.Prim.Int#)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   addr :: GHC.Prim.Addr#
                   = GHC.Prim.plusAddr# ww (GHC.Prim.*# ww1 40#)
                 } in
                 case GHC.Prim.readAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 8#)
                        0#
                        w of ds2 { (#,#) ipv ipv1 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        addr
                        0#
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 24#)
                        0#
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 4#)
                        0#
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.Prim.readAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 32#)
                        0#
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 case GHC.Prim.readAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 16#)
                        0#
                        ipv8 of ds6 { (#,#) ipv10 ipv11 ->
                 (# ipv10,
                    Foreign.R.EventLoop.InputHandler
                      (GHC.Ptr.FunPtr @ (GHC.Ptr.Ptr () -> GHC.Types.IO ()) ipv1)
                      (GHC.Int.I32# ipv3) `cast` (Sym (Foreign.C.Types.N:CInt[0]))
                      (GHC.Int.I32# ipv5) `cast` (Sym (Foreign.C.Types.N:CInt[0]))
                      (GHC.Int.I32# ipv7)
                        `cast`
                      (Trans
                           (Sym (Foreign.C.Types.N:CInt[0]))
                           (Sym (System.Posix.Types.N:Fd[0])))
                      (GHC.Ptr.Ptr @ () ipv9)
                      (GHC.Ptr.Ptr @ GHC.Prim.Any ipv11)
                        `cast`
                      (GHC.Ptr.Ptr
                         <GHC.Prim.Any, Foreign.R.EventLoop.InputHandler>)_R #) } } } } } }) -}
5baf842a5d612b2516b5ea0be2857a6c
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Ptr.FunPtr (GHC.Ptr.Ptr () -> GHC.Types.IO ())
    -> Foreign.C.Types.CInt
    -> Foreign.C.Types.CInt
    -> System.Posix.Types.Fd
    -> GHC.Ptr.Ptr ()
    -> GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 8,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,U>,
     Inline: [0] -}
e70ae3b43a9f582e655e4e1521fa5486
  $wremoveInputHandler ::
    GHC.Prim.Addr#
    -> GHC.Prim.Addr#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 3, Strictness: <S,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.Prim.Addr#)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newAlignedPinnedByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        8#
                        w of ds2 { (#,#) ipv ipv1 ->
                 case GHC.Prim.unsafeFreezeByteArray#
                        @ GHC.Prim.RealWorld
                        ipv1
                        ipv of ds3 { (#,#) ipv2 ipv3 ->
                 let {
                   ptr :: GHC.Prim.Addr# = GHC.Prim.byteArrayContents# ipv3
                 } in
                 case GHC.Prim.writeAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        ptr
                        0#
                        ww
                        ipv2 of s2 { DEFAULT ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs removeInputHandler GHC.Prim.Addr#
                                                                                                -> GHC.Prim.Addr#
                                                                                                -> GHC.Prim.State#
                                                                                                     GHC.Prim.RealWorld
                                                                                                -> (# GHC.Prim.State#
                                                                                                        GHC.Prim.RealWorld,
                                                                                                      GHC.Prim.Int# #)}
                        ptr
                        ww1
                        s2 of wild { (#,#) ds ds1 ->
                 case GHC.Prim.narrow32Int# ds1 of wild1 {
                   DEFAULT
                   -> case Foreign.R.EventLoop.removeInputHandler2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
                      of {}
                   0#
                   -> case GHC.Prim.touch#
                             @ 'GHC.Types.PtrRepUnlifted
                             @ GHC.Prim.ByteArray#
                             ipv3
                             ds of s4 { DEFAULT ->
                      (# s4, GHC.Types.False #) }
                   1#
                   -> case GHC.Prim.touch#
                             @ 'GHC.Types.PtrRepUnlifted
                             @ GHC.Prim.ByteArray#
                             ipv3
                             ds of s4 { DEFAULT ->
                      (# s4, GHC.Types.True #) } } } } } }) -}
f434cfa087968c21efa08bfbfbe93dd5
  data FdSet
5baf842a5d612b2516b5ea0be2857a6c
  data InputHandler
    = InputHandler {inputHandlerCallback :: GHC.Ptr.FunPtr
                                              (GHC.Ptr.Ptr () -> GHC.Types.IO ()),
                    inputHandlerActivity :: Foreign.C.Types.CInt,
                    inputHandlerActive :: Foreign.C.Types.CInt,
                    inputHandlerFD :: System.Posix.Types.Fd,
                    inputHandlerUserData :: GHC.Ptr.Ptr (),
                    inputHandlerNext :: GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler}
    RecFlag: Recursive
9694a69ea03ad8941e31a4893def9207
  addInputHandler ::
    GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> System.Posix.Types.Fd
    -> GHC.Ptr.FunPtr (GHC.Ptr.Ptr () -> GHC.Types.IO ())
    -> GHC.Types.Int
    -> GHC.Types.IO (GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.EventLoop.addInputHandler1
                  `cast`
                (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                 ->_R <System.Posix.Types.Fd>_R
                 ->_R <GHC.Ptr.FunPtr (GHC.Ptr.Ptr () -> GHC.Types.IO ())>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R)) -}
373857704edca36ed0360a76d516193f
  addInputHandler1 ::
    GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> System.Posix.Types.Fd
    -> GHC.Ptr.FunPtr (GHC.Ptr.Ptr () -> GHC.Types.IO ())
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler #)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (5, True, False)
                (\ (ihptr :: GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler)
                   (fd :: System.Posix.Types.Fd)
                   (f :: GHC.Ptr.FunPtr (GHC.Ptr.Ptr () -> GHC.Types.IO ()))
                   (activity :: GHC.Types.Int)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ihptr of ds { GHC.Ptr.Ptr ds1 ->
                 case fd
                        `cast`
                      (Trans
                           (System.Posix.Types.N:Fd[0])
                           (Foreign.C.Types.N:CInt[0])) of ds2 { GHC.Int.I32# ds3 ->
                 case f of ds4 { GHC.Ptr.FunPtr ds5 ->
                 case activity of wild { GHC.Types.I# x# ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs addInputHandler GHC.Prim.Addr#
                                                                                             -> GHC.Prim.Int#
                                                                                             -> GHC.Prim.Addr#
                                                                                             -> GHC.Prim.Int#
                                                                                             -> GHC.Prim.State#
                                                                                                  GHC.Prim.RealWorld
                                                                                             -> (# GHC.Prim.State#
                                                                                                     GHC.Prim.RealWorld,
                                                                                                   GHC.Prim.Addr# #)}
                        ds1
                        ds3
                        ds5
                        (GHC.Prim.narrow32Int# x#)
                        eta of wild1 { (#,#) ds6 ds7 ->
                 (# ds6,
                    GHC.Ptr.Ptr @ Foreign.R.EventLoop.InputHandler ds7 #) } } } } }) -}
3948e924136974f85805639e3171a727
  checkActivity ::
    Foreign.C.Types.CInt
    -> Foreign.C.Types.CInt
    -> GHC.Types.IO (GHC.Ptr.Ptr Foreign.R.EventLoop.FdSet)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, False, False)
                (\ (ds :: GHC.Int.Int32)
                   (ds1 :: GHC.Int.Int32)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of ds2 { GHC.Int.I32# ds3 ->
                 case ds1 of ds4 { GHC.Int.I32# ds5 ->
                 case {__pkg_ccall inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_checkActivity GHC.Prim.Int#
                                                                                          -> GHC.Prim.Int#
                                                                                          -> GHC.Prim.State#
                                                                                               GHC.Prim.RealWorld
                                                                                          -> (# GHC.Prim.State#
                                                                                                  GHC.Prim.RealWorld,
                                                                                                GHC.Prim.Addr# #)}
                        ds3
                        ds5
                        eta of wild { (#,#) ds6 ds7 ->
                 (# ds6, GHC.Ptr.Ptr @ Foreign.R.EventLoop.FdSet ds7 #) } } })
                  `cast`
                (Sym (Foreign.C.Types.N:CInt[0])
                 ->_R Sym (Foreign.C.Types.N:CInt[0])
                 ->_R Sym (GHC.Types.N:IO[0]
                               <GHC.Ptr.Ptr Foreign.R.EventLoop.FdSet>_R)) -}
cadf952c6466698114d18156c12143de
  graphicsPolledEvents ::
    GHC.Ptr.Ptr (GHC.Ptr.FunPtr (GHC.Types.IO ()))
  {- Strictness: m,
     Unfolding: (GHC.Ptr.Ptr
                   @ (GHC.Ptr.FunPtr (GHC.Types.IO ()))
                   __label "Rg_PolledEvents" (data)) -}
6cf4b6bca9c26f3316ea845ec7a6955c
  graphicsPollingPeriod :: GHC.Ptr.Ptr Foreign.C.Types.CInt
  {- Strictness: m,
     Unfolding: (GHC.Ptr.Ptr
                   @ Foreign.C.Types.CInt
                   __label "Rg_wait_usec" (data)) -}
0dd6fdab30beb0294bb9b7c3ee57c063
  inputHandlerActive ::
    Foreign.R.EventLoop.InputHandler -> Foreign.C.Types.CInt
  RecSel Left Foreign.R.EventLoop.InputHandler
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLL),1*U(A,A,1*U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foreign.R.EventLoop.InputHandler) ->
                 case ds of wild { Foreign.R.EventLoop.InputHandler ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds3 }) -}
6df293f4e6a3ef79f2dbb881eea84ccc
  inputHandlerActivity ::
    Foreign.R.EventLoop.InputHandler -> Foreign.C.Types.CInt
  RecSel Left Foreign.R.EventLoop.InputHandler
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLL),1*U(A,1*U(U),A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foreign.R.EventLoop.InputHandler) ->
                 case ds of wild { Foreign.R.EventLoop.InputHandler ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds2 }) -}
b733b019dad0407849fb6eb62449ca5a
  inputHandlerCallback ::
    Foreign.R.EventLoop.InputHandler
    -> GHC.Ptr.FunPtr (GHC.Ptr.Ptr () -> GHC.Types.IO ())
  RecSel Left Foreign.R.EventLoop.InputHandler
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U(U),A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foreign.R.EventLoop.InputHandler) ->
                 case ds of wild { Foreign.R.EventLoop.InputHandler ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds1 }) -}
4ec046b3b98a9ed32c37663accf3758e
  inputHandlerFD ::
    Foreign.R.EventLoop.InputHandler -> System.Posix.Types.Fd
  RecSel Left Foreign.R.EventLoop.InputHandler
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLL),1*U(A,A,A,1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foreign.R.EventLoop.InputHandler) ->
                 case ds of wild { Foreign.R.EventLoop.InputHandler ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds4 }) -}
fe9aaa313f8a4b364939a75af4f156b7
  inputHandlerNext ::
    Foreign.R.EventLoop.InputHandler
    -> GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
  RecSel Left Foreign.R.EventLoop.InputHandler
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLS),1*U(A,A,A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foreign.R.EventLoop.InputHandler) ->
                 case ds of wild { Foreign.R.EventLoop.InputHandler ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds6 }) -}
2508f14e05ce7f3400447c90e787660e
  inputHandlerUserData ::
    Foreign.R.EventLoop.InputHandler -> GHC.Ptr.Ptr ()
  RecSel Left Foreign.R.EventLoop.InputHandler
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSL),1*U(A,A,A,A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foreign.R.EventLoop.InputHandler) ->
                 case ds of wild { Foreign.R.EventLoop.InputHandler ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds5 }) -}
e01dc14426746a041db3444bdac2b258
  inputHandlers ::
    GHC.Ptr.Ptr (GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler)
  {- Strictness: m,
     Unfolding: (GHC.Ptr.Ptr
                   @ (GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler)
                   __label "R_InputHandlers" (data)) -}
c9b5b67c2982b86ac657d00bf52c1213
  polledEvents :: GHC.Ptr.Ptr (GHC.Ptr.FunPtr (GHC.Types.IO ()))
  {- Strictness: m,
     Unfolding: (GHC.Ptr.Ptr
                   @ (GHC.Ptr.FunPtr (GHC.Types.IO ()))
                   __label "R_PolledEvents" (data)) -}
a97e3794ea998e1441f54588062c5541
  pollingPeriod :: GHC.Ptr.Ptr Foreign.C.Types.CInt
  {- Strictness: m,
     Unfolding: (GHC.Ptr.Ptr
                   @ Foreign.C.Types.CInt
                   __label "R_wait_usec" (data)) -}
d9ceaa16e3d058ce37ab7b68f04fe3fb
  removeInputHandler ::
    GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> GHC.Types.IO GHC.Types.Bool
  {- Arity: 3, Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.EventLoop.removeInputHandler1
                  `cast`
                (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                 ->_R <GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)) -}
f948de49785eb8d32d7c829afe61754a
  removeInputHandler1 ::
    GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 3, Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler)
                   (w1 :: GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { GHC.Ptr.Ptr ww1 ->
                 case w1 of ww2 { GHC.Ptr.Ptr ww3 ->
                 Foreign.R.EventLoop.$wremoveInputHandler ww1 ww3 w2 } }) -}
1dec5807ea980c6206a1fe0eb36d3e6b
  removeInputHandler2 :: GHC.Types.IO GHC.Types.Bool
  {- Strictness: x -}
d56515b78f351ce71c928469e1a1d565
  runHandlers ::
    GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> GHC.Ptr.Ptr Foreign.R.EventLoop.FdSet -> GHC.Types.IO ()
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, False, False)
                (\ (ds :: GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler)
                   (ds1 :: GHC.Ptr.Ptr Foreign.R.EventLoop.FdSet)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of ds2 { GHC.Ptr.Ptr ds3 ->
                 case ds1 of ds4 { GHC.Ptr.Ptr ds5 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_runHandlers GHC.Prim.Addr#
                                                                                           -> GHC.Prim.Addr#
                                                                                           -> GHC.Prim.State#
                                                                                                GHC.Prim.RealWorld
                                                                                           -> (# GHC.Prim.State#
                                                                                                   GHC.Prim.RealWorld #)}
                        ds3
                        ds5
                        eta of wild { Unit# ds6 ->
                 (# ds6, GHC.Tuple.() #) } } })
                  `cast`
                (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                 ->_R <GHC.Ptr.Ptr Foreign.R.EventLoop.FdSet>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
instance [safe] GHC.Classes.Eq [Foreign.R.EventLoop.InputHandler]
  = Foreign.R.EventLoop.$fEqInputHandler
instance [safe] GHC.Show.Show [Foreign.R.EventLoop.InputHandler]
  = Foreign.R.EventLoop.$fShowInputHandler
instance [safe] Foreign.Storable.Storable [Foreign.R.EventLoop.InputHandler]
  = Foreign.R.EventLoop.$fStorableInputHandler
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

