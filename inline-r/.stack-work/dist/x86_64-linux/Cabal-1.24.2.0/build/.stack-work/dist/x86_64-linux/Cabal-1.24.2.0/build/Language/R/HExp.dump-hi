
==================== FINAL INTERFACE ====================
2017-12-28 08:02:21.351402 UTC

interface inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs:Language.R.HExp [boot] 8002
  interface hash: 9159402647ce20bb12fe62f3d71f670f
  ABI hash: db5873273ba29246ea59d721e9255d15
  export-list hash: f46a428a6a4652f8ba8c0092a268096b
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 5da89cf27a5f6d9c512cfc21ec7664ed
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.R.HExp.HExp
module dependencies: Foreign.R.Constraints Foreign.R.Type
                     Internal.Error
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-boot-th-8.0.2@ghc-boot-th-8.0.2
                      ghc-prim-0.5.0.0 integer-gmp-1.0.0.1
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      safe-0.3.15@safe-0.3.15-2Yd45VWFfdcKqKyispOifY
                      singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3
                      syb-0.7@syb-0.7-4OKdCpwGutyB1rNRmoa0ya template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      th-desugar-1.6@th-desugar-1.6-4xe2xTMQQiAGUPVUAkAZhp
                      th-expand-syns-0.4.3.0@th-expand-syns-0.4.3.0-A2GRp9XTxmBCMfV7DnYdn0
                      th-lift-0.7.7@th-lift-0.7.7-JWI9Gh7wB0MC9Q5wqv5aoI
                      th-lift-instances-0.1.11@th-lift-instances-0.1.11-A7sWuFC2KLsFTBmLagoRSX
                      th-orphans-0.13.4@th-orphans-0.13.4-IGsCpZ5u2Ab1MvGd5biF2z
                      th-reify-many-0.1.8@th-reify-many-0.1.8-5ZNbfXxMl3y5DMJznTzmN9
                      transformers-0.5.2.0@transformers-0.5.2.0
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Decide
         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Prelude.Instances
         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.TypeLits
         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.TypeLits.Internal
         syb-0.7@syb-0.7-4OKdCpwGutyB1rNRmoa0ya:Data.Generics.Instances
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         th-lift-0.7.7@th-lift-0.7.7-JWI9Gh7wB0MC9Q5wqv5aoI:Language.Haskell.TH.Lift
         th-lift-instances-0.1.11@th-lift-instances-0.1.11-A7sWuFC2KLsFTBmLagoRSX:Instances.TH.Lift
         th-orphans-0.13.4@th-orphans-0.13.4-IGsCpZ5u2Ab1MvGd5biF2z:Language.Haskell.TH.Instances
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs:Foreign.R.Type
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Prelude.Bool
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Prelude.Eq
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Prelude.Instances
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Prelude.Num
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Prelude.Ord
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Syntax
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.TypeLits.Internal
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         th-desugar-1.6@th-desugar-1.6-4xe2xTMQQiAGUPVUAkAZhp:Language.Haskell.TH.Desugar.Core
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  Foreign.R.Type 87886be580abef21e3eb082d49bd5e09
  exports: 4a9e8ba576dbff5e9a94102d7ea58a6b
  SEXPTYPE afeb9caa0ff491cd3c753bbb63a08899
addDependentFile "/datascience/bin/stack/programs/x86_64-linux/ghc-8.0.2/lib/ghc-8.0.2/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-1.24.2.0/build/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
04c324935fb499ebcc3b7e48e9d2e6df
  $tcHExp :: GHC.Types.TyCon
8e8ab948f0253a1ace0a25e61966b138
  $trModule :: GHC.Types.Module
8fff1796825f7d4b5f25b45e27ef548b
  type role HExp phantom nominal
  abstract(False) HExp a (b :: Foreign.R.Type.SEXPTYPE)
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False


==================== FINAL INTERFACE ====================
2017-12-28 08:02:53.82787 UTC

interface inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs:Language.R.HExp 8002
  interface hash: 2d7da39c806ab9639c962352101a2bf9
  ABI hash: 768ccdb4121f577443f4e30350c7e65e
  export-list hash: 80720591874e38dd54d698f3391e09fb
  orphan hash: 4dcb143e407632a75e69064ae84fbd11
  flag hash: 5551f07a0f35b38c45cf7028e9e97800
  sig of: Nothing
  used TH splices: False
  where
exports:
  Language.R.HExp.===
  Language.R.HExp.hexp
  Language.R.HExp.unhexp
  Language.R.HExp.vector
  Language.R.HExp.HExp{Language.R.HExp.Builtin Language.R.HExp.Bytecode Language.R.HExp.Char Language.R.HExp.Closure Language.R.HExp.Complex Language.R.HExp.DotDotDot Language.R.HExp.Env Language.R.HExp.Expr Language.R.HExp.ExtPtr Language.R.HExp.Int Language.R.HExp.Lang Language.R.HExp.List Language.R.HExp.Logical Language.R.HExp.Nil Language.R.HExp.Promise Language.R.HExp.Raw Language.R.HExp.Real Language.R.HExp.S4 Language.R.HExp.Special Language.R.HExp.String Language.R.HExp.Symbol Language.R.HExp.Vector Language.R.HExp.WeakRef}
module dependencies: Control.Memory.Region Control.Monad.R.Class
                     Control.Monad.R.Internal Data.Vector.SEXP Data.Vector.SEXP.Base
                     Data.Vector.SEXP.Mutable Data.Vector.SEXP.Mutable.Internal
                     Foreign.R Foreign.R.Constraints Foreign.R.EventLoop
                     Foreign.R.Internal Foreign.R.Type Internal.Error Language.R.Globals
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      reflection-2.1.2@reflection-2.1.2-Bem12O1xFGSHr4C2Hyu1c4
                      safe-0.3.15@safe-0.3.15-2Yd45VWFfdcKqKyispOifY
                      singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      syb-0.7@syb-0.7-4OKdCpwGutyB1rNRmoa0ya template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      th-desugar-1.6@th-desugar-1.6-4xe2xTMQQiAGUPVUAkAZhp
                      th-expand-syns-0.4.3.0@th-expand-syns-0.4.3.0-A2GRp9XTxmBCMfV7DnYdn0
                      th-lift-0.7.7@th-lift-0.7.7-JWI9Gh7wB0MC9Q5wqv5aoI
                      th-lift-instances-0.1.11@th-lift-instances-0.1.11-A7sWuFC2KLsFTBmLagoRSX
                      th-orphans-0.13.4@th-orphans-0.13.4-IGsCpZ5u2Ab1MvGd5biF2z
                      th-reify-many-0.1.8@th-reify-many-0.1.8-5ZNbfXxMl3y5DMJznTzmN9
                      transformers-0.5.2.0@transformers-0.5.2.0
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         reflection-2.1.2@reflection-2.1.2-Bem12O1xFGSHr4C2Hyu1c4:Data.Reflection
         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Decide
         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Prelude.Instances
         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.TypeLits
         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.TypeLits.Internal
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         syb-0.7@syb-0.7-4OKdCpwGutyB1rNRmoa0ya:Data.Generics.Instances
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         th-lift-0.7.7@th-lift-0.7.7-JWI9Gh7wB0MC9Q5wqv5aoI:Language.Haskell.TH.Lift
         th-lift-instances-0.1.11@th-lift-instances-0.1.11-A7sWuFC2KLsFTBmLagoRSX:Instances.TH.Lift
         th-orphans-0.13.4@th-orphans-0.13.4-IGsCpZ5u2Ab1MvGd5biF2z:Language.Haskell.TH.Instances
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs:Control.Memory.Region
                         inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs:Data.Vector.SEXP
                         inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs:Foreign.R.Type
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Prelude.Bool
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Prelude.Eq
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Prelude.Instances
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Prelude.Num
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Prelude.Ord
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Syntax
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.TypeLits.Internal
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         th-desugar-1.6@th-desugar-1.6-4xe2xTMQQiAGUPVUAkAZhp:Language.Haskell.TH.Desugar.Core
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
import  -/  base-4.9.1.0:Control.Applicative 32430a90492e727f4bd80db71c28600c
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Data.Complex ec864ed8b68bbdf9c6cffa700c3cfe8e
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:Data.Int 07f5a36c488acfe0ac32e81c7536b8ff
import  -/  base-4.9.1.0:Data.Maybe d876c4ffe4b3c43755a781e8ad860d88
import  -/  base-4.9.1.0:Data.Type.Equality e58d97d060ef5a0f7906bf33d6e50df2
import  -/  base-4.9.1.0:Data.Word 77f42e01d0fb6b071f1ea2176d87fa6c
import  -/  base-4.9.1.0:Foreign b4bee334aade4f33021057fdecf4a495
import  -/  base-4.9.1.0:Foreign.C b8d6c8cd5e89ba05da67379943abaffb
import  -/  base-4.9.1.0:Foreign.C.Types bf568ee9a3ec4aa42333a0da5f4345de
import  -/  base-4.9.1.0:Foreign.Storable 085c8d7f42ceec1dbb4e818f06339b9d
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.Int e6f85fcab22769385fba2b5fce0acb40
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Ptr 427a6ad9312f04edb98e0f5b7c4e2596
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:Unsafe.Coerce 04e2cc33f45c897c8f9bc8758fbe5bc2
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  Control.Monad.R.Class cad819d8a5243541d9a0f1421f7ef4d8
  exports: 7b258842783caee6f8995be87e582334
  MonadR 1f397b618ab35a4d9191d2514797ac03
  Region 9ddc10a1fcce4af410d9af5cec63780b
  acquire c97740e9eedd70c24248a6eb93268c15
  io 47b7fbff6ab092e9379deafe03b9e9eb
import  -/  Data.Vector.SEXP f3382934389ac09b3b6a3233ff740f5d
  exports: 1a9edc4c4b74d90c3be54c98c7ed5206
  Vector 5a4969675eb1cadbaf3eeb53aa5ed01a
  toList 5a4969675eb1cadbaf3eeb53aa5ed01a
  unsafeFromSEXP 750d55d3c38a17cc5b7f16a9a74ec72d
  unsafeToSEXP a84182432802abb56c9285f1f7beace3
import  -/  Data.Vector.SEXP.Base 4fee69f30bb73a3bab2a9c4037daa643
  ElemRep 8e4dd549ff2b82b8535f8cd92bb19531
import  -/  Foreign.R 76af03c75eee17c66f999e9a2952a2da
  exports: 48f78775472e7fa46d6f356ef53096ba
  allocSEXP 4ae7a28b1379ff8c3d0d1cc9b0901ace
  cons 0100243ed4ac017e371118b3954f78cd
  protect da5d6af0b23aadb157f211119bb4a11b
  unprotect 1d53930f88b54905b7e5703f6cefc644
  withProtected c6d380aac0f4491df5a9e0d7bb15dac7
import  -/  Foreign.R.Constraints 117f6342e1010bca9ef8536e7a487b7b
  exports: 34af2f96967277c4ae9b0b9ab908040c
  :∈ 0289ea1e47df28016facfc4ec64ee371
import  -/  Foreign.R.Internal 94b91017c41283795b0b9850baa548e1
  SEXP fc0be32d064254795db93fc76b1941a7
  SEXP e854911eaf3995eafd7923a39be3730e
  SomeSEXP ac06eddac9c804dceae070cd71dda1a9
  SomeSEXP 2d223e0ee1874a597046c351c68c0d5d
  release 5116a27e38d30bf46ba100a28ca95c3e
  setCar 6731a61b68657699781777d181086d19
  setCdr 6bd7d7a38eaed97ba3e27ff0856179b5
  sexp 1268627fcf8e40c2ecce670fbe030f70
  typeOf e26b9c7c09b9012981d3d2dc3a28898b
  unSEXP ac9a9f4ac5a481a3cc9393d42bf465e3
  unsafeCoerce 2e39492f3a025c453536013a0cfc7981
  unsafeSEXPToVectorPtr ad9529ee338bb707cc43d0da4de9d170
  unsexp 1573041870e0760e000ed172b72eb84f
import  -/  Foreign.R.Type 87886be580abef21e3eb082d49bd5e09
  exports: 4a9e8ba576dbff5e9a94102d7ea58a6b
  Any a734370b2cac1dac40b0e4feb41135b0
  Builtin d8ac72169caf3a576f432d1d82537515
  Bytecode 85ce11fdb1549940b92a224571a5736e
  Char 5a1ac22d2987bdd3eece5f743d2cb5f4
  Closure f25a5ab3f8557db5885d7c165eba218f
  Complex e3ab53f74c77296d0ba4be591701521d
  DotDotDot 0fa1c57a0a041b5663475fe88029b40f
  Env bef9e3e9269a52cbeb1c06d7ded3b526
  Expr be9c3f2d7dd8742451490d026e98e87c
  ExtPtr 47fbb737cdf190aa2f58d5acfa226e26
  Int 6bcba177d987d55800c18b81ba8743df
  IsExpression 8319442ef302f2480c0bc1dd672b73e2
  IsPairList 7ac8f46c98b128926b8b9677d3b322c5
  IsVector 0143b1d3b569e92594aeca4f8bd230af
  Lang b3937d90d734f5d0b0900acf81c0bedf
  List f4ae464dc873c2e846b875004ec7042b
  Logical 7bdfc2078965c38226b1ce131bf680a9
  Logical 9963a440f8731b94f650595bd8b72193
  Nil 212555b06d565953b4a32f21b70b2d75
  Promise dffc4a41a38f4090cb5d9ef15da74140
  Raw d02f4414723e232e799f99e1614148a7
  Real 0c81d244b1d6437d5b712aeb06759a1e
  S4 472f50bf953d5d0dba9f06c0e2b328d2
  SBuiltin 5c321cc3cbb4e6612e25fca793420e9f
  SClosure 424ec79a35fb953d1e5f31309bf16222
  SEXPTYPE afeb9caa0ff491cd3c753bbb63a08899
  SEnv ee376fb87c528f957ed253687f51b856
  SLang e7598c5c287e53938034c858291fa1e9
  SPromise 800c92b84a35fd8f5cd3e65de868ad92
  SSpecial c969713b2991a088e7fc93af821cfc74
  SSymbol 139b97f0751773544fde87dfbffca0a9
  Special 4a537229a8b3c2392f94a647bbc6d7a7
  String dbce0f4ae053a2b4d564fb855017ab2a
  Symbol d255e2f2703d9aa2d62ec00a540bd8d4
  Vector f4e580af838f2d80bd3b1cd7b62854f9
  WeakRef 2f6932839ba059294e2a1d00d44fbd1a
import  -/  Internal.Error 4ff915c9ecc9112f8c436f5ab8665640
  exports: 1cf446c8d06e4ccec0c56e44b9f9480d
  unimplemented 9f2583d00eb497be46bc091af16bd702
  violation b92cf54c20f120b4da4d6d9cb1af1079
import  -/  Language.R.Globals 727a60bd96cf801e88bef214649657f2
  exports: b49c6114bd9b47465af7425ddde25637
  nilValue e96e7a0452e11fb5aa455cb6e7eb4b14
import  -/  primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive 6f29f7c5aeee7400d08244e0179fc37e
addDependentFile "src/Language/R/HExp.hsc"
addDependentFile "/datascience/bin/stack/programs/x86_64-linux/ghc-8.0.2/lib/ghc-8.0.2/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-1.24.2.0/build/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
166956e2a32bbf4c4fd74a454b43ba27
  $fEqHExp :: GHC.Classes.Eq (Language.R.HExp.HExp s a)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ s @ (a :: Foreign.R.Type.SEXPTYPE).
                  @ (Language.R.HExp.HExp s a)
                  (Language.R.HExp.$fEqHExp_$c== @ s @ a)
                  (Language.R.HExp.$fEqHExp_$c/= @ s @ a) -}
166956e2a32bbf4c4fd74a454b43ba27
  $fEqHExp_$c/= ::
    Language.R.HExp.HExp s a
    -> Language.R.HExp.HExp s a -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (x :: Language.R.HExp.HExp s a)
                   (y :: Language.R.HExp.HExp s a) ->
                 GHC.Classes.not (Language.R.HExp.$fEqHExp_$c== @ s @ a x y)) -}
166956e2a32bbf4c4fd74a454b43ba27
  $fEqHExp_$c== ::
    Language.R.HExp.HExp s a
    -> Language.R.HExp.HExp s a -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (x :: Language.R.HExp.HExp s a)
                   (y :: Language.R.HExp.HExp s a) ->
                 case Language.R.HExp.$fEqHExp_$ctestEquality
                        @ s
                        @ a
                        @ a
                        x
                        y of wild {
                   GHC.Base.Nothing -> GHC.Types.False
                   GHC.Base.Just ipv -> GHC.Types.True }) -}
166956e2a32bbf4c4fd74a454b43ba27
  $fEqHExp_$ctestEquality ::
    Language.R.HExp.HExp s a
    -> Language.R.HExp.HExp s b
    -> GHC.Base.Maybe (a Data.Type.Equality.:~: b)
  {- Arity: 2, Strictness: <S,1*U><L,1*U> -}
166956e2a32bbf4c4fd74a454b43ba27
  $fStorableHExp ::
    Foreign.Storable.Storable (Language.R.HExp.HExp s a)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ s @ (a :: Foreign.R.Type.SEXPTYPE).
                  @ (Language.R.HExp.HExp s a)
                  (Language.R.HExp.$fStorableHExp_$csizeOf @ s @ a)
                  (Language.R.HExp.$fStorableHExp_$calignment @ s @ a)
                  (Language.R.HExp.$fStorableHExp_$cpeekElemOff @ s @ a)
                  (Language.R.HExp.$fStorableHExp_$cpokeElemOff @ s @ a)
                  (Language.R.HExp.$fStorableHExp_$cpeekByteOff @ s @ a)
                  (Language.R.HExp.$fStorableHExp_$cpokeByteOff @ s @ a)
                  (Language.R.HExp.$fStorableHExp_$cpeek @ s @ a)
                  (Language.R.HExp.$fStorableHExp_$cpoke @ s @ a) -}
166956e2a32bbf4c4fd74a454b43ba27
  $fStorableHExp1 ::
    GHC.Ptr.Ptr (Language.R.HExp.HExp s a)
    -> Language.R.HExp.HExp s a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><S,U>,
     Unfolding: (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (s1 :: GHC.Ptr.Ptr (Language.R.HExp.HExp s a))
                   (h :: Language.R.HExp.HExp s a)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case h of wild {
                   Language.R.HExp.Nil cobox0 -> (# eta, GHC.Tuple.() #)
                   Language.R.HExp.Symbol a1 b c cobox0 irred pname value internal
                   -> case s1 of wild1 { GHC.Ptr.Ptr addr ->
                      case pname
                             `cast`
                           (Trans
                                (Foreign.R.Internal.N:SEXP[0] <s>_P <a1>_P)
                                (GHC.Ptr.Ptr
                                   <Language.R.HExp.HExp
                                      s
                                      a1, Foreign.R.Internal.SEXPREC>)_R) of wild2 { GHC.Ptr.Ptr x ->
                      case GHC.Prim.writeAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# addr 32#)
                             0#
                             x
                             eta of s2 { DEFAULT ->
                      case value
                             `cast`
                           (Trans
                                (Foreign.R.Internal.N:SEXP[0] <s>_P <b>_P)
                                (GHC.Ptr.Ptr
                                   <Language.R.HExp.HExp
                                      s
                                      b, Foreign.R.Internal.SEXPREC>)_R) of wild3 { GHC.Ptr.Ptr x1 ->
                      case GHC.Prim.writeAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# addr 40#)
                             0#
                             x1
                             s2 of s3 { DEFAULT ->
                      case internal
                             `cast`
                           (Trans
                                (Foreign.R.Internal.N:SEXP[0] <s>_P <c>_P)
                                (GHC.Ptr.Ptr
                                   <Language.R.HExp.HExp
                                      s
                                      c, Foreign.R.Internal.SEXPREC>)_R) of wild4 { GHC.Ptr.Ptr x2 ->
                      case GHC.Prim.writeAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# addr 48#)
                             0#
                             x2
                             s3 of s4 { DEFAULT ->
                      (# s4, GHC.Tuple.() #) } } } } } } }
                   Language.R.HExp.List b c a1 cobox0 $d(%,%) irred carval cdrval tagval
                   -> case s1 of wild1 { GHC.Ptr.Ptr addr ->
                      case carval
                             `cast`
                           (Trans
                                (Foreign.R.Internal.N:SEXP[0] <s>_P <a1>_P)
                                (GHC.Ptr.Ptr
                                   <Language.R.HExp.HExp
                                      s
                                      a1, Foreign.R.Internal.SEXPREC>)_R) of wild2 { GHC.Ptr.Ptr x ->
                      case GHC.Prim.writeAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# addr 32#)
                             0#
                             x
                             eta of s2 { DEFAULT ->
                      case cdrval
                             `cast`
                           (Trans
                                (Foreign.R.Internal.N:SEXP[0] <s>_P <b>_P)
                                (GHC.Ptr.Ptr
                                   <Language.R.HExp.HExp
                                      s
                                      b, Foreign.R.Internal.SEXPREC>)_R) of wild3 { GHC.Ptr.Ptr x1 ->
                      case GHC.Prim.writeAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# addr 40#)
                             0#
                             x1
                             s2 of s3 { DEFAULT ->
                      case tagval
                             `cast`
                           (Trans
                                (Foreign.R.Internal.N:SEXP[0] <s>_P <c>_P)
                                (GHC.Ptr.Ptr
                                   <Language.R.HExp.HExp
                                      s
                                      c, Foreign.R.Internal.SEXPREC>)_R) of wild4 { GHC.Ptr.Ptr x2 ->
                      case GHC.Prim.writeAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# addr 48#)
                             0#
                             x2
                             s3 of s4 { DEFAULT ->
                      (# s4, GHC.Tuple.() #) } } } } } } }
                   Language.R.HExp.Env a1 b c cobox0 $d(%,%) irred irred1 frame enclos hashtab
                   -> case s1 of wild1 { GHC.Ptr.Ptr addr ->
                      case frame
                             `cast`
                           (Trans
                                (Foreign.R.Internal.N:SEXP[0] <s>_P <a1>_P)
                                (GHC.Ptr.Ptr
                                   <Language.R.HExp.HExp
                                      s
                                      a1, Foreign.R.Internal.SEXPREC>)_R) of wild2 { GHC.Ptr.Ptr x ->
                      case GHC.Prim.writeAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# addr 32#)
                             0#
                             x
                             eta of s2 { DEFAULT ->
                      case enclos
                             `cast`
                           (Trans
                                (Foreign.R.Internal.N:SEXP[0] <s>_P <b>_P)
                                (GHC.Ptr.Ptr
                                   <Language.R.HExp.HExp
                                      s
                                      b, Foreign.R.Internal.SEXPREC>)_R) of wild3 { GHC.Ptr.Ptr x1 ->
                      case GHC.Prim.writeAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# addr 40#)
                             0#
                             x1
                             s2 of s3 { DEFAULT ->
                      case hashtab
                             `cast`
                           (Trans
                                (Foreign.R.Internal.N:SEXP[0] <s>_P <c>_P)
                                (GHC.Ptr.Ptr
                                   <Language.R.HExp.HExp
                                      s
                                      c, Foreign.R.Internal.SEXPREC>)_R) of wild4 { GHC.Ptr.Ptr x2 ->
                      case GHC.Prim.writeAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# addr 48#)
                             0#
                             x2
                             s3 of s4 { DEFAULT ->
                      (# s4, GHC.Tuple.() #) } } } } } } }
                   Language.R.HExp.Closure a1 b cobox0 $d(%,%) formals body env
                   -> case s1 of wild1 { GHC.Ptr.Ptr addr ->
                      case formals
                             `cast`
                           (Trans
                                (Foreign.R.Internal.N:SEXP[0] <s>_P <a1>_P)
                                (GHC.Ptr.Ptr
                                   <Language.R.HExp.HExp
                                      s
                                      a1, Foreign.R.Internal.SEXPREC>)_R) of wild2 { GHC.Ptr.Ptr x ->
                      case GHC.Prim.writeAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# addr 32#)
                             0#
                             x
                             eta of s2 { DEFAULT ->
                      case body
                             `cast`
                           (Trans
                                (Foreign.R.Internal.N:SEXP[0] <s>_P <b>_P)
                                (GHC.Ptr.Ptr
                                   <Language.R.HExp.HExp
                                      s
                                      b, Foreign.R.Internal.SEXPREC>)_R) of wild3 { GHC.Ptr.Ptr x1 ->
                      case GHC.Prim.writeAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# addr 40#)
                             0#
                             x1
                             s2 of s3 { DEFAULT ->
                      case env
                             `cast`
                           (Trans
                                (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Env>_P)
                                (GHC.Ptr.Ptr
                                   <Language.R.HExp.HExp
                                      s
                                      'Foreign.R.Type.Env, Foreign.R.Internal.SEXPREC>)_R) of wild4 { GHC.Ptr.Ptr x2 ->
                      case GHC.Prim.writeAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# addr 48#)
                             0#
                             x2
                             s3 of s4 { DEFAULT ->
                      (# s4, GHC.Tuple.() #) } } } } } } }
                   Language.R.HExp.Promise b c a1 cobox0 $d(%,%) irred value expr env
                   -> case s1 of wild1 { GHC.Ptr.Ptr addr ->
                      case value
                             `cast`
                           (Trans
                                (Foreign.R.Internal.N:SEXP[0] <s>_P <a1>_P)
                                (GHC.Ptr.Ptr
                                   <Language.R.HExp.HExp
                                      s
                                      a1, Foreign.R.Internal.SEXPREC>)_R) of wild2 { GHC.Ptr.Ptr x ->
                      case GHC.Prim.writeAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# addr 32#)
                             0#
                             x
                             eta of s2 { DEFAULT ->
                      case expr
                             `cast`
                           (Trans
                                (Foreign.R.Internal.N:SEXP[0] <s>_P <b>_P)
                                (GHC.Ptr.Ptr
                                   <Language.R.HExp.HExp
                                      s
                                      b, Foreign.R.Internal.SEXPREC>)_R) of wild3 { GHC.Ptr.Ptr x1 ->
                      case GHC.Prim.writeAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# addr 40#)
                             0#
                             x1
                             s2 of s3 { DEFAULT ->
                      case env
                             `cast`
                           (Trans
                                (Foreign.R.Internal.N:SEXP[0] <s>_P <c>_P)
                                (GHC.Ptr.Ptr
                                   <Language.R.HExp.HExp
                                      s
                                      c, Foreign.R.Internal.SEXPREC>)_R) of wild4 { GHC.Ptr.Ptr x2 ->
                      case GHC.Prim.writeAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# addr 48#)
                             0#
                             x2
                             s3 of s4 { DEFAULT ->
                      (# s4, GHC.Tuple.() #) } } } } } } }
                   Language.R.HExp.Lang a1 b cobox0 $d(%,%) $d(%,%)1 carval cdrval
                   -> case s1 of wild1 { GHC.Ptr.Ptr addr ->
                      case carval
                             `cast`
                           (Trans
                                (Foreign.R.Internal.N:SEXP[0] <s>_P <a1>_P)
                                (GHC.Ptr.Ptr
                                   <Language.R.HExp.HExp
                                      s
                                      a1, Foreign.R.Internal.SEXPREC>)_R) of wild2 { GHC.Ptr.Ptr x ->
                      case GHC.Prim.writeAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# addr 32#)
                             0#
                             x
                             eta of s2 { DEFAULT ->
                      case cdrval
                             `cast`
                           (Trans
                                (Foreign.R.Internal.N:SEXP[0] <s>_P <b>_P)
                                (GHC.Ptr.Ptr
                                   <Language.R.HExp.HExp
                                      s
                                      b, Foreign.R.Internal.SEXPREC>)_R) of wild3 { GHC.Ptr.Ptr x1 ->
                      case GHC.Prim.writeAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# addr 40#)
                             0#
                             x1
                             s2 of s3 { DEFAULT ->
                      (# s3, GHC.Tuple.() #) } } } } }
                   Language.R.HExp.Special cobox0 dt
                   -> case s1 of wild1 { GHC.Ptr.Ptr addr ->
                      case GHC.Prim.writeInt32OffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# addr 32#)
                             0#
                             dt
                             eta of s2 { DEFAULT ->
                      (# s2, GHC.Tuple.() #) } }
                   Language.R.HExp.Builtin cobox0 dt
                   -> case s1 of wild1 { GHC.Ptr.Ptr addr ->
                      case GHC.Prim.writeInt32OffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# addr 32#)
                             0#
                             dt
                             eta of s2 { DEFAULT ->
                      (# s2, GHC.Tuple.() #) } }
                   Language.R.HExp.Char cobox0 dt dt1 dt2 dt3
                   -> case Language.R.HExp.$fStorableHExp2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   Language.R.HExp.Logical cobox0 dt dt1 dt2 dt3
                   -> case Language.R.HExp.$fStorableHExp2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   Language.R.HExp.Int cobox0 dt dt1 dt2 dt3
                   -> case Language.R.HExp.$fStorableHExp2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   Language.R.HExp.Real cobox0 dt dt1 dt2 dt3
                   -> case Language.R.HExp.$fStorableHExp2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   Language.R.HExp.Complex cobox0 dt dt1 dt2 dt3
                   -> case Language.R.HExp.$fStorableHExp2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   Language.R.HExp.String cobox0 dt dt1 dt2 dt3
                   -> case Language.R.HExp.$fStorableHExp2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   Language.R.HExp.DotDotDot a1 cobox0 $d(%,%) ds
                   -> case Language.R.HExp.$fStorableHExp2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   Language.R.HExp.Vector cobox0 dt dt1 dt2 dt3 dt4
                   -> case Language.R.HExp.$fStorableHExp2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   Language.R.HExp.Expr cobox0 dt dt1 dt2 dt3 dt4
                   -> case Language.R.HExp.$fStorableHExp2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   Language.R.HExp.Bytecode cobox0
                   -> case Language.R.HExp.$fStorableHExp2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   Language.R.HExp.ExtPtr b cobox0 ds ds1 ds2
                   -> case Language.R.HExp.$fStorableHExp2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   Language.R.HExp.WeakRef a1 c d b cobox0 irred irred1 irred2 ds ds1 ds2 ds3
                   -> case Language.R.HExp.$fStorableHExp2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   Language.R.HExp.Raw cobox0 dt dt1 dt2 dt3
                   -> case Language.R.HExp.$fStorableHExp2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   Language.R.HExp.S4 a1 cobox0 ds
                   -> case Language.R.HExp.$fStorableHExp2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {} }) -}
e3d174b73b78136c47e2e3994bbfe315
  $fStorableHExp2 :: GHC.Types.IO ()
  {- Strictness: x -}
776b13a354a98dc6d05132acd2c54a53
  $fStorableHExp3 :: (Data.Singletons.SingI 'Foreign.R.Type.Any, ())
  {- Strictness: m,
     Unfolding: ((Foreign.R.Type.$fSingISEXPTYPEAny_$s$WSAny
                    `cast`
                  (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Any>_N),
                  GHC.Classes.C:(%%))) -}
166956e2a32bbf4c4fd74a454b43ba27
  $fStorableHExp4 ::
    GHC.Ptr.Ptr b
    -> GHC.Types.Int
    -> Language.R.HExp.HExp s a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U(U)><L,1*U(U)><S,1*U><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ (a :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   @ b
                   (ptr :: GHC.Ptr.Ptr b)
                   (off :: GHC.Types.Int)
                   (eta :: Language.R.HExp.HExp s a)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Language.R.HExp.$fStorableHExp1
                   @ s
                   @ a
                   (case ptr of wild { GHC.Ptr.Ptr addr ->
                    case off of wild1 { GHC.Types.I# d ->
                    GHC.Ptr.Ptr
                      @ (Language.R.HExp.HExp s a)
                      (GHC.Prim.plusAddr# addr d) } })
                   eta
                   eta1) -}
166956e2a32bbf4c4fd74a454b43ba27
  $fStorableHExp5 ::
    GHC.Ptr.Ptr b
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Language.R.HExp.HExp s a #)
  {- Arity: 3, Strictness: <S(S),1*U(U)><S(S),1*U(U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   @ b
                   (w :: GHC.Ptr.Ptr b)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { GHC.Ptr.Ptr ww1 ->
                 case w1 of ww2 { GHC.Types.I# ww3 ->
                 Language.R.HExp.$w$cpeekByteOff @ s @ a @ b ww1 ww3 w2 } }) -}
166956e2a32bbf4c4fd74a454b43ba27
  $fStorableHExp6 ::
    GHC.Ptr.Ptr (Language.R.HExp.HExp s a)
    -> GHC.Types.Int
    -> Language.R.HExp.HExp s a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U(U)><L,1*U(U)><S,1*U><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (ptr :: GHC.Ptr.Ptr (Language.R.HExp.HExp s a))
                   (off :: GHC.Types.Int)
                   (val :: Language.R.HExp.HExp s a)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Language.R.HExp.$fStorableHExp1
                   @ s
                   @ a
                   (case ptr of wild { GHC.Ptr.Ptr addr ->
                    case off of wild1 { GHC.Types.I# x ->
                    GHC.Ptr.Ptr
                      @ (Language.R.HExp.HExp s a)
                      (GHC.Prim.plusAddr# addr (GHC.Prim.*# x 56#)) } })
                   val
                   eta) -}
166956e2a32bbf4c4fd74a454b43ba27
  $fStorableHExp7 ::
    GHC.Ptr.Ptr (Language.R.HExp.HExp s a)
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Language.R.HExp.HExp s a #)
  {- Arity: 3, Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (ptr :: GHC.Ptr.Ptr (Language.R.HExp.HExp s a))
                   (off :: GHC.Types.Int)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case off of wild { GHC.Types.I# x ->
                 Language.R.HExp.$fStorableHExp5
                   @ s
                   @ a
                   @ (Language.R.HExp.HExp s a)
                   ptr
                   (GHC.Types.I# (GHC.Prim.*# x 56#))
                   eta }) -}
4250365eee1421debcde72eb84361f84
  $fStorableHExp8 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 8#) -}
37dcfe4acd1b3e24a23de5f908eefba3
  $fStorableHExp9 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 56#) -}
166956e2a32bbf4c4fd74a454b43ba27
  $fStorableHExp_$calignment ::
    Language.R.HExp.HExp s a -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (ds :: Language.R.HExp.HExp s a) ->
                 Language.R.HExp.$fStorableHExp8) -}
166956e2a32bbf4c4fd74a454b43ba27
  $fStorableHExp_$cpeek ::
    GHC.Ptr.Ptr (Language.R.HExp.HExp s a)
    -> GHC.Types.IO (Language.R.HExp.HExp s a)
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,U>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (x :: GHC.Ptr.Ptr (Language.R.HExp.HExp s a)) ->
                 let {
                   sptr :: Foreign.R.Internal.SEXP0
                   = Foreign.R.Internal.unsexp
                       @ s
                       @ a
                       x `cast` (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P))
                 } in
                 case Foreign.R.Internal.typeOf
                        @ s
                        @ a
                        x `cast` (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)) of wild {
                   DEFAULT
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ GHC.Base.String
                        @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                        (Internal.Error.unimplemented
                           @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                        (GHC.Base.augment
                           @ GHC.Types.Char
                           (\ @ b
                              (c :: GHC.Types.Char -> b -> b)[OneShot]
                              (n :: b)[OneShot] ->
                            GHC.CString.unpackFoldrCString# @ b "peekHExp: "# c n)
                           (Foreign.R.Type.$fShowSEXPTYPE_$cshow
                              (Foreign.R.Internal.typeOf
                                 @ s
                                 @ a
                                 x `cast` (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)))))
                   Foreign.R.Type.Nil
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Nil))
                        @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                        (Unsafe.Coerce.unsafeCoerce
                           @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Nil))
                           @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                        (GHC.Base.returnIO
                           @ (Language.R.HExp.HExp s 'Foreign.R.Type.Nil)
                           (Language.R.HExp.$WNil @ s))
                   Foreign.R.Type.Symbol
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Symbol))
                        @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                        (Unsafe.Coerce.unsafeCoerce
                           @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Symbol))
                           @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                        (GHC.Base.$fApplicativeIO_$sap
                           @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                           @ (Language.R.HExp.HExp s 'Foreign.R.Type.Symbol)
                           (GHC.Base.$fApplicativeIO_$sap
                              @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                              @ (Foreign.R.Internal.SEXP s GHC.Prim.Any
                                 -> Language.R.HExp.HExp s 'Foreign.R.Type.Symbol)
                              (Language.R.HExp.$fStorableHExp_$s<$>1
                                 @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                 @ (Foreign.R.Internal.SEXP s GHC.Prim.Any
                                    -> Foreign.R.Internal.SEXP s GHC.Prim.Any
                                    -> Language.R.HExp.HExp s 'Foreign.R.Type.Symbol)
                                 (Language.R.HExp.$fStorableHExp_$s$WSymbol
                                    @ s
                                    @ GHC.Prim.Any
                                    @ GHC.Prim.Any)
                                 (Language.R.HExp.$fStorableHExp_$s<$>1
                                    @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                    (Language.R.HExp.$fStorableHExp_$s<$>
                                       @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                       @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                       (Foreign.R.Internal.unsafeCoerce
                                          @ s
                                          @ GHC.Prim.Any
                                          @ 'Foreign.R.Type.Any)
                                       (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                                    (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                       @ Foreign.R.Internal.SEXPREC
                                       @ Foreign.R.Internal.SEXPREC
                                       sptr
                                       (GHC.Types.I# 32#))))
                              (Language.R.HExp.$fStorableHExp_$s<$>1
                                 @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                 @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                 (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any)
                                 (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                    @ Foreign.R.Internal.SEXPREC
                                    @ Foreign.R.Internal.SEXPREC
                                    sptr
                                    (GHC.Types.I# 40#))))
                           (Language.R.HExp.$fStorableHExp_$s<$>1
                              @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                              @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                              (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any)
                              (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                 @ Foreign.R.Internal.SEXPREC
                                 @ Foreign.R.Internal.SEXPREC
                                 sptr
                                 (GHC.Types.I# 48#))))
                   Foreign.R.Type.List
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.List))
                        @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                        (Unsafe.Coerce.unsafeCoerce
                           @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.List))
                           @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                        (GHC.Base.$fApplicativeIO_$sap
                           @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                           @ (Language.R.HExp.HExp s 'Foreign.R.Type.List)
                           (GHC.Base.$fApplicativeIO_$sap
                              @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                              @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                 -> Language.R.HExp.HExp s 'Foreign.R.Type.List)
                              (Language.R.HExp.$fStorableHExp_$s<$>1
                                 @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                 @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                    -> Language.R.HExp.HExp s 'Foreign.R.Type.List)
                                 (Language.R.HExp.$fStorableHExp_$s$WList @ s @ GHC.Prim.Any)
                                 (Language.R.HExp.$fStorableHExp_$s<$>1
                                    @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                    @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                    (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any)
                                    (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                       @ Foreign.R.Internal.SEXPREC
                                       @ Foreign.R.Internal.SEXPREC
                                       sptr
                                       (GHC.Types.I# 32#))))
                              (Language.R.HExp.$fStorableHExp_$s<$>1
                                 @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                 @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                 (Language.R.HExp.$fStorableHExp_$s<$>
                                    @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                    (Foreign.R.Internal.unsafeCoerce
                                       @ s
                                       @ GHC.Prim.Any
                                       @ 'Foreign.R.Type.Any)
                                    (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                                 (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                    @ Foreign.R.Internal.SEXPREC
                                    @ Foreign.R.Internal.SEXPREC
                                    sptr
                                    (GHC.Types.I# 40#))))
                           (Language.R.HExp.$fStorableHExp_$s<$>1
                              @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                              @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                              (Language.R.HExp.$fStorableHExp_$s<$>
                                 @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                 @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                 (Foreign.R.Internal.unsafeCoerce
                                    @ s
                                    @ GHC.Prim.Any
                                    @ 'Foreign.R.Type.Any)
                                 (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                              (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                 @ Foreign.R.Internal.SEXPREC
                                 @ Foreign.R.Internal.SEXPREC
                                 sptr
                                 (GHC.Types.I# 48#))))
                   Foreign.R.Type.Closure
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Closure))
                        @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                        (Unsafe.Coerce.unsafeCoerce
                           @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Closure))
                           @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                        (GHC.Base.$fApplicativeIO_$sap
                           @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env)
                           @ (Language.R.HExp.HExp s 'Foreign.R.Type.Closure)
                           (GHC.Base.$fApplicativeIO_$sap
                              @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                              @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
                                 -> Language.R.HExp.HExp s 'Foreign.R.Type.Closure)
                              (Language.R.HExp.$fStorableHExp_$s<$>1
                                 @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                 @ (Foreign.R.Internal.SEXP s GHC.Prim.Any
                                    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
                                    -> Language.R.HExp.HExp s 'Foreign.R.Type.Closure)
                                 (Language.R.HExp.$fStorableHExp_$s$WClosure @ s @ GHC.Prim.Any)
                                 (Language.R.HExp.$fStorableHExp_$s<$>1
                                    @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                    (Language.R.HExp.$fStorableHExp_$s<$>
                                       @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                       @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                       (Foreign.R.Internal.unsafeCoerce
                                          @ s
                                          @ GHC.Prim.Any
                                          @ 'Foreign.R.Type.Any)
                                       (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                                    (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                       @ Foreign.R.Internal.SEXPREC
                                       @ Foreign.R.Internal.SEXPREC
                                       sptr
                                       (GHC.Types.I# 32#))))
                              (Language.R.HExp.$fStorableHExp_$s<$>1
                                 @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                 @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                 (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any)
                                 (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                    @ Foreign.R.Internal.SEXPREC
                                    @ Foreign.R.Internal.SEXPREC
                                    sptr
                                    (GHC.Types.I# 40#))))
                           (Language.R.HExp.$fStorableHExp_$s<$>1
                              @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                              @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env)
                              (Foreign.R.Internal.sexp @ s @ 'Foreign.R.Type.Env)
                              (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                 @ Foreign.R.Internal.SEXPREC
                                 @ Foreign.R.Internal.SEXPREC
                                 sptr
                                 (GHC.Types.I# 48#))))
                   Foreign.R.Type.Env
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Env))
                        @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                        (Unsafe.Coerce.unsafeCoerce
                           @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Env))
                           @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                        (GHC.Base.$fApplicativeIO_$sap
                           @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                           @ (Language.R.HExp.HExp s 'Foreign.R.Type.Env)
                           (GHC.Base.$fApplicativeIO_$sap
                              @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                              @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                 -> Language.R.HExp.HExp s 'Foreign.R.Type.Env)
                              (Language.R.HExp.$fStorableHExp_$s<$>1
                                 @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                 @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                    -> Language.R.HExp.HExp s 'Foreign.R.Type.Env)
                                 (Language.R.HExp.$fStorableHExp_$s$WEnv @ s)
                                 (Language.R.HExp.$fStorableHExp_$s<$>1
                                    @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                    (Language.R.HExp.$fStorableHExp_$s<$>
                                       @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                       @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                       (Foreign.R.Internal.unsafeCoerce
                                          @ s
                                          @ GHC.Prim.Any
                                          @ 'Foreign.R.Type.Any)
                                       (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                                    (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                       @ Foreign.R.Internal.SEXPREC
                                       @ Foreign.R.Internal.SEXPREC
                                       sptr
                                       (GHC.Types.I# 32#))))
                              (Language.R.HExp.$fStorableHExp_$s<$>1
                                 @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                 @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                 (Language.R.HExp.$fStorableHExp_$s<$>
                                    @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                    (Foreign.R.Internal.unsafeCoerce
                                       @ s
                                       @ GHC.Prim.Any
                                       @ 'Foreign.R.Type.Any)
                                    (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                                 (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                    @ Foreign.R.Internal.SEXPREC
                                    @ Foreign.R.Internal.SEXPREC
                                    sptr
                                    (GHC.Types.I# 40#))))
                           (Language.R.HExp.$fStorableHExp_$s<$>1
                              @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                              @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                              (Language.R.HExp.$fStorableHExp_$s<$>
                                 @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                 @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                 (Foreign.R.Internal.unsafeCoerce
                                    @ s
                                    @ GHC.Prim.Any
                                    @ 'Foreign.R.Type.Any)
                                 (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                              (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                 @ Foreign.R.Internal.SEXPREC
                                 @ Foreign.R.Internal.SEXPREC
                                 sptr
                                 (GHC.Types.I# 48#))))
                   Foreign.R.Type.Promise
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Promise))
                        @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                        (Unsafe.Coerce.unsafeCoerce
                           @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Promise))
                           @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                        (GHC.Base.$fApplicativeIO_$sap
                           @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                           @ (Language.R.HExp.HExp s 'Foreign.R.Type.Promise)
                           (GHC.Base.$fApplicativeIO_$sap
                              @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                              @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                 -> Language.R.HExp.HExp s 'Foreign.R.Type.Promise)
                              (Language.R.HExp.$fStorableHExp_$s<$>1
                                 @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                 @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                    -> Language.R.HExp.HExp s 'Foreign.R.Type.Promise)
                                 (Language.R.HExp.$fStorableHExp_$s$WPromise
                                    @ s
                                    @ 'Foreign.R.Type.Any)
                                 (Language.R.HExp.$fStorableHExp_$s<$>1
                                    @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                    (Language.R.HExp.$fStorableHExp_$s<$>
                                       @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                       @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                       (Foreign.R.Internal.unsafeCoerce
                                          @ s
                                          @ GHC.Prim.Any
                                          @ 'Foreign.R.Type.Any)
                                       (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                                    (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                       @ Foreign.R.Internal.SEXPREC
                                       @ Foreign.R.Internal.SEXPREC
                                       sptr
                                       (GHC.Types.I# 32#))))
                              (Language.R.HExp.$fStorableHExp_$s<$>1
                                 @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                 @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                 (Language.R.HExp.$fStorableHExp_$s<$>
                                    @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                    (Foreign.R.Internal.unsafeCoerce
                                       @ s
                                       @ GHC.Prim.Any
                                       @ 'Foreign.R.Type.Any)
                                    (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                                 (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                    @ Foreign.R.Internal.SEXPREC
                                    @ Foreign.R.Internal.SEXPREC
                                    sptr
                                    (GHC.Types.I# 40#))))
                           (Language.R.HExp.$fStorableHExp_$s<$>1
                              @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                              @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                              (Language.R.HExp.$fStorableHExp_$s<$>
                                 @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                 @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                 (Foreign.R.Internal.unsafeCoerce
                                    @ s
                                    @ GHC.Prim.Any
                                    @ 'Foreign.R.Type.Any)
                                 (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                              (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                 @ Foreign.R.Internal.SEXPREC
                                 @ Foreign.R.Internal.SEXPREC
                                 sptr
                                 (GHC.Types.I# 48#))))
                   Foreign.R.Type.Lang
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Lang))
                        @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                        (Unsafe.Coerce.unsafeCoerce
                           @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Lang))
                           @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                        (GHC.Base.$fApplicativeIO_$sap
                           @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                           @ (Language.R.HExp.HExp s 'Foreign.R.Type.Lang)
                           (Language.R.HExp.$fStorableHExp_$s<$>1
                              @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                              @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                 -> Language.R.HExp.HExp s 'Foreign.R.Type.Lang)
                              (Language.R.HExp.$fStorableHExp_$s$WLang @ s)
                              (Language.R.HExp.$fStorableHExp_$s<$>1
                                 @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                 @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                 (Language.R.HExp.$fStorableHExp_$s<$>
                                    @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                    (Foreign.R.Internal.unsafeCoerce
                                       @ s
                                       @ GHC.Prim.Any
                                       @ 'Foreign.R.Type.Any)
                                    (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                                 (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                    @ Foreign.R.Internal.SEXPREC
                                    @ Foreign.R.Internal.SEXPREC
                                    sptr
                                    (GHC.Types.I# 32#))))
                           (Language.R.HExp.$fStorableHExp_$s<$>1
                              @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                              @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                              (Language.R.HExp.$fStorableHExp_$s<$>
                                 @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                 @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                 (Foreign.R.Internal.unsafeCoerce
                                    @ s
                                    @ GHC.Prim.Any
                                    @ 'Foreign.R.Type.Any)
                                 (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                              (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                 @ Foreign.R.Internal.SEXPREC
                                 @ Foreign.R.Internal.SEXPREC
                                 sptr
                                 (GHC.Types.I# 40#))))
                   Foreign.R.Type.Special
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Special))
                        @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                        (Unsafe.Coerce.unsafeCoerce
                           @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Special))
                           @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                        (Language.R.HExp.$fStorableHExp_$s<$>1
                           @ GHC.Int.Int32
                           @ (Language.R.HExp.HExp s 'Foreign.R.Type.Special)
                           (Language.R.HExp.$WSpecial @ s)
                           (Language.R.HExp.$fStorableHExp_$s<$>1
                              @ Foreign.C.Types.CInt
                              @ GHC.Int.Int32
                              (GHC.Base.id @ GHC.Int.Int32)
                                `cast`
                              (Sym (Foreign.C.Types.N:CInt[0]) ->_R <GHC.Int.Int32>_R)
                              (Foreign.C.Types.$fStorableCInt_$cpeekByteOff
                                 @ Foreign.R.Internal.SEXPREC
                                 sptr
                                 (GHC.Types.I# 32#))))
                   Foreign.R.Type.Builtin
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Builtin))
                        @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                        (Unsafe.Coerce.unsafeCoerce
                           @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Builtin))
                           @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                        (Language.R.HExp.$fStorableHExp_$s<$>1
                           @ GHC.Int.Int32
                           @ (Language.R.HExp.HExp s 'Foreign.R.Type.Builtin)
                           (Language.R.HExp.$WBuiltin @ s)
                           (Language.R.HExp.$fStorableHExp_$s<$>1
                              @ Foreign.C.Types.CInt
                              @ GHC.Int.Int32
                              (GHC.Base.id @ GHC.Int.Int32)
                                `cast`
                              (Sym (Foreign.C.Types.N:CInt[0]) ->_R <GHC.Int.Int32>_R)
                              (Foreign.C.Types.$fStorableCInt_$cpeekByteOff
                                 @ Foreign.R.Internal.SEXPREC
                                 sptr
                                 (GHC.Types.I# 32#))))
                   Foreign.R.Type.Char
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.Char)
                        @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                        (Unsafe.Coerce.unsafeCoerce
                           @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.Char)
                           @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                        (case Data.Vector.SEXP.unsafeFromSEXP
                                @ GHC.Prim.Any
                                @ 'Foreign.R.Type.Char
                                @ GHC.Word.Word8
                                (Foreign.Storable.$fStorableWord8,
                                 (Foreign.R.Type.$fSingISEXPTYPEChar_$s$WSChar
                                    `cast`
                                  (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Char>_N),
                                  GHC.Classes.C:(%%)),
                                 Foreign.R.Type.$fSingISEXPTYPEChar_$s$WSChar
                                   `cast`
                                 (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Char>_N),
                                 (Data.Type.Equality.$f~kab_$cp1~
                                    @ *
                                    @ GHC.Word.Word8
                                    @ GHC.Word.Word8
                                    (GHC.Types.Eq#
                                       @ *
                                       @ *
                                       @ GHC.Word.Word8
                                       @ GHC.Word.Word8
                                       @~ <GHC.Word.Word8>_N))
                                   `cast`
                                 (Sym (Data.Type.Equality.N:~[0]
                                           <*>_N) <GHC.Word.Word8>_N <GHC.Word.Word8>_N))
                                  `cast`
                                (GHC.Classes.(%,,,%)
                                   <Foreign.Storable.Storable GHC.Word.Word8>_N
                                   (GHC.Classes.(%,%)
                                      <Data.Singletons.SingI 'Foreign.R.Type.Char>_N
                                      (Sym (Foreign.R.Constraints.D:R::∈[1]
                                                <'['Foreign.R.Type.Logical, 'Foreign.R.Type.Int,
                                                   'Foreign.R.Type.Real, 'Foreign.R.Type.Complex,
                                                   'Foreign.R.Type.String, 'Foreign.R.Type.Vector,
                                                   'Foreign.R.Type.Expr, 'Foreign.R.Type.WeakRef,
                                                   'Foreign.R.Type.Raw]>_N
                                                <'Foreign.R.Type.Char>_N)))_N
                                   <Data.Singletons.SingI 'Foreign.R.Type.Char>_N
                                   ((Data.Type.Equality.~)
                                      <*>_N
                                      (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[0] <GHC.Prim.Any>_N))
                                      <GHC.Word.Word8>_N)_N)_R
                                (Unsafe.Coerce.unsafeCoerce
                                   @ (Foreign.R.Internal.SEXP s a)
                                   @ (Foreign.R.Internal.SEXP GHC.Prim.Any 'Foreign.R.Type.Char)
                                   x `cast`
                                   (Sym (Foreign.R.Internal.N:SEXP[0]
                                             <s>_P
                                             <a>_P))) of dt { Data.Vector.SEXP.Vector dt1 dt2 dt3 dt4 ->
                         Language.R.HExp.Char
                           @ GHC.Prim.Any
                           @ 'Foreign.R.Type.Char
                           @~ <'Foreign.R.Type.Char>_N
                           dt1
                           dt2
                           dt3
                           dt4 })
                   Foreign.R.Type.Logical
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.Logical)
                        @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                        (Unsafe.Coerce.unsafeCoerce
                           @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.Logical)
                           @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                        (case Data.Vector.SEXP.unsafeFromSEXP
                                @ GHC.Prim.Any
                                @ 'Foreign.R.Type.Logical
                                @ Foreign.R.Type.Logical
                                (Foreign.R.Type.$fStorableLogical,
                                 (Foreign.R.Type.$fSingISEXPTYPELogical_$s$WSLogical
                                    `cast`
                                  (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Logical>_N),
                                  GHC.Classes.C:(%%)),
                                 Foreign.R.Type.$fSingISEXPTYPELogical_$s$WSLogical
                                   `cast`
                                 (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Logical>_N),
                                 (Data.Type.Equality.$f~kab_$cp1~
                                    @ *
                                    @ Foreign.R.Type.Logical
                                    @ Foreign.R.Type.Logical
                                    (GHC.Types.Eq#
                                       @ *
                                       @ *
                                       @ Foreign.R.Type.Logical
                                       @ Foreign.R.Type.Logical
                                       @~ <Foreign.R.Type.Logical>_N))
                                   `cast`
                                 (Sym (Data.Type.Equality.N:~[0]
                                           <*>_N) <Foreign.R.Type.Logical>_N <Foreign.R.Type.Logical>_N))
                                  `cast`
                                (GHC.Classes.(%,,,%)
                                   <Foreign.Storable.Storable Foreign.R.Type.Logical>_N
                                   (GHC.Classes.(%,%)
                                      <Data.Singletons.SingI 'Foreign.R.Type.Logical>_N
                                      (Trans
                                           (Sym (Foreign.R.Constraints.D:R::∈[1]
                                                     <'['Foreign.R.Type.Int, 'Foreign.R.Type.Real,
                                                        'Foreign.R.Type.Complex,
                                                        'Foreign.R.Type.String,
                                                        'Foreign.R.Type.Vector,
                                                        'Foreign.R.Type.Expr,
                                                        'Foreign.R.Type.WeakRef,
                                                        'Foreign.R.Type.Raw]>_N
                                                     <'Foreign.R.Type.Logical>_N))
                                           (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                     <'['Foreign.R.Type.Logical,
                                                        'Foreign.R.Type.Int, 'Foreign.R.Type.Real,
                                                        'Foreign.R.Type.Complex,
                                                        'Foreign.R.Type.String,
                                                        'Foreign.R.Type.Vector,
                                                        'Foreign.R.Type.Expr,
                                                        'Foreign.R.Type.WeakRef,
                                                        'Foreign.R.Type.Raw]>_N
                                                     <'Foreign.R.Type.Char>_N
                                                     <'Foreign.R.Type.Logical>_N))))_N
                                   <Data.Singletons.SingI 'Foreign.R.Type.Logical>_N
                                   ((Data.Type.Equality.~)
                                      <*>_N
                                      (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[1] <GHC.Prim.Any>_N))
                                      <Foreign.R.Type.Logical>_N)_N)_R
                                (Unsafe.Coerce.unsafeCoerce
                                   @ (Foreign.R.Internal.SEXP s a)
                                   @ (Foreign.R.Internal.SEXP GHC.Prim.Any 'Foreign.R.Type.Logical)
                                   x `cast`
                                   (Sym (Foreign.R.Internal.N:SEXP[0]
                                             <s>_P
                                             <a>_P))) of dt { Data.Vector.SEXP.Vector dt1 dt2 dt3 dt4 ->
                         Language.R.HExp.Logical
                           @ GHC.Prim.Any
                           @ 'Foreign.R.Type.Logical
                           @~ <'Foreign.R.Type.Logical>_N
                           dt1
                           dt2
                           dt3
                           dt4 })
                   Foreign.R.Type.Int
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.Int)
                        @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                        (Unsafe.Coerce.unsafeCoerce
                           @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.Int)
                           @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                        (case Data.Vector.SEXP.unsafeFromSEXP
                                @ GHC.Prim.Any
                                @ 'Foreign.R.Type.Int
                                @ GHC.Int.Int32
                                (Foreign.Storable.$fStorableInt32,
                                 (Foreign.R.Type.$fSingISEXPTYPEInt_$s$WSInt
                                    `cast`
                                  (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Int>_N),
                                  GHC.Classes.C:(%%)),
                                 Foreign.R.Type.$fSingISEXPTYPEInt_$s$WSInt
                                   `cast`
                                 (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Int>_N),
                                 (Data.Type.Equality.$f~kab_$cp1~
                                    @ *
                                    @ GHC.Int.Int32
                                    @ GHC.Int.Int32
                                    (GHC.Types.Eq#
                                       @ *
                                       @ *
                                       @ GHC.Int.Int32
                                       @ GHC.Int.Int32
                                       @~ <GHC.Int.Int32>_N))
                                   `cast`
                                 (Sym (Data.Type.Equality.N:~[0]
                                           <*>_N) <GHC.Int.Int32>_N <GHC.Int.Int32>_N))
                                  `cast`
                                (GHC.Classes.(%,,,%)
                                   <Foreign.Storable.Storable GHC.Int.Int32>_N
                                   (GHC.Classes.(%,%)
                                      <Data.Singletons.SingI 'Foreign.R.Type.Int>_N
                                      (Trans
                                           (Sym (Foreign.R.Constraints.D:R::∈[1]
                                                     <'['Foreign.R.Type.Real,
                                                        'Foreign.R.Type.Complex,
                                                        'Foreign.R.Type.String,
                                                        'Foreign.R.Type.Vector,
                                                        'Foreign.R.Type.Expr,
                                                        'Foreign.R.Type.WeakRef,
                                                        'Foreign.R.Type.Raw]>_N
                                                     <'Foreign.R.Type.Int>_N))
                                           (Trans
                                                (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                          <'['Foreign.R.Type.Int,
                                                             'Foreign.R.Type.Real,
                                                             'Foreign.R.Type.Complex,
                                                             'Foreign.R.Type.String,
                                                             'Foreign.R.Type.Vector,
                                                             'Foreign.R.Type.Expr,
                                                             'Foreign.R.Type.WeakRef,
                                                             'Foreign.R.Type.Raw]>_N
                                                          <'Foreign.R.Type.Logical>_N
                                                          <'Foreign.R.Type.Int>_N))
                                                (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                          <'['Foreign.R.Type.Logical,
                                                             'Foreign.R.Type.Int,
                                                             'Foreign.R.Type.Real,
                                                             'Foreign.R.Type.Complex,
                                                             'Foreign.R.Type.String,
                                                             'Foreign.R.Type.Vector,
                                                             'Foreign.R.Type.Expr,
                                                             'Foreign.R.Type.WeakRef,
                                                             'Foreign.R.Type.Raw]>_N
                                                          <'Foreign.R.Type.Char>_N
                                                          <'Foreign.R.Type.Int>_N)))))_N
                                   <Data.Singletons.SingI 'Foreign.R.Type.Int>_N
                                   ((Data.Type.Equality.~)
                                      <*>_N
                                      (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[2] <GHC.Prim.Any>_N))
                                      <GHC.Int.Int32>_N)_N)_R
                                (Unsafe.Coerce.unsafeCoerce
                                   @ (Foreign.R.Internal.SEXP s a)
                                   @ (Foreign.R.Internal.SEXP GHC.Prim.Any 'Foreign.R.Type.Int)
                                   x `cast`
                                   (Sym (Foreign.R.Internal.N:SEXP[0]
                                             <s>_P
                                             <a>_P))) of dt { Data.Vector.SEXP.Vector dt1 dt2 dt3 dt4 ->
                         Language.R.HExp.Int
                           @ GHC.Prim.Any
                           @ 'Foreign.R.Type.Int
                           @~ <'Foreign.R.Type.Int>_N
                           dt1
                           dt2
                           dt3
                           dt4 })
                   Foreign.R.Type.Real
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.Real)
                        @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                        (Unsafe.Coerce.unsafeCoerce
                           @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.Real)
                           @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                        (case Data.Vector.SEXP.unsafeFromSEXP
                                @ GHC.Prim.Any
                                @ 'Foreign.R.Type.Real
                                @ GHC.Types.Double
                                (Foreign.Storable.$fStorableDouble,
                                 (Foreign.R.Type.$fSingISEXPTYPEReal_$s$WSReal
                                    `cast`
                                  (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Real>_N),
                                  GHC.Classes.C:(%%)),
                                 Foreign.R.Type.$fSingISEXPTYPEReal_$s$WSReal
                                   `cast`
                                 (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Real>_N),
                                 (Data.Type.Equality.$f~kab_$cp1~
                                    @ *
                                    @ GHC.Types.Double
                                    @ GHC.Types.Double
                                    (GHC.Types.Eq#
                                       @ *
                                       @ *
                                       @ GHC.Types.Double
                                       @ GHC.Types.Double
                                       @~ <GHC.Types.Double>_N))
                                   `cast`
                                 (Sym (Data.Type.Equality.N:~[0]
                                           <*>_N) <GHC.Types.Double>_N <GHC.Types.Double>_N))
                                  `cast`
                                (GHC.Classes.(%,,,%)
                                   <Foreign.Storable.Storable GHC.Types.Double>_N
                                   (GHC.Classes.(%,%)
                                      <Data.Singletons.SingI 'Foreign.R.Type.Real>_N
                                      (Trans
                                           (Sym (Foreign.R.Constraints.D:R::∈[1]
                                                     <'['Foreign.R.Type.Complex,
                                                        'Foreign.R.Type.String,
                                                        'Foreign.R.Type.Vector,
                                                        'Foreign.R.Type.Expr,
                                                        'Foreign.R.Type.WeakRef,
                                                        'Foreign.R.Type.Raw]>_N
                                                     <'Foreign.R.Type.Real>_N))
                                           (Trans
                                                (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                          <'['Foreign.R.Type.Real,
                                                             'Foreign.R.Type.Complex,
                                                             'Foreign.R.Type.String,
                                                             'Foreign.R.Type.Vector,
                                                             'Foreign.R.Type.Expr,
                                                             'Foreign.R.Type.WeakRef,
                                                             'Foreign.R.Type.Raw]>_N
                                                          <'Foreign.R.Type.Int>_N
                                                          <'Foreign.R.Type.Real>_N))
                                                (Trans
                                                     (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                               <'['Foreign.R.Type.Int,
                                                                  'Foreign.R.Type.Real,
                                                                  'Foreign.R.Type.Complex,
                                                                  'Foreign.R.Type.String,
                                                                  'Foreign.R.Type.Vector,
                                                                  'Foreign.R.Type.Expr,
                                                                  'Foreign.R.Type.WeakRef,
                                                                  'Foreign.R.Type.Raw]>_N
                                                               <'Foreign.R.Type.Logical>_N
                                                               <'Foreign.R.Type.Real>_N))
                                                     (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                               <'['Foreign.R.Type.Logical,
                                                                  'Foreign.R.Type.Int,
                                                                  'Foreign.R.Type.Real,
                                                                  'Foreign.R.Type.Complex,
                                                                  'Foreign.R.Type.String,
                                                                  'Foreign.R.Type.Vector,
                                                                  'Foreign.R.Type.Expr,
                                                                  'Foreign.R.Type.WeakRef,
                                                                  'Foreign.R.Type.Raw]>_N
                                                               <'Foreign.R.Type.Char>_N
                                                               <'Foreign.R.Type.Real>_N))))))_N
                                   <Data.Singletons.SingI 'Foreign.R.Type.Real>_N
                                   ((Data.Type.Equality.~)
                                      <*>_N
                                      (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[3] <GHC.Prim.Any>_N))
                                      <GHC.Types.Double>_N)_N)_R
                                (Unsafe.Coerce.unsafeCoerce
                                   @ (Foreign.R.Internal.SEXP s a)
                                   @ (Foreign.R.Internal.SEXP GHC.Prim.Any 'Foreign.R.Type.Real)
                                   x `cast`
                                   (Sym (Foreign.R.Internal.N:SEXP[0]
                                             <s>_P
                                             <a>_P))) of dt { Data.Vector.SEXP.Vector dt1 dt2 dt3 dt4 ->
                         Language.R.HExp.Real
                           @ GHC.Prim.Any
                           @ 'Foreign.R.Type.Real
                           @~ <'Foreign.R.Type.Real>_N
                           dt1
                           dt2
                           dt3
                           dt4 })
                   Foreign.R.Type.Complex
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.Complex)
                        @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                        (Unsafe.Coerce.unsafeCoerce
                           @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.Complex)
                           @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                        (case Data.Vector.SEXP.unsafeFromSEXP
                                @ GHC.Prim.Any
                                @ 'Foreign.R.Type.Complex
                                @ (Data.Complex.Complex GHC.Types.Double)
                                (Language.R.HExp.$fStorableHExp_$s$fStorableComplex,
                                 (Foreign.R.Type.$fSingISEXPTYPEComplex_$s$WSComplex
                                    `cast`
                                  (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Complex>_N),
                                  GHC.Classes.C:(%%)),
                                 Foreign.R.Type.$fSingISEXPTYPEComplex_$s$WSComplex
                                   `cast`
                                 (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Complex>_N),
                                 (Data.Type.Equality.$f~kab_$cp1~
                                    @ *
                                    @ (Data.Complex.Complex GHC.Types.Double)
                                    @ (Data.Complex.Complex GHC.Types.Double)
                                    (GHC.Types.Eq#
                                       @ *
                                       @ *
                                       @ (Data.Complex.Complex GHC.Types.Double)
                                       @ (Data.Complex.Complex GHC.Types.Double)
                                       @~ <Data.Complex.Complex GHC.Types.Double>_N))
                                   `cast`
                                 (Sym (Data.Type.Equality.N:~[0] <*>_N) <Data.Complex.Complex
                                                                           GHC.Types.Double>_N <Data.Complex.Complex
                                                                                                  GHC.Types.Double>_N))
                                  `cast`
                                (GHC.Classes.(%,,,%)
                                   <Foreign.Storable.Storable
                                      (Data.Complex.Complex GHC.Types.Double)>_N
                                   (GHC.Classes.(%,%)
                                      <Data.Singletons.SingI 'Foreign.R.Type.Complex>_N
                                      (Trans
                                           (Sym (Foreign.R.Constraints.D:R::∈[1]
                                                     <'['Foreign.R.Type.String,
                                                        'Foreign.R.Type.Vector,
                                                        'Foreign.R.Type.Expr,
                                                        'Foreign.R.Type.WeakRef,
                                                        'Foreign.R.Type.Raw]>_N
                                                     <'Foreign.R.Type.Complex>_N))
                                           (Trans
                                                (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                          <'['Foreign.R.Type.Complex,
                                                             'Foreign.R.Type.String,
                                                             'Foreign.R.Type.Vector,
                                                             'Foreign.R.Type.Expr,
                                                             'Foreign.R.Type.WeakRef,
                                                             'Foreign.R.Type.Raw]>_N
                                                          <'Foreign.R.Type.Real>_N
                                                          <'Foreign.R.Type.Complex>_N))
                                                (Trans
                                                     (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                               <'['Foreign.R.Type.Real,
                                                                  'Foreign.R.Type.Complex,
                                                                  'Foreign.R.Type.String,
                                                                  'Foreign.R.Type.Vector,
                                                                  'Foreign.R.Type.Expr,
                                                                  'Foreign.R.Type.WeakRef,
                                                                  'Foreign.R.Type.Raw]>_N
                                                               <'Foreign.R.Type.Int>_N
                                                               <'Foreign.R.Type.Complex>_N))
                                                     (Trans
                                                          (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                    <'['Foreign.R.Type.Int,
                                                                       'Foreign.R.Type.Real,
                                                                       'Foreign.R.Type.Complex,
                                                                       'Foreign.R.Type.String,
                                                                       'Foreign.R.Type.Vector,
                                                                       'Foreign.R.Type.Expr,
                                                                       'Foreign.R.Type.WeakRef,
                                                                       'Foreign.R.Type.Raw]>_N
                                                                    <'Foreign.R.Type.Logical>_N
                                                                    <'Foreign.R.Type.Complex>_N))
                                                          (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                    <'['Foreign.R.Type.Logical,
                                                                       'Foreign.R.Type.Int,
                                                                       'Foreign.R.Type.Real,
                                                                       'Foreign.R.Type.Complex,
                                                                       'Foreign.R.Type.String,
                                                                       'Foreign.R.Type.Vector,
                                                                       'Foreign.R.Type.Expr,
                                                                       'Foreign.R.Type.WeakRef,
                                                                       'Foreign.R.Type.Raw]>_N
                                                                    <'Foreign.R.Type.Char>_N
                                                                    <'Foreign.R.Type.Complex>_N)))))))_N
                                   <Data.Singletons.SingI 'Foreign.R.Type.Complex>_N
                                   ((Data.Type.Equality.~)
                                      <*>_N
                                      (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[4] <GHC.Prim.Any>_N))
                                      <Data.Complex.Complex GHC.Types.Double>_N)_N)_R
                                (Unsafe.Coerce.unsafeCoerce
                                   @ (Foreign.R.Internal.SEXP s a)
                                   @ (Foreign.R.Internal.SEXP GHC.Prim.Any 'Foreign.R.Type.Complex)
                                   x `cast`
                                   (Sym (Foreign.R.Internal.N:SEXP[0]
                                             <s>_P
                                             <a>_P))) of dt { Data.Vector.SEXP.Vector dt1 dt2 dt3 dt4 ->
                         Language.R.HExp.Complex
                           @ GHC.Prim.Any
                           @ 'Foreign.R.Type.Complex
                           @~ <'Foreign.R.Type.Complex>_N
                           dt1
                           dt2
                           dt3
                           dt4 })
                   Foreign.R.Type.String
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.String)
                        @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                        (Unsafe.Coerce.unsafeCoerce
                           @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.String)
                           @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                        (case Data.Vector.SEXP.unsafeFromSEXP
                                @ GHC.Prim.Any
                                @ 'Foreign.R.Type.String
                                @ (Foreign.R.Internal.SEXP GHC.Prim.Any 'Foreign.R.Type.Char)
                                (Foreign.R.Internal.$fStorableSEXP
                                   @ GHC.Prim.Any
                                   @ 'Foreign.R.Type.Char,
                                 (Foreign.R.Type.$fSingISEXPTYPEString_$s$WSString
                                    `cast`
                                  (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.String>_N),
                                  GHC.Classes.C:(%%)),
                                 Foreign.R.Type.$fSingISEXPTYPEString_$s$WSString
                                   `cast`
                                 (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.String>_N),
                                 (Data.Type.Equality.$f~kab_$cp1~
                                    @ *
                                    @ (Foreign.R.Internal.SEXP GHC.Prim.Any 'Foreign.R.Type.Char)
                                    @ (Foreign.R.Internal.SEXP GHC.Prim.Any 'Foreign.R.Type.Char)
                                    (GHC.Types.Eq#
                                       @ *
                                       @ *
                                       @ (Foreign.R.Internal.SEXP GHC.Prim.Any 'Foreign.R.Type.Char)
                                       @ (Foreign.R.Internal.SEXP GHC.Prim.Any 'Foreign.R.Type.Char)
                                       @~ <Foreign.R.Internal.SEXP
                                             GHC.Prim.Any 'Foreign.R.Type.Char>_N))
                                   `cast`
                                 (Sym (Data.Type.Equality.N:~[0] <*>_N) <Foreign.R.Internal.SEXP
                                                                           GHC.Prim.Any
                                                                           'Foreign.R.Type.Char>_N <Foreign.R.Internal.SEXP
                                                                                                      GHC.Prim.Any
                                                                                                      'Foreign.R.Type.Char>_N))
                                  `cast`
                                (GHC.Classes.(%,,,%)
                                   <Foreign.Storable.Storable
                                      (Foreign.R.Internal.SEXP GHC.Prim.Any 'Foreign.R.Type.Char)>_N
                                   (GHC.Classes.(%,%)
                                      <Data.Singletons.SingI 'Foreign.R.Type.String>_N
                                      (Trans
                                           (Sym (Foreign.R.Constraints.D:R::∈[1]
                                                     <'['Foreign.R.Type.Vector,
                                                        'Foreign.R.Type.Expr,
                                                        'Foreign.R.Type.WeakRef,
                                                        'Foreign.R.Type.Raw]>_N
                                                     <'Foreign.R.Type.String>_N))
                                           (Trans
                                                (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                          <'['Foreign.R.Type.String,
                                                             'Foreign.R.Type.Vector,
                                                             'Foreign.R.Type.Expr,
                                                             'Foreign.R.Type.WeakRef,
                                                             'Foreign.R.Type.Raw]>_N
                                                          <'Foreign.R.Type.Complex>_N
                                                          <'Foreign.R.Type.String>_N))
                                                (Trans
                                                     (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                               <'['Foreign.R.Type.Complex,
                                                                  'Foreign.R.Type.String,
                                                                  'Foreign.R.Type.Vector,
                                                                  'Foreign.R.Type.Expr,
                                                                  'Foreign.R.Type.WeakRef,
                                                                  'Foreign.R.Type.Raw]>_N
                                                               <'Foreign.R.Type.Real>_N
                                                               <'Foreign.R.Type.String>_N))
                                                     (Trans
                                                          (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                    <'['Foreign.R.Type.Real,
                                                                       'Foreign.R.Type.Complex,
                                                                       'Foreign.R.Type.String,
                                                                       'Foreign.R.Type.Vector,
                                                                       'Foreign.R.Type.Expr,
                                                                       'Foreign.R.Type.WeakRef,
                                                                       'Foreign.R.Type.Raw]>_N
                                                                    <'Foreign.R.Type.Int>_N
                                                                    <'Foreign.R.Type.String>_N))
                                                          (Trans
                                                               (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                         <'['Foreign.R.Type.Int,
                                                                            'Foreign.R.Type.Real,
                                                                            'Foreign.R.Type.Complex,
                                                                            'Foreign.R.Type.String,
                                                                            'Foreign.R.Type.Vector,
                                                                            'Foreign.R.Type.Expr,
                                                                            'Foreign.R.Type.WeakRef,
                                                                            'Foreign.R.Type.Raw]>_N
                                                                         <'Foreign.R.Type.Logical>_N
                                                                         <'Foreign.R.Type.String>_N))
                                                               (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                         <'['Foreign.R.Type.Logical,
                                                                            'Foreign.R.Type.Int,
                                                                            'Foreign.R.Type.Real,
                                                                            'Foreign.R.Type.Complex,
                                                                            'Foreign.R.Type.String,
                                                                            'Foreign.R.Type.Vector,
                                                                            'Foreign.R.Type.Expr,
                                                                            'Foreign.R.Type.WeakRef,
                                                                            'Foreign.R.Type.Raw]>_N
                                                                         <'Foreign.R.Type.Char>_N
                                                                         <'Foreign.R.Type.String>_N))))))))_N
                                   <Data.Singletons.SingI 'Foreign.R.Type.String>_N
                                   ((Data.Type.Equality.~)
                                      <*>_N
                                      (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[5] <GHC.Prim.Any>_N))
                                      <Foreign.R.Internal.SEXP
                                         GHC.Prim.Any 'Foreign.R.Type.Char>_N)_N)_R
                                (Unsafe.Coerce.unsafeCoerce
                                   @ (Foreign.R.Internal.SEXP s a)
                                   @ (Foreign.R.Internal.SEXP GHC.Prim.Any 'Foreign.R.Type.String)
                                   x `cast`
                                   (Sym (Foreign.R.Internal.N:SEXP[0]
                                             <s>_P
                                             <a>_P))) of dt { Data.Vector.SEXP.Vector dt1 dt2 dt3 dt4 ->
                         Language.R.HExp.String
                           @ GHC.Prim.Any
                           @ 'Foreign.R.Type.String
                           @~ <'Foreign.R.Type.String>_N
                           dt1
                           dt2
                           dt3
                           dt4 })
                   Foreign.R.Type.DotDotDot
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ GHC.Base.String
                        @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                        (Internal.Error.unimplemented
                           @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                        (GHC.Base.augment
                           @ GHC.Types.Char
                           (\ @ b
                              (c :: GHC.Types.Char -> b -> b)[OneShot]
                              (n :: b)[OneShot] ->
                            GHC.CString.unpackFoldrCString# @ b "peekHExp: "# c n)
                           (Foreign.R.Type.$fShowSEXPTYPE_$cshow
                              (Foreign.R.Internal.typeOf
                                 @ s
                                 @ a
                                 x `cast` (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)))))
                   Foreign.R.Type.Vector
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Vector))
                        @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                        (Unsafe.Coerce.unsafeCoerce
                           @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Vector))
                           @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                        (GHC.Base.$fApplicativeIO_$sap
                           @ (Data.Vector.SEXP.Vector
                                s 'Foreign.R.Type.Vector (Foreign.R.Internal.SomeSEXP s))
                           @ (Language.R.HExp.HExp s 'Foreign.R.Type.Vector)
                           (Language.R.HExp.$fStorableHExp_$s<$>1
                              @ GHC.Int.Int32
                              @ (Data.Vector.SEXP.Vector
                                   s 'Foreign.R.Type.Vector (Foreign.R.Internal.SomeSEXP s)
                                 -> Language.R.HExp.HExp s 'Foreign.R.Type.Vector)
                              (Language.R.HExp.$WVector @ s)
                              (Language.R.HExp.$fStorableHExp_$s<$>1
                                 @ Foreign.C.Types.CInt
                                 @ GHC.Int.Int32
                                 (GHC.Base.id @ GHC.Int.Int32)
                                   `cast`
                                 (Sym (Foreign.C.Types.N:CInt[0]) ->_R <GHC.Int.Int32>_R)
                                 (Foreign.C.Types.$fStorableCInt_$cpeekByteOff
                                    @ Foreign.R.Internal.SEXPREC
                                    sptr
                                    (GHC.Types.I# 36#))))
                           (GHC.Base.returnIO
                              @ (Data.Vector.SEXP.Vector
                                   s 'Foreign.R.Type.Vector (Foreign.R.Internal.SomeSEXP s))
                              (Data.Vector.SEXP.unsafeFromSEXP
                                 @ s
                                 @ 'Foreign.R.Type.Vector
                                 @ (Foreign.R.Internal.SomeSEXP s)
                                 (Foreign.R.Internal.$fStorableSomeSEXP @ s,
                                  (Foreign.R.Type.$fSingISEXPTYPEVector_$s$WSVector
                                     `cast`
                                   (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Vector>_N),
                                   GHC.Classes.C:(%%)),
                                  Foreign.R.Type.$fSingISEXPTYPEVector_$s$WSVector
                                    `cast`
                                  (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Vector>_N),
                                  (Data.Type.Equality.$f~kab_$cp1~
                                     @ *
                                     @ (Foreign.R.Internal.SomeSEXP s)
                                     @ (Foreign.R.Internal.SomeSEXP s)
                                     (GHC.Types.Eq#
                                        @ *
                                        @ *
                                        @ (Foreign.R.Internal.SomeSEXP s)
                                        @ (Foreign.R.Internal.SomeSEXP s)
                                        @~ <Foreign.R.Internal.SomeSEXP s>_N))
                                    `cast`
                                  (Sym (Data.Type.Equality.N:~[0]
                                            <*>_N) <Foreign.R.Internal.SomeSEXP
                                                      s>_N <Foreign.R.Internal.SomeSEXP s>_N))
                                   `cast`
                                 (GHC.Classes.(%,,,%)
                                    <Foreign.Storable.Storable (Foreign.R.Internal.SomeSEXP s)>_N
                                    (GHC.Classes.(%,%)
                                       <Data.Singletons.SingI 'Foreign.R.Type.Vector>_N
                                       (Trans
                                            (Sym (Foreign.R.Constraints.D:R::∈[1]
                                                      <'['Foreign.R.Type.Expr,
                                                         'Foreign.R.Type.WeakRef,
                                                         'Foreign.R.Type.Raw]>_N
                                                      <'Foreign.R.Type.Vector>_N))
                                            (Trans
                                                 (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                           <'['Foreign.R.Type.Vector,
                                                              'Foreign.R.Type.Expr,
                                                              'Foreign.R.Type.WeakRef,
                                                              'Foreign.R.Type.Raw]>_N
                                                           <'Foreign.R.Type.String>_N
                                                           <'Foreign.R.Type.Vector>_N))
                                                 (Trans
                                                      (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                <'['Foreign.R.Type.String,
                                                                   'Foreign.R.Type.Vector,
                                                                   'Foreign.R.Type.Expr,
                                                                   'Foreign.R.Type.WeakRef,
                                                                   'Foreign.R.Type.Raw]>_N
                                                                <'Foreign.R.Type.Complex>_N
                                                                <'Foreign.R.Type.Vector>_N))
                                                      (Trans
                                                           (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                     <'['Foreign.R.Type.Complex,
                                                                        'Foreign.R.Type.String,
                                                                        'Foreign.R.Type.Vector,
                                                                        'Foreign.R.Type.Expr,
                                                                        'Foreign.R.Type.WeakRef,
                                                                        'Foreign.R.Type.Raw]>_N
                                                                     <'Foreign.R.Type.Real>_N
                                                                     <'Foreign.R.Type.Vector>_N))
                                                           (Trans
                                                                (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                          <'['Foreign.R.Type.Real,
                                                                             'Foreign.R.Type.Complex,
                                                                             'Foreign.R.Type.String,
                                                                             'Foreign.R.Type.Vector,
                                                                             'Foreign.R.Type.Expr,
                                                                             'Foreign.R.Type.WeakRef,
                                                                             'Foreign.R.Type.Raw]>_N
                                                                          <'Foreign.R.Type.Int>_N
                                                                          <'Foreign.R.Type.Vector>_N))
                                                                (Trans
                                                                     (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                               <'['Foreign.R.Type.Int,
                                                                                  'Foreign.R.Type.Real,
                                                                                  'Foreign.R.Type.Complex,
                                                                                  'Foreign.R.Type.String,
                                                                                  'Foreign.R.Type.Vector,
                                                                                  'Foreign.R.Type.Expr,
                                                                                  'Foreign.R.Type.WeakRef,
                                                                                  'Foreign.R.Type.Raw]>_N
                                                                               <'Foreign.R.Type.Logical>_N
                                                                               <'Foreign.R.Type.Vector>_N))
                                                                     (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                               <'['Foreign.R.Type.Logical,
                                                                                  'Foreign.R.Type.Int,
                                                                                  'Foreign.R.Type.Real,
                                                                                  'Foreign.R.Type.Complex,
                                                                                  'Foreign.R.Type.String,
                                                                                  'Foreign.R.Type.Vector,
                                                                                  'Foreign.R.Type.Expr,
                                                                                  'Foreign.R.Type.WeakRef,
                                                                                  'Foreign.R.Type.Raw]>_N
                                                                               <'Foreign.R.Type.Char>_N
                                                                               <'Foreign.R.Type.Vector>_N)))))))))_N
                                    <Data.Singletons.SingI 'Foreign.R.Type.Vector>_N
                                    ((Data.Type.Equality.~)
                                       <*>_N
                                       (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[6] <s>_N))
                                       <Foreign.R.Internal.SomeSEXP s>_N)_N)_R
                                 (Unsafe.Coerce.unsafeCoerce
                                    @ (Foreign.R.Internal.SEXP s a)
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Vector)
                                    x `cast` (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P))))))
                   Foreign.R.Type.Expr
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Expr))
                        @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                        (Unsafe.Coerce.unsafeCoerce
                           @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Expr))
                           @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                        (GHC.Base.$fApplicativeIO_$sap
                           @ (Data.Vector.SEXP.Vector
                                s 'Foreign.R.Type.Expr (Foreign.R.Internal.SomeSEXP s))
                           @ (Language.R.HExp.HExp s 'Foreign.R.Type.Expr)
                           (Language.R.HExp.$fStorableHExp_$s<$>1
                              @ GHC.Int.Int32
                              @ (Data.Vector.SEXP.Vector
                                   s 'Foreign.R.Type.Expr (Foreign.R.Internal.SomeSEXP s)
                                 -> Language.R.HExp.HExp s 'Foreign.R.Type.Expr)
                              (Language.R.HExp.$WExpr @ s)
                              (Language.R.HExp.$fStorableHExp_$s<$>1
                                 @ Foreign.C.Types.CInt
                                 @ GHC.Int.Int32
                                 (GHC.Base.id @ GHC.Int.Int32)
                                   `cast`
                                 (Sym (Foreign.C.Types.N:CInt[0]) ->_R <GHC.Int.Int32>_R)
                                 (Foreign.C.Types.$fStorableCInt_$cpeekByteOff
                                    @ Foreign.R.Internal.SEXPREC
                                    sptr
                                    (GHC.Types.I# 36#))))
                           (GHC.Base.returnIO
                              @ (Data.Vector.SEXP.Vector
                                   s 'Foreign.R.Type.Expr (Foreign.R.Internal.SomeSEXP s))
                              (Data.Vector.SEXP.unsafeFromSEXP
                                 @ s
                                 @ 'Foreign.R.Type.Expr
                                 @ (Foreign.R.Internal.SomeSEXP s)
                                 (Foreign.R.Internal.$fStorableSomeSEXP @ s,
                                  (Foreign.R.Type.$fSingISEXPTYPEExpr_$s$WSExpr
                                     `cast`
                                   (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Expr>_N),
                                   GHC.Classes.C:(%%)),
                                  Foreign.R.Type.$fSingISEXPTYPEExpr_$s$WSExpr
                                    `cast`
                                  (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Expr>_N),
                                  (Data.Type.Equality.$f~kab_$cp1~
                                     @ *
                                     @ (Foreign.R.Internal.SomeSEXP s)
                                     @ (Foreign.R.Internal.SomeSEXP s)
                                     (GHC.Types.Eq#
                                        @ *
                                        @ *
                                        @ (Foreign.R.Internal.SomeSEXP s)
                                        @ (Foreign.R.Internal.SomeSEXP s)
                                        @~ <Foreign.R.Internal.SomeSEXP s>_N))
                                    `cast`
                                  (Sym (Data.Type.Equality.N:~[0]
                                            <*>_N) <Foreign.R.Internal.SomeSEXP
                                                      s>_N <Foreign.R.Internal.SomeSEXP s>_N))
                                   `cast`
                                 (GHC.Classes.(%,,,%)
                                    <Foreign.Storable.Storable (Foreign.R.Internal.SomeSEXP s)>_N
                                    (GHC.Classes.(%,%)
                                       <Data.Singletons.SingI 'Foreign.R.Type.Expr>_N
                                       (Trans
                                            (Sym (Foreign.R.Constraints.D:R::∈[1]
                                                      <'['Foreign.R.Type.WeakRef,
                                                         'Foreign.R.Type.Raw]>_N
                                                      <'Foreign.R.Type.Expr>_N))
                                            (Trans
                                                 (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                           <'['Foreign.R.Type.Expr,
                                                              'Foreign.R.Type.WeakRef,
                                                              'Foreign.R.Type.Raw]>_N
                                                           <'Foreign.R.Type.Vector>_N
                                                           <'Foreign.R.Type.Expr>_N))
                                                 (Trans
                                                      (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                <'['Foreign.R.Type.Vector,
                                                                   'Foreign.R.Type.Expr,
                                                                   'Foreign.R.Type.WeakRef,
                                                                   'Foreign.R.Type.Raw]>_N
                                                                <'Foreign.R.Type.String>_N
                                                                <'Foreign.R.Type.Expr>_N))
                                                      (Trans
                                                           (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                     <'['Foreign.R.Type.String,
                                                                        'Foreign.R.Type.Vector,
                                                                        'Foreign.R.Type.Expr,
                                                                        'Foreign.R.Type.WeakRef,
                                                                        'Foreign.R.Type.Raw]>_N
                                                                     <'Foreign.R.Type.Complex>_N
                                                                     <'Foreign.R.Type.Expr>_N))
                                                           (Trans
                                                                (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                          <'['Foreign.R.Type.Complex,
                                                                             'Foreign.R.Type.String,
                                                                             'Foreign.R.Type.Vector,
                                                                             'Foreign.R.Type.Expr,
                                                                             'Foreign.R.Type.WeakRef,
                                                                             'Foreign.R.Type.Raw]>_N
                                                                          <'Foreign.R.Type.Real>_N
                                                                          <'Foreign.R.Type.Expr>_N))
                                                                (Trans
                                                                     (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                               <'['Foreign.R.Type.Real,
                                                                                  'Foreign.R.Type.Complex,
                                                                                  'Foreign.R.Type.String,
                                                                                  'Foreign.R.Type.Vector,
                                                                                  'Foreign.R.Type.Expr,
                                                                                  'Foreign.R.Type.WeakRef,
                                                                                  'Foreign.R.Type.Raw]>_N
                                                                               <'Foreign.R.Type.Int>_N
                                                                               <'Foreign.R.Type.Expr>_N))
                                                                     (Trans
                                                                          (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                                    <'['Foreign.R.Type.Int,
                                                                                       'Foreign.R.Type.Real,
                                                                                       'Foreign.R.Type.Complex,
                                                                                       'Foreign.R.Type.String,
                                                                                       'Foreign.R.Type.Vector,
                                                                                       'Foreign.R.Type.Expr,
                                                                                       'Foreign.R.Type.WeakRef,
                                                                                       'Foreign.R.Type.Raw]>_N
                                                                                    <'Foreign.R.Type.Logical>_N
                                                                                    <'Foreign.R.Type.Expr>_N))
                                                                          (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                                    <'['Foreign.R.Type.Logical,
                                                                                       'Foreign.R.Type.Int,
                                                                                       'Foreign.R.Type.Real,
                                                                                       'Foreign.R.Type.Complex,
                                                                                       'Foreign.R.Type.String,
                                                                                       'Foreign.R.Type.Vector,
                                                                                       'Foreign.R.Type.Expr,
                                                                                       'Foreign.R.Type.WeakRef,
                                                                                       'Foreign.R.Type.Raw]>_N
                                                                                    <'Foreign.R.Type.Char>_N
                                                                                    <'Foreign.R.Type.Expr>_N))))))))))_N
                                    <Data.Singletons.SingI 'Foreign.R.Type.Expr>_N
                                    ((Data.Type.Equality.~)
                                       <*>_N
                                       (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[7] <s>_N))
                                       <Foreign.R.Internal.SomeSEXP s>_N)_N)_R
                                 (Unsafe.Coerce.unsafeCoerce
                                    @ (Foreign.R.Internal.SEXP s a)
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Expr)
                                    x `cast` (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P))))))
                   Foreign.R.Type.Bytecode
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Bytecode))
                        @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                        (Unsafe.Coerce.unsafeCoerce
                           @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Bytecode))
                           @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                        (GHC.Base.returnIO
                           @ (Language.R.HExp.HExp s 'Foreign.R.Type.Bytecode)
                           (Language.R.HExp.$WBytecode @ s))
                   Foreign.R.Type.ExtPtr
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.ExtPtr))
                        @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                        (Unsafe.Coerce.unsafeCoerce
                           @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.ExtPtr))
                           @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                        (GHC.Base.$fApplicativeIO_$sap
                           @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol)
                           @ (Language.R.HExp.HExp s 'Foreign.R.Type.ExtPtr)
                           (GHC.Base.$fApplicativeIO_$sap
                              @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                              @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol
                                 -> Language.R.HExp.HExp s 'Foreign.R.Type.ExtPtr)
                              (Language.R.HExp.$fStorableHExp_$s<$>1
                                 @ (GHC.Ptr.Ptr ())
                                 @ (Foreign.R.Internal.SEXP s GHC.Prim.Any
                                    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol
                                    -> Language.R.HExp.HExp s 'Foreign.R.Type.ExtPtr)
                                 (Language.R.HExp.$WExtPtr @ s @ GHC.Prim.Any)
                                 (Language.R.HExp.$fStorableHExp_$s<$>1
                                    @ (GHC.Ptr.Ptr GHC.Prim.Any)
                                    @ (GHC.Ptr.Ptr ())
                                    (GHC.Ptr.castPtr @ GHC.Prim.Any @ ())
                                    (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                       @ GHC.Prim.Any
                                       @ Foreign.R.Internal.SEXPREC
                                       sptr
                                       (GHC.Types.I# 32#))))
                              (Language.R.HExp.$fStorableHExp_$s<$>1
                                 @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                 @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                 (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any)
                                 (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                    @ Foreign.R.Internal.SEXPREC
                                    @ Foreign.R.Internal.SEXPREC
                                    sptr
                                    (GHC.Types.I# 40#))))
                           (Language.R.HExp.$fStorableHExp_$s<$>1
                              @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                              @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol)
                              (Foreign.R.Internal.sexp @ s @ 'Foreign.R.Type.Symbol)
                              (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                 @ Foreign.R.Internal.SEXPREC
                                 @ Foreign.R.Internal.SEXPREC
                                 sptr
                                 (GHC.Types.I# 48#))))
                   Foreign.R.Type.WeakRef
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.WeakRef))
                        @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                        (Unsafe.Coerce.unsafeCoerce
                           @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.WeakRef))
                           @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                        (GHC.Base.$fApplicativeIO_$sap
                           @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                           @ (Language.R.HExp.HExp s 'Foreign.R.Type.WeakRef)
                           (GHC.Base.$fApplicativeIO_$sap
                              @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                              @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                 -> Language.R.HExp.HExp s 'Foreign.R.Type.WeakRef)
                              (GHC.Base.$fApplicativeIO_$sap
                                 @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                 @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                    -> Language.R.HExp.HExp s 'Foreign.R.Type.WeakRef)
                                 (Language.R.HExp.$fStorableHExp_$s<$>1
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                    @ (Foreign.R.Internal.SEXP s GHC.Prim.Any
                                       -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                       -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                       -> Language.R.HExp.HExp s 'Foreign.R.Type.WeakRef)
                                    (Language.R.HExp.$fStorableHExp_$s$WWeakRef @ s @ GHC.Prim.Any)
                                    (Language.R.HExp.$fStorableHExp_$s<$>1
                                       @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                       @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                       (Language.R.HExp.$fStorableHExp_$s<$>
                                          @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                          @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                          (Foreign.R.Internal.unsafeCoerce
                                             @ s
                                             @ GHC.Prim.Any
                                             @ 'Foreign.R.Type.Any)
                                          (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                                       (GHC.Storable.readPtrOffPtr
                                          @ Foreign.R.Internal.SEXPREC
                                          (GHC.Base.$
                                             @ 'GHC.Types.PtrRepLifted
                                             @ (GHC.Ptr.Ptr ())
                                             @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXP0)
                                             (GHC.Ptr.castPtr @ () @ Foreign.R.Internal.SEXP0)
                                             (Foreign.R.Internal.unsafeSEXPToVectorPtr
                                                @ s
                                                @ a
                                                x `cast`
                                                (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P))))
                                          (GHC.Types.I# 0#))))
                                 (Language.R.HExp.$fStorableHExp_$s<$>1
                                    @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                    @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                    (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any)
                                    (GHC.Storable.readPtrOffPtr
                                       @ Foreign.R.Internal.SEXPREC
                                       (GHC.Base.$
                                          @ 'GHC.Types.PtrRepLifted
                                          @ (GHC.Ptr.Ptr ())
                                          @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXP0)
                                          (GHC.Ptr.castPtr @ () @ Foreign.R.Internal.SEXP0)
                                          (Foreign.R.Internal.unsafeSEXPToVectorPtr
                                             @ s
                                             @ a
                                             x `cast`
                                             (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P))))
                                       (GHC.Types.I# 1#))))
                              (Language.R.HExp.$fStorableHExp_$s<$>1
                                 @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                 @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                 (Language.R.HExp.$fStorableHExp_$s<$>
                                    @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                    (Foreign.R.Internal.unsafeCoerce
                                       @ s
                                       @ GHC.Prim.Any
                                       @ 'Foreign.R.Type.Any)
                                    (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                                 (GHC.Storable.readPtrOffPtr
                                    @ Foreign.R.Internal.SEXPREC
                                    (GHC.Base.$
                                       @ 'GHC.Types.PtrRepLifted
                                       @ (GHC.Ptr.Ptr ())
                                       @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXP0)
                                       (GHC.Ptr.castPtr @ () @ Foreign.R.Internal.SEXP0)
                                       (Foreign.R.Internal.unsafeSEXPToVectorPtr
                                          @ s
                                          @ a
                                          x `cast`
                                          (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P))))
                                    (GHC.Types.I# 2#))))
                           (Language.R.HExp.$fStorableHExp_$s<$>1
                              @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                              @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                              (Language.R.HExp.$fStorableHExp_$s<$>
                                 @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                 @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                 (Foreign.R.Internal.unsafeCoerce
                                    @ s
                                    @ GHC.Prim.Any
                                    @ 'Foreign.R.Type.Any)
                                 (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                              (GHC.Storable.readPtrOffPtr
                                 @ Foreign.R.Internal.SEXPREC
                                 (GHC.Base.$
                                    @ 'GHC.Types.PtrRepLifted
                                    @ (GHC.Ptr.Ptr ())
                                    @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXP0)
                                    (GHC.Ptr.castPtr @ () @ Foreign.R.Internal.SEXP0)
                                    (Foreign.R.Internal.unsafeSEXPToVectorPtr
                                       @ s
                                       @ a
                                       x `cast` (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P))))
                                 (GHC.Types.I# 3#))))
                   Foreign.R.Type.Raw
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.Raw)
                        @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                        (Unsafe.Coerce.unsafeCoerce
                           @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.Raw)
                           @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                        (case Data.Vector.SEXP.unsafeFromSEXP
                                @ GHC.Prim.Any
                                @ 'Foreign.R.Type.Raw
                                @ GHC.Word.Word8
                                (Foreign.Storable.$fStorableWord8,
                                 (Foreign.R.Type.$fSingISEXPTYPERaw_$s$WSRaw
                                    `cast`
                                  (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Raw>_N),
                                  GHC.Classes.C:(%%)),
                                 Foreign.R.Type.$fSingISEXPTYPERaw_$s$WSRaw
                                   `cast`
                                 (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Raw>_N),
                                 (Data.Type.Equality.$f~kab_$cp1~
                                    @ *
                                    @ GHC.Word.Word8
                                    @ GHC.Word.Word8
                                    (GHC.Types.Eq#
                                       @ *
                                       @ *
                                       @ GHC.Word.Word8
                                       @ GHC.Word.Word8
                                       @~ <GHC.Word.Word8>_N))
                                   `cast`
                                 (Sym (Data.Type.Equality.N:~[0]
                                           <*>_N) <GHC.Word.Word8>_N <GHC.Word.Word8>_N))
                                  `cast`
                                (GHC.Classes.(%,,,%)
                                   <Foreign.Storable.Storable GHC.Word.Word8>_N
                                   (GHC.Classes.(%,%)
                                      <Data.Singletons.SingI 'Foreign.R.Type.Raw>_N
                                      (Trans
                                           (Sym (Foreign.R.Constraints.D:R::∈[1]
                                                     <'[]>_N <'Foreign.R.Type.Raw>_N))
                                           (Trans
                                                (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                          <'['Foreign.R.Type.Raw]>_N
                                                          <'Foreign.R.Type.WeakRef>_N
                                                          <'Foreign.R.Type.Raw>_N))
                                                (Trans
                                                     (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                               <'['Foreign.R.Type.WeakRef,
                                                                  'Foreign.R.Type.Raw]>_N
                                                               <'Foreign.R.Type.Expr>_N
                                                               <'Foreign.R.Type.Raw>_N))
                                                     (Trans
                                                          (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                    <'['Foreign.R.Type.Expr,
                                                                       'Foreign.R.Type.WeakRef,
                                                                       'Foreign.R.Type.Raw]>_N
                                                                    <'Foreign.R.Type.Vector>_N
                                                                    <'Foreign.R.Type.Raw>_N))
                                                          (Trans
                                                               (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                         <'['Foreign.R.Type.Vector,
                                                                            'Foreign.R.Type.Expr,
                                                                            'Foreign.R.Type.WeakRef,
                                                                            'Foreign.R.Type.Raw]>_N
                                                                         <'Foreign.R.Type.String>_N
                                                                         <'Foreign.R.Type.Raw>_N))
                                                               (Trans
                                                                    (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                              <'['Foreign.R.Type.String,
                                                                                 'Foreign.R.Type.Vector,
                                                                                 'Foreign.R.Type.Expr,
                                                                                 'Foreign.R.Type.WeakRef,
                                                                                 'Foreign.R.Type.Raw]>_N
                                                                              <'Foreign.R.Type.Complex>_N
                                                                              <'Foreign.R.Type.Raw>_N))
                                                                    (Trans
                                                                         (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                                   <'['Foreign.R.Type.Complex,
                                                                                      'Foreign.R.Type.String,
                                                                                      'Foreign.R.Type.Vector,
                                                                                      'Foreign.R.Type.Expr,
                                                                                      'Foreign.R.Type.WeakRef,
                                                                                      'Foreign.R.Type.Raw]>_N
                                                                                   <'Foreign.R.Type.Real>_N
                                                                                   <'Foreign.R.Type.Raw>_N))
                                                                         (Trans
                                                                              (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                                        <'['Foreign.R.Type.Real,
                                                                                           'Foreign.R.Type.Complex,
                                                                                           'Foreign.R.Type.String,
                                                                                           'Foreign.R.Type.Vector,
                                                                                           'Foreign.R.Type.Expr,
                                                                                           'Foreign.R.Type.WeakRef,
                                                                                           'Foreign.R.Type.Raw]>_N
                                                                                        <'Foreign.R.Type.Int>_N
                                                                                        <'Foreign.R.Type.Raw>_N))
                                                                              (Trans
                                                                                   (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                                             <'['Foreign.R.Type.Int,
                                                                                                'Foreign.R.Type.Real,
                                                                                                'Foreign.R.Type.Complex,
                                                                                                'Foreign.R.Type.String,
                                                                                                'Foreign.R.Type.Vector,
                                                                                                'Foreign.R.Type.Expr,
                                                                                                'Foreign.R.Type.WeakRef,
                                                                                                'Foreign.R.Type.Raw]>_N
                                                                                             <'Foreign.R.Type.Logical>_N
                                                                                             <'Foreign.R.Type.Raw>_N))
                                                                                   (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                                             <'['Foreign.R.Type.Logical,
                                                                                                'Foreign.R.Type.Int,
                                                                                                'Foreign.R.Type.Real,
                                                                                                'Foreign.R.Type.Complex,
                                                                                                'Foreign.R.Type.String,
                                                                                                'Foreign.R.Type.Vector,
                                                                                                'Foreign.R.Type.Expr,
                                                                                                'Foreign.R.Type.WeakRef,
                                                                                                'Foreign.R.Type.Raw]>_N
                                                                                             <'Foreign.R.Type.Char>_N
                                                                                             <'Foreign.R.Type.Raw>_N))))))))))))_N
                                   <Data.Singletons.SingI 'Foreign.R.Type.Raw>_N
                                   ((Data.Type.Equality.~)
                                      <*>_N
                                      (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[8] <GHC.Prim.Any>_N))
                                      <GHC.Word.Word8>_N)_N)_R
                                (Unsafe.Coerce.unsafeCoerce
                                   @ (Foreign.R.Internal.SEXP s a)
                                   @ (Foreign.R.Internal.SEXP GHC.Prim.Any 'Foreign.R.Type.Raw)
                                   x `cast`
                                   (Sym (Foreign.R.Internal.N:SEXP[0]
                                             <s>_P
                                             <a>_P))) of dt { Data.Vector.SEXP.Vector dt1 dt2 dt3 dt4 ->
                         Language.R.HExp.Raw
                           @ GHC.Prim.Any
                           @ 'Foreign.R.Type.Raw
                           @~ <'Foreign.R.Type.Raw>_N
                           dt1
                           dt2
                           dt3
                           dt4 })
                   Foreign.R.Type.S4
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.S4))
                        @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                        (Unsafe.Coerce.unsafeCoerce
                           @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.S4))
                           @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                        (Language.R.HExp.$fStorableHExp_$s<$>1
                           @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                           @ (Language.R.HExp.HExp s 'Foreign.R.Type.S4)
                           (Language.R.HExp.$WS4 @ s @ GHC.Prim.Any)
                           (Language.R.HExp.$fStorableHExp_$s<$>1
                              @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                              @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                              (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any)
                              (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                 @ Foreign.R.Internal.SEXPREC
                                 @ Foreign.R.Internal.SEXPREC
                                 sptr
                                 (GHC.Types.I# 48#)))) }) -}
166956e2a32bbf4c4fd74a454b43ba27
  $fStorableHExp_$cpeekByteOff ::
    GHC.Ptr.Ptr b
    -> GHC.Types.Int -> GHC.Types.IO (Language.R.HExp.HExp s a)
  {- Arity: 3, Strictness: <S(S),1*U(U)><S(S),1*U(U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.HExp.$fStorableHExp5
                  `cast`
                (forall (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N) (b :: <*>_N).
                 <GHC.Ptr.Ptr b>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)) -}
166956e2a32bbf4c4fd74a454b43ba27
  $fStorableHExp_$cpeekElemOff ::
    GHC.Ptr.Ptr (Language.R.HExp.HExp s a)
    -> GHC.Types.Int -> GHC.Types.IO (Language.R.HExp.HExp s a)
  {- Arity: 3, Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.HExp.$fStorableHExp7
                  `cast`
                (forall (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <GHC.Ptr.Ptr (Language.R.HExp.HExp s a)>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)) -}
166956e2a32bbf4c4fd74a454b43ba27
  $fStorableHExp_$cpoke ::
    GHC.Ptr.Ptr (Language.R.HExp.HExp s a)
    -> Language.R.HExp.HExp s a -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.HExp.$fStorableHExp1
                  `cast`
                (forall (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <GHC.Ptr.Ptr (Language.R.HExp.HExp s a)>_R
                 ->_R <Language.R.HExp.HExp s a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
166956e2a32bbf4c4fd74a454b43ba27
  $fStorableHExp_$cpokeByteOff ::
    GHC.Ptr.Ptr b
    -> GHC.Types.Int -> Language.R.HExp.HExp s a -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <L,1*U(U)><L,1*U(U)><S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                (\ @ s @ (a :: Foreign.R.Type.SEXPTYPE) @ b ->
                 Language.R.HExp.$fStorableHExp4 @ a @ s @ b)
                  `cast`
                (forall (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N) (b :: <*>_N).
                 <GHC.Ptr.Ptr b>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <Language.R.HExp.HExp s a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
166956e2a32bbf4c4fd74a454b43ba27
  $fStorableHExp_$cpokeElemOff ::
    GHC.Ptr.Ptr (Language.R.HExp.HExp s a)
    -> GHC.Types.Int -> Language.R.HExp.HExp s a -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <L,1*U(U)><L,1*U(U)><S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.HExp.$fStorableHExp6
                  `cast`
                (forall (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <GHC.Ptr.Ptr (Language.R.HExp.HExp s a)>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <Language.R.HExp.HExp s a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
166956e2a32bbf4c4fd74a454b43ba27
  $fStorableHExp_$csizeOf ::
    Language.R.HExp.HExp s a -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (ds :: Language.R.HExp.HExp s a) ->
                 Language.R.HExp.$fStorableHExp9) -}
166956e2a32bbf4c4fd74a454b43ba27
  $fStorableHExp_$s$WClosure ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
    -> Foreign.R.Internal.SEXP s b
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> Language.R.HExp.HExp s 'Foreign.R.Type.Closure
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: INLINE,
     Unfolding: InlineRule (3, False, False)
                (\ @ s
                   @ (b :: Foreign.R.Type.SEXPTYPE)
                   (dt :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                   (dt1 :: Foreign.R.Internal.SEXP s b)
                   (dt2 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env) ->
                 Language.R.HExp.Closure
                   @ s
                   @ 'Foreign.R.Type.Closure
                   @ 'Foreign.R.Type.Any
                   @ b
                   @~ <'Foreign.R.Type.Closure>_N
                   Language.R.HExp.$fStorableHExp3
                     `cast`
                   (GHC.Classes.(%,%)
                      <Data.Singletons.SingI 'Foreign.R.Type.Any>_N
                      (Sym (Foreign.R.Constraints.D:R::∈[0]
                                <'['Foreign.R.Type.List, 'Foreign.R.Type.Nil]>_N)))_R
                   dt
                   dt1
                   dt2) -}
166956e2a32bbf4c4fd74a454b43ba27
  $fStorableHExp_$s$WEnv ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
    -> Language.R.HExp.HExp s 'Foreign.R.Type.Env
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: INLINE,
     Unfolding: InlineRule (3, False, False)
                (\ @ s
                   (dt :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                   (dt1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                   (dt2 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any) ->
                 Language.R.HExp.Env
                   @ s
                   @ 'Foreign.R.Type.Env
                   @ 'Foreign.R.Type.Any
                   @ 'Foreign.R.Type.Any
                   @ 'Foreign.R.Type.Any
                   @~ <'Foreign.R.Type.Env>_N
                   Language.R.HExp.$fStorableHExp3
                     `cast`
                   (GHC.Classes.(%,%)
                      <Data.Singletons.SingI 'Foreign.R.Type.Any>_N
                      (Sym (Foreign.R.Constraints.D:R::∈[0]
                                <'['Foreign.R.Type.List, 'Foreign.R.Type.Nil]>_N)))_R
                   GHC.Classes.C:(%%)
                     `cast`
                   (Sub (Sym (Foreign.R.Constraints.D:R::∈[0]
                                  <'['Foreign.R.Type.Env, 'Foreign.R.Type.Nil]>_N)))
                   GHC.Classes.C:(%%)
                     `cast`
                   (Sub (Sym (Foreign.R.Constraints.D:R::∈[0]
                                  <'['Foreign.R.Type.Vector, 'Foreign.R.Type.Nil]>_N)))
                   dt
                   dt1
                   dt2) -}
166956e2a32bbf4c4fd74a454b43ba27
  $fStorableHExp_$s$WLang ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
    -> Language.R.HExp.HExp s 'Foreign.R.Type.Lang
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: INLINE,
     Unfolding: InlineRule (2, False, False)
                (\ @ s
                   (dt :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                   (dt1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any) ->
                 Language.R.HExp.Lang
                   @ s
                   @ 'Foreign.R.Type.Lang
                   @ 'Foreign.R.Type.Any
                   @ 'Foreign.R.Type.Any
                   @~ <'Foreign.R.Type.Lang>_N
                   Language.R.HExp.$fStorableHExp3
                     `cast`
                   (GHC.Classes.(%,%)
                      <Data.Singletons.SingI 'Foreign.R.Type.Any>_N
                      (Sym (Foreign.R.Constraints.D:R::∈[0]
                                <'['Foreign.R.Type.Lang, 'Foreign.R.Type.Expr,
                                   'Foreign.R.Type.Symbol]>_N)))_R
                   Language.R.HExp.$fStorableHExp3
                     `cast`
                   (GHC.Classes.(%,%)
                      <Data.Singletons.SingI 'Foreign.R.Type.Any>_N
                      (Sym (Foreign.R.Constraints.D:R::∈[0]
                                <'['Foreign.R.Type.List, 'Foreign.R.Type.Nil]>_N)))_R
                   dt
                   dt1) -}
166956e2a32bbf4c4fd74a454b43ba27
  $fStorableHExp_$s$WList ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
    -> Language.R.HExp.HExp s 'Foreign.R.Type.List
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: INLINE,
     Unfolding: InlineRule (3, False, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (dt :: Foreign.R.Internal.SEXP s a)
                   (dt1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                   (dt2 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any) ->
                 Language.R.HExp.List
                   @ s
                   @ 'Foreign.R.Type.List
                   @ 'Foreign.R.Type.Any
                   @ 'Foreign.R.Type.Any
                   @ a
                   @~ <'Foreign.R.Type.List>_N
                   Language.R.HExp.$fStorableHExp3
                     `cast`
                   (GHC.Classes.(%,%)
                      <Data.Singletons.SingI 'Foreign.R.Type.Any>_N
                      (Sym (Foreign.R.Constraints.D:R::∈[0]
                                <'['Foreign.R.Type.List, 'Foreign.R.Type.Nil]>_N)))_R
                   GHC.Classes.C:(%%)
                     `cast`
                   (Sub (Sym (Foreign.R.Constraints.D:R::∈[0]
                                  <'['Foreign.R.Type.Symbol, 'Foreign.R.Type.Nil]>_N)))
                   dt
                   dt1
                   dt2) -}
166956e2a32bbf4c4fd74a454b43ba27
  $fStorableHExp_$s$WPromise ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
    -> Language.R.HExp.HExp s 'Foreign.R.Type.Promise
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: INLINE,
     Unfolding: InlineRule (3, False, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (dt :: Foreign.R.Internal.SEXP s a)
                   (dt1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                   (dt2 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any) ->
                 Language.R.HExp.Promise
                   @ s
                   @ 'Foreign.R.Type.Promise
                   @ 'Foreign.R.Type.Any
                   @ 'Foreign.R.Type.Any
                   @ a
                   @~ <'Foreign.R.Type.Promise>_N
                   Language.R.HExp.$fStorableHExp3
                     `cast`
                   (GHC.Classes.(%,%)
                      <Data.Singletons.SingI 'Foreign.R.Type.Any>_N
                      (Sym (Foreign.R.Constraints.D:R::∈[0]
                                <'['Foreign.R.Type.Lang, 'Foreign.R.Type.Expr,
                                   'Foreign.R.Type.Symbol]>_N)))_R
                   GHC.Classes.C:(%%)
                     `cast`
                   (Sub (Sym (Foreign.R.Constraints.D:R::∈[0]
                                  <'['Foreign.R.Type.Env, 'Foreign.R.Type.Nil]>_N)))
                   dt
                   dt1
                   dt2) -}
166956e2a32bbf4c4fd74a454b43ba27
  $fStorableHExp_$s$WSymbol ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
    -> Foreign.R.Internal.SEXP s b
    -> Foreign.R.Internal.SEXP s c
    -> Language.R.HExp.HExp s 'Foreign.R.Type.Symbol
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U><L,U>,
     Inline: INLINE,
     Unfolding: InlineRule (3, False, False)
                (\ @ s
                   @ (b :: Foreign.R.Type.SEXPTYPE)
                   @ (c :: Foreign.R.Type.SEXPTYPE)
                   (dt :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                   (dt1 :: Foreign.R.Internal.SEXP s b)
                   (dt2 :: Foreign.R.Internal.SEXP s c) ->
                 Language.R.HExp.Symbol
                   @ s
                   @ 'Foreign.R.Type.Symbol
                   @ 'Foreign.R.Type.Any
                   @ b
                   @ c
                   @~ <'Foreign.R.Type.Symbol>_N
                   GHC.Classes.C:(%%)
                     `cast`
                   (Sub (Sym (Foreign.R.Constraints.D:R::∈[0]
                                  <'['Foreign.R.Type.Char, 'Foreign.R.Type.Nil]>_N)))
                   dt
                   dt1
                   dt2) -}
166956e2a32bbf4c4fd74a454b43ba27
  $fStorableHExp_$s$WWeakRef ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
    -> Foreign.R.Internal.SEXP s b
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
    -> Language.R.HExp.HExp s 'Foreign.R.Type.WeakRef
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><L,U>,
     Inline: INLINE,
     Unfolding: InlineRule (4, False, False)
                (\ @ s
                   @ (b :: Foreign.R.Type.SEXPTYPE)
                   (dt :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                   (dt1 :: Foreign.R.Internal.SEXP s b)
                   (dt2 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                   (dt3 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any) ->
                 Language.R.HExp.WeakRef
                   @ s
                   @ 'Foreign.R.Type.WeakRef
                   @ 'Foreign.R.Type.Any
                   @ 'Foreign.R.Type.Any
                   @ 'Foreign.R.Type.Any
                   @ b
                   @~ <'Foreign.R.Type.WeakRef>_N
                   GHC.Classes.C:(%%)
                     `cast`
                   (Sub (Sym (Foreign.R.Constraints.D:R::∈[0]
                                  <'['Foreign.R.Type.Env, 'Foreign.R.Type.ExtPtr,
                                     'Foreign.R.Type.Nil]>_N)))
                   GHC.Classes.C:(%%)
                     `cast`
                   (Sub (Sym (Foreign.R.Constraints.D:R::∈[0]
                                  <'['Foreign.R.Type.Closure, 'Foreign.R.Type.Builtin,
                                     'Foreign.R.Type.Special, 'Foreign.R.Type.Nil]>_N)))
                   GHC.Classes.C:(%%)
                     `cast`
                   (Sub (Sym (Foreign.R.Constraints.D:R::∈[0]
                                  <'['Foreign.R.Type.WeakRef, 'Foreign.R.Type.Nil]>_N)))
                   dt
                   dt1
                   dt2
                   dt3) -}
3b4abd8ce8ce3150e989975228b4a789
  $fStorableHExp_$s$fStorableComplex ::
    Foreign.Storable.Storable (Data.Complex.Complex GHC.Types.Double)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Complex.Complex GHC.Types.Double)
                  Language.R.HExp.$fStorableHExp_$s$fStorableComplex_$csizeOf
                  Language.R.HExp.$fStorableHExp_$s$fStorableComplex_$calignment
                  (Data.Complex.$fStorableComplex_$cpeekElemOff
                     @ GHC.Types.Double
                     Foreign.Storable.$fStorableDouble)
                  (Data.Complex.$fStorableComplex_$cpokeElemOff
                     @ GHC.Types.Double
                     Foreign.Storable.$fStorableDouble)
                  (Data.Complex.$fStorableComplex_$cpeekByteOff
                     @ GHC.Types.Double
                     Foreign.Storable.$fStorableDouble)
                  (Data.Complex.$fStorableComplex_$cpokeByteOff
                     @ GHC.Types.Double
                     Foreign.Storable.$fStorableDouble)
                  (Data.Complex.$fStorableComplex_$cpeek
                     @ GHC.Types.Double
                     Foreign.Storable.$fStorableDouble)
                  (Data.Complex.$fStorableComplex_$cpoke
                     @ GHC.Types.Double
                     Foreign.Storable.$fStorableDouble) -}
7182caab70f09fa1b75a725935631e63
  $fStorableHExp_$s$fStorableComplex_$calignment ::
    Data.Complex.Complex GHC.Types.Double -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a1 :: Data.Complex.Complex GHC.Types.Double) ->
                 Foreign.Storable.$fStorableDouble_$calignment
                   (case a1 of wild { Data.Complex.:+ x ds -> x })) -}
3dc679937bb1c5d1879d8e573b0d8509
  $fStorableHExp_$s$fStorableComplex_$csizeOf ::
    Data.Complex.Complex GHC.Types.Double -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a1 :: Data.Complex.Complex GHC.Types.Double) ->
                 case Foreign.Storable.$fStorableDouble_$calignment
                        (case a1 of wild { Data.Complex.:+ x ds ->
                         x }) of wild1 { GHC.Types.I# y ->
                 GHC.Types.I# (GHC.Prim.*# 2# y) }) -}
018426711ac2de4133b3760ebf8cfef9
  $fStorableHExp_$s<$> ::
    (a -> b)
    -> (Foreign.R.Internal.SEXP0 -> a) -> Foreign.R.Internal.SEXP0 -> b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(S),1*C1(U)><L,1*C1(U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                (\ @ a @ b ->
                 GHC.Base.. @ a @ b @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)) -}
ffd23ee298a9c42780ceee1191bb7b28
  $fStorableHExp_$s<$>1 ::
    (a -> b) -> GHC.Types.IO a -> GHC.Types.IO b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*C1(U)><C(S(SL)),1*C1(U(U,U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                GHC.Base.$fFunctorIO_$cfmap -}
606196d4ed3f90a51763df992c05feac
  $fTestEqualitySEXPTYPEE ::
    Data.Type.Equality.TestEquality (Language.R.HExp.E s)
  DFunId
  {- Arity: 2, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Language.R.HExp.$fTestEqualitySEXPTYPEE_$ctestEquality
                  `cast`
                (forall (s :: <GHC.Types.*>_N).
                 Sym (Data.Type.Equality.N:TestEquality[0]
                          <Foreign.R.Type.SEXPTYPE>_N <Language.R.HExp.E s>_N)) -}
606196d4ed3f90a51763df992c05feac
  $fTestEqualitySEXPTYPEE_$ctestEquality ::
    Language.R.HExp.E s a
    -> Language.R.HExp.E s b
    -> GHC.Base.Maybe (a Data.Type.Equality.:~: b)
  {- Arity: 2, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   @ (b :: Foreign.R.Type.SEXPTYPE)
                   (w :: Language.R.HExp.E s a)
                   (w1 :: Language.R.HExp.E s b) ->
                 case w `cast`
                      (Trans
                           (Language.R.HExp.N:E[0] <s>_N <a>_N)
                           (Foreign.R.Internal.N:SEXP[0]
                                <s>_P <a>_P)) of ww { GHC.Ptr.Ptr ww1 ->
                 case w1
                        `cast`
                      (Trans
                           (Language.R.HExp.N:E[0] <s>_N <b>_N)
                           (Foreign.R.Internal.N:SEXP[0]
                                <s>_P <b>_P)) of ww2 { GHC.Ptr.Ptr ww3 ->
                 Language.R.HExp.$w$ctestEquality @ s @ a @ b ww1 ww3 } }) -}
166956e2a32bbf4c4fd74a454b43ba27
  $fTestEqualitySEXPTYPEHExp ::
    Data.Type.Equality.TestEquality (Language.R.HExp.HExp s)
  DFunId
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Language.R.HExp.$fEqHExp_$ctestEquality
                  `cast`
                (forall (s :: <GHC.Types.*>_N).
                 Sym (Data.Type.Equality.N:TestEquality[0]
                          <Foreign.R.Type.SEXPTYPE>_N <Language.R.HExp.HExp s>_N)) -}
e970716b2c235d8e90a6d4393c752ed1
  $s$fEqComplex ::
    GHC.Classes.Eq (Data.Complex.Complex GHC.Types.Double)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Complex.Complex GHC.Types.Double)
                  (Data.Complex.$fEqComplex_$c==
                     @ GHC.Types.Double
                     GHC.Classes.$fEqDouble)
                  Language.R.HExp.$s$fEqComplex_$s$fEqComplex_$c/= -}
48a3b7746e6c633b5cada38403a287ec
  $s$fEqComplex_$s$fEqComplex_$c/= ::
    Data.Complex.Complex GHC.Types.Double
    -> Data.Complex.Complex GHC.Types.Double -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)S),1*U(U(U),U(U))><S(S(S)S),1*U(U(U),U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a1 :: Data.Complex.Complex GHC.Types.Double)
                   (b :: Data.Complex.Complex GHC.Types.Double) ->
                 case Data.Complex.$fEqComplex_$c==
                        @ GHC.Types.Double
                        GHC.Classes.$fEqDouble
                        a1
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
1c9ed2197c6449cd2c6cd8d27499585b
  $tc'Builtin :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14659580035417249526##
                   4256906997104628005##
                   Language.R.HExp.$trModule
                   Language.R.HExp.$tc'Builtin1) -}
779f426343d612770e0f442c4bdb0b1a
  $tc'Builtin1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Builtin"#) -}
b6b6c7e3a11e5e8f59efbb376ccf8bfb
  $tc'Bytecode :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9485644176756449042##
                   8093698466044619099##
                   Language.R.HExp.$trModule
                   Language.R.HExp.$tc'Bytecode1) -}
a1c7615b25c0b63a8053484d4e87156e
  $tc'Bytecode1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Bytecode"#) -}
b285299e95381ce09258b1122a083419
  $tc'Char :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8910311001738589865##
                   10438989896225322423##
                   Language.R.HExp.$trModule
                   Language.R.HExp.$tc'Char1) -}
3b2aeceb275b465fdad01091d71341cf
  $tc'Char1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Char"#) -}
413a3382181199b35db09a51092ecc38
  $tc'Closure :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2593159503750560334##
                   5125918523091729989##
                   Language.R.HExp.$trModule
                   Language.R.HExp.$tc'Closure1) -}
2cefabe3ca0c89768fb89778734b9a8e
  $tc'Closure1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Closure"#) -}
193e236561a868a05060aaac603b95e5
  $tc'Complex :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1778805125416540003##
                   9018721681015904972##
                   Language.R.HExp.$trModule
                   Language.R.HExp.$tc'Complex1) -}
7debd0a794a31bb1a4dacf57e851279a
  $tc'Complex1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Complex"#) -}
94abadd6994755d56dbc351f725af277
  $tc'DotDotDot :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8947521489104169743##
                   2849444462138864155##
                   Language.R.HExp.$trModule
                   Language.R.HExp.$tc'DotDotDot1) -}
2952a2b2549fd0c15e579b66e05ad650
  $tc'DotDotDot1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'DotDotDot"#) -}
5c213502762a1f7293493c85f0a37e6c
  $tc'E :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10993832135575299501##
                   9106432393784062073##
                   Language.R.HExp.$trModule
                   Language.R.HExp.$tc'E1) -}
520c2fb3da5fc85e4ae9c9189ed05294
  $tc'E1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'E"#) -}
73f9fe1a480877f87b2cf0dd71f0477c
  $tc'Env :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8052109483240886938##
                   7543686643363691932##
                   Language.R.HExp.$trModule
                   Language.R.HExp.$tc'Env1) -}
452d304f2eb6a25be735eab17b09c696
  $tc'Env1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Env"#) -}
f74224c72db708974b9ccbb19d06a714
  $tc'Expr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16332318247528950791##
                   4580608600385828541##
                   Language.R.HExp.$trModule
                   Language.R.HExp.$tc'Expr1) -}
f8871c3e5de9e9593378a1e5a4349108
  $tc'Expr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Expr"#) -}
cea34bb76d964addec3cbb74ce1d7d7b
  $tc'ExtPtr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15281138702306319828##
                   2161658175254906204##
                   Language.R.HExp.$trModule
                   Language.R.HExp.$tc'ExtPtr1) -}
5c5b86014d8f5d854e9535f3fb091325
  $tc'ExtPtr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ExtPtr"#) -}
6708a98e8615c733e300a72f43158e2d
  $tc'Int :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16136238664747160710##
                   13363719465439386254##
                   Language.R.HExp.$trModule
                   Language.R.HExp.$tc'Int1) -}
61ec61f51246f62129b89d538a2a8fff
  $tc'Int1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Int"#) -}
42dd1e2e73ef2c9eabe8971bcb179c32
  $tc'Lang :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12173533723976827220##
                   8475526775668111263##
                   Language.R.HExp.$trModule
                   Language.R.HExp.$tc'Lang1) -}
c12877683bc838fe3abb2ac5f15fac3e
  $tc'Lang1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Lang"#) -}
2fe05e34af2adb5f3a12d49d4d041ded
  $tc'List :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12062166981866210778##
                   1586598651167347761##
                   Language.R.HExp.$trModule
                   Language.R.HExp.$tc'List1) -}
cd8647cca74f08c754de69e8cab4bcbb
  $tc'List1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'List"#) -}
6757103ed858489c28d32ac74be4f702
  $tc'Logical :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   575529411524531776##
                   7675819312849140640##
                   Language.R.HExp.$trModule
                   Language.R.HExp.$tc'Logical1) -}
c99f9e9791d6ee3922893be6225a9233
  $tc'Logical1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Logical"#) -}
3c9483795104e4301fb570335f0884f1
  $tc'Nil :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8626347206320177610##
                   11177383994705849195##
                   Language.R.HExp.$trModule
                   Language.R.HExp.$tc'Nil1) -}
49a28df01053e4a8759d14c19d077e62
  $tc'Nil1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Nil"#) -}
e20dde70a86cbf62439b448502420bf4
  $tc'Promise :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9102892543995009164##
                   1052933472805009039##
                   Language.R.HExp.$trModule
                   Language.R.HExp.$tc'Promise1) -}
926486881a18a0f6af61b01c41408595
  $tc'Promise1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Promise"#) -}
149e63f8db2181573e21928c0fbdd0fd
  $tc'Raw :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2000775248240079783##
                   6643216734079098310##
                   Language.R.HExp.$trModule
                   Language.R.HExp.$tc'Raw1) -}
c8fd813342c54dcee14fad58dc70516a
  $tc'Raw1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Raw"#) -}
737cf8e2b0e943f509dd320127ce5655
  $tc'Real :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3953390733422044145##
                   14206216614885985722##
                   Language.R.HExp.$trModule
                   Language.R.HExp.$tc'Real1) -}
94ddc01a9b00c2ed77347d993161ce5b
  $tc'Real1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Real"#) -}
ecee393600e301ee2e14c203b81dbc3b
  $tc'S1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'S4"#) -}
96ad0d0fd2a8770ae2fe7729d1cb5aa2
  $tc'S4 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6604123193015431714##
                   6470118857631614557##
                   Language.R.HExp.$trModule
                   Language.R.HExp.$tc'S1) -}
92841ba64ebf6e18858105c5b51fb186
  $tc'Special :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3867099086059267309##
                   12543004954119205743##
                   Language.R.HExp.$trModule
                   Language.R.HExp.$tc'Special1) -}
b6fac77ea1eb3a43d92e267d5eee1af9
  $tc'Special1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Special"#) -}
7f65a35062715d8ba855c456568a3a11
  $tc'String :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9468829171171390625##
                   17178095465098499820##
                   Language.R.HExp.$trModule
                   Language.R.HExp.$tc'String1) -}
e640953386e4569636c5bce0b17885c0
  $tc'String1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'String"#) -}
3c73c4dda4416b4216ee6505ca0a6e1c
  $tc'Symbol :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18316690874052982346##
                   1404100885494415021##
                   Language.R.HExp.$trModule
                   Language.R.HExp.$tc'Symbol1) -}
b9c9cd6a19fd9e2c03e78e443c67ef70
  $tc'Symbol1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Symbol"#) -}
42350787d7c234dc9f5563d68eacc644
  $tc'Vector :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13941075227167790055##
                   15595667281185635621##
                   Language.R.HExp.$trModule
                   Language.R.HExp.$tc'Vector1) -}
11642ffc89b49af963de1e71cac9444b
  $tc'Vector1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Vector"#) -}
ea16263271f767f209fe892598549e8c
  $tc'WeakRef :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12501596903214106715##
                   13141130243423925056##
                   Language.R.HExp.$trModule
                   Language.R.HExp.$tc'WeakRef1) -}
c9a975639e61206add4e1bd3aa45e2fc
  $tc'WeakRef1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'WeakRef"#) -}
748299cdb8211260b5616837a0641b31
  $tcE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10809543517519216607##
                   15071512109161010500##
                   Language.R.HExp.$trModule
                   Language.R.HExp.$tcE1) -}
8727a56ba0d2d3744280ed0794901eb2
  $tcE1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "E"#) -}
6f1d2e111793bcd5d8a028a4027f341f
  $tcHExp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2961239418402087741##
                   1367497773665104338##
                   Language.R.HExp.$trModule
                   Language.R.HExp.$tcHExp1) -}
6a56f32370a85fa9ef31344ae818c5a8
  $tcHExp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "HExp"#) -}
cf50e1cbc0daa1f57a918145650ac032
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.R.HExp.$trModule2
                   Language.R.HExp.$trModule1) -}
d3db3005e6461a9ab767bfad12b1b25f
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Language.R.HExp"#) -}
e774e38679bdfb1712d346cdb006ad4e
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs"#) -}
166956e2a32bbf4c4fd74a454b43ba27
  $w$cpeekByteOff ::
    GHC.Prim.Addr#
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Language.R.HExp.HExp s a #)
  {- Arity: 3, Strictness: <S,U><S,U><L,U>, Inline: [0] -}
b111cb0a29b5a4fcabf5a551ce17a48f
  $w$ctestEquality ::
    GHC.Prim.Addr#
    -> GHC.Prim.Addr# -> GHC.Base.Maybe (a Data.Type.Equality.:~: b)
  {- Arity: 2, Strictness: <S,U><S,U>, Inline: [0] -}
0f6f55afab25122b0bd74812103ab7a3
  (===) ::
    forall k (f :: k -> *) (a :: k) (b :: k).
    Data.Type.Equality.TestEquality f =>
    f a -> f b -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(C(S)),1*C1(C1(U))><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ k
                   @ (f :: k -> *)
                   @ (a :: k)
                   @ (b :: k)
                   ($dTestEquality :: Data.Type.Equality.TestEquality f)
                   (x :: f a)
                   (y :: f b) ->
                 case $dTestEquality
                        `cast`
                      (Data.Type.Equality.N:TestEquality[0] <k>_N <f>_N)
                        @ a
                        @ b
                        x
                        y of wild {
                   GHC.Base.Nothing -> GHC.Types.False
                   GHC.Base.Just ipv -> GHC.Types.True }) -}
606196d4ed3f90a51763df992c05feac
  type role E phantom phantom
  newtype E s (a :: Foreign.R.Type.SEXPTYPE)
    = E (Foreign.R.Internal.SEXP s a)
166956e2a32bbf4c4fd74a454b43ba27
  type role HExp phantom nominal
  data HExp a (b :: Foreign.R.Type.SEXPTYPE) where
    Nil :: HExp a 'Foreign.R.Type.Nil
    Symbol :: a1
              Foreign.R.Constraints.:∈ '['Foreign.R.Type.Char,
                                         'Foreign.R.Type.Nil] =>
              (Foreign.R.Internal.SEXP a a1) -> (Foreign.R.Internal.SEXP a b1)
              -> (Foreign.R.Internal.SEXP a c) -> HExp a 'Foreign.R.Type.Symbol
    List :: (Foreign.R.Type.IsPairList b1,
             c
             Foreign.R.Constraints.:∈ '['Foreign.R.Type.Symbol,
                                        'Foreign.R.Type.Nil]) =>
            (Foreign.R.Internal.SEXP a a1) -> (Foreign.R.Internal.SEXP a b1)
            -> (Foreign.R.Internal.SEXP a c) -> HExp a 'Foreign.R.Type.List
    Env :: (Foreign.R.Type.IsPairList a1,
            b1
            Foreign.R.Constraints.:∈ '['Foreign.R.Type.Env,
                                       'Foreign.R.Type.Nil],
            c
            Foreign.R.Constraints.:∈ '['Foreign.R.Type.Vector,
                                       'Foreign.R.Type.Nil]) =>
           (Foreign.R.Internal.SEXP a a1) -> (Foreign.R.Internal.SEXP a b1)
           -> (Foreign.R.Internal.SEXP a c) -> HExp a 'Foreign.R.Type.Env
    Closure :: Foreign.R.Type.IsPairList a1 =>
               (Foreign.R.Internal.SEXP a a1) -> (Foreign.R.Internal.SEXP a b1)
               -> (Foreign.R.Internal.SEXP a 'Foreign.R.Type.Env)
               -> HExp a 'Foreign.R.Type.Closure
    Promise :: (Foreign.R.Type.IsExpression b1,
                c
                Foreign.R.Constraints.:∈ '['Foreign.R.Type.Env,
                                           'Foreign.R.Type.Nil]) =>
               (Foreign.R.Internal.SEXP a a1) -> (Foreign.R.Internal.SEXP a b1)
               -> (Foreign.R.Internal.SEXP a c) -> HExp a 'Foreign.R.Type.Promise
    Lang :: (Foreign.R.Type.IsExpression a1,
             Foreign.R.Type.IsPairList b1) =>
            (Foreign.R.Internal.SEXP a a1) -> (Foreign.R.Internal.SEXP a b1)
            -> HExp a 'Foreign.R.Type.Lang
    Special :: {-# UNPACK #-}GHC.Int.Int32
               -> HExp a 'Foreign.R.Type.Special
    Builtin :: {-# UNPACK #-}GHC.Int.Int32
               -> HExp a 'Foreign.R.Type.Builtin
    Char :: {-# UNPACK #-}(Data.Vector.SEXP.Vector
                             a 'Foreign.R.Type.Char GHC.Word.Word8)
            -> HExp a 'Foreign.R.Type.Char
    Logical :: {-# UNPACK #-}(Data.Vector.SEXP.Vector
                                a 'Foreign.R.Type.Logical Foreign.R.Type.Logical)
               -> HExp a 'Foreign.R.Type.Logical
    Int :: {-# UNPACK #-}(Data.Vector.SEXP.Vector
                            a 'Foreign.R.Type.Int GHC.Int.Int32)
           -> HExp a 'Foreign.R.Type.Int
    Real :: {-# UNPACK #-}(Data.Vector.SEXP.Vector
                             a 'Foreign.R.Type.Real GHC.Types.Double)
            -> HExp a 'Foreign.R.Type.Real
    Complex :: {-# UNPACK #-}(Data.Vector.SEXP.Vector
                                a 'Foreign.R.Type.Complex (Data.Complex.Complex GHC.Types.Double))
               -> HExp a 'Foreign.R.Type.Complex
    String :: {-# UNPACK #-}(Data.Vector.SEXP.Vector
                               a
                               'Foreign.R.Type.String
                               (Foreign.R.Internal.SEXP a 'Foreign.R.Type.Char))
              -> HExp a 'Foreign.R.Type.String
    DotDotDot :: Foreign.R.Type.IsPairList a1 =>
                 (Foreign.R.Internal.SEXP a a1) -> HExp a 'Foreign.R.Type.List
    Vector :: {-# UNPACK #-}GHC.Int.Int32
              -> {-# UNPACK #-}(Data.Vector.SEXP.Vector
                                  a 'Foreign.R.Type.Vector (Foreign.R.Internal.SomeSEXP a))
              -> HExp a 'Foreign.R.Type.Vector
    Expr :: {-# UNPACK #-}GHC.Int.Int32
            -> {-# UNPACK #-}(Data.Vector.SEXP.Vector
                                a 'Foreign.R.Type.Expr (Foreign.R.Internal.SomeSEXP a))
            -> HExp a 'Foreign.R.Type.Expr
    Bytecode :: HExp a 'Foreign.R.Type.Bytecode
    ExtPtr :: (GHC.Ptr.Ptr ()) -> (Foreign.R.Internal.SEXP a b1)
              -> (Foreign.R.Internal.SEXP a 'Foreign.R.Type.Symbol)
              -> HExp a 'Foreign.R.Type.ExtPtr
    WeakRef :: (a1
                Foreign.R.Constraints.:∈ '['Foreign.R.Type.Env,
                                           'Foreign.R.Type.ExtPtr, 'Foreign.R.Type.Nil],
                c
                Foreign.R.Constraints.:∈ '['Foreign.R.Type.Closure,
                                           'Foreign.R.Type.Builtin, 'Foreign.R.Type.Special,
                                           'Foreign.R.Type.Nil],
                d
                Foreign.R.Constraints.:∈ '['Foreign.R.Type.WeakRef,
                                           'Foreign.R.Type.Nil]) =>
               (Foreign.R.Internal.SEXP a a1) -> (Foreign.R.Internal.SEXP a b1)
               -> (Foreign.R.Internal.SEXP a c) -> (Foreign.R.Internal.SEXP a d)
               -> HExp a 'Foreign.R.Type.WeakRef
    Raw :: {-# UNPACK #-}(Data.Vector.SEXP.Vector
                            a 'Foreign.R.Type.Raw GHC.Word.Word8)
           -> HExp a 'Foreign.R.Type.Raw
    S4 :: (Foreign.R.Internal.SEXP a a1) -> HExp a 'Foreign.R.Type.S4
    RecFlag: Recursive
0f590453cd31bf45bb9500c240cbec0a
  hexp :: Foreign.R.Internal.SEXP s a -> Language.R.HExp.HExp s a
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (x :: Foreign.R.Internal.SEXP s a) ->
                 let {
                   x1 :: GHC.Ptr.Ptr (Language.R.HExp.HExp s a)
                   = Foreign.R.Internal.unSEXP @ s @ a x
                 } in
                 let {
                   sptr :: Foreign.R.Internal.SEXP0
                   = Foreign.R.Internal.unsexp
                       @ s
                       @ a
                       x1 `cast` (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P))
                 } in
                 case Foreign.R.Internal.typeOf
                        @ s
                        @ a
                        x1
                          `cast`
                        (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)) of wild {
                   DEFAULT
                   -> case (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ GHC.Base.String
                              @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                              (Internal.Error.unimplemented
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                              (GHC.Base.augment
                                 @ GHC.Types.Char
                                 (\ @ b
                                    (c :: GHC.Types.Char -> b -> b)[OneShot]
                                    (n :: b)[OneShot] ->
                                  GHC.CString.unpackFoldrCString# @ b "peekHExp: "# c n)
                                 (Foreign.R.Type.$fShowSEXPTYPE_$cshow
                                    (Foreign.R.Internal.typeOf
                                       @ s
                                       @ a
                                       x1
                                         `cast`
                                       (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P))))))
                             `cast`
                           (Trans
                                (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                ((GHC.Prim.State#
                                    (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                 ->_R ((#,#)
                                         <'GHC.Types.VoidRep>_R
                                         <'GHC.Types.PtrRepLifted>_R
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                         <Language.R.HExp.HExp s a>_R)_R))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds { (#,#) ipv ipv1 ->
                      ipv1 }
                   Foreign.R.Type.Nil
                   -> case (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Nil))
                              @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                              (Unsafe.Coerce.unsafeCoerce
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Nil))
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                              (GHC.Base.returnIO
                                 @ (Language.R.HExp.HExp s 'Foreign.R.Type.Nil)
                                 (Language.R.HExp.$WNil @ s)))
                             `cast`
                           (Trans
                                (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                ((GHC.Prim.State#
                                    (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                 ->_R ((#,#)
                                         <'GHC.Types.VoidRep>_R
                                         <'GHC.Types.PtrRepLifted>_R
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                         <Language.R.HExp.HExp s a>_R)_R))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds { (#,#) ipv ipv1 ->
                      ipv1 }
                   Foreign.R.Type.Symbol
                   -> case (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Symbol))
                              @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                              (Unsafe.Coerce.unsafeCoerce
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Symbol))
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                              (GHC.Base.$fApplicativeIO_$sap
                                 @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                 @ (Language.R.HExp.HExp s 'Foreign.R.Type.Symbol)
                                 (GHC.Base.$fApplicativeIO_$sap
                                    @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                    @ (Foreign.R.Internal.SEXP s GHC.Prim.Any
                                       -> Language.R.HExp.HExp s 'Foreign.R.Type.Symbol)
                                    (Language.R.HExp.$fStorableHExp_$s<$>1
                                       @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                       @ (Foreign.R.Internal.SEXP s GHC.Prim.Any
                                          -> Foreign.R.Internal.SEXP s GHC.Prim.Any
                                          -> Language.R.HExp.HExp s 'Foreign.R.Type.Symbol)
                                       (Language.R.HExp.$fStorableHExp_$s$WSymbol
                                          @ s
                                          @ GHC.Prim.Any
                                          @ GHC.Prim.Any)
                                       (Language.R.HExp.$fStorableHExp_$s<$>1
                                          @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                          @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                          (Language.R.HExp.$fStorableHExp_$s<$>
                                             @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                             @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                             (Foreign.R.Internal.unsafeCoerce
                                                @ s
                                                @ GHC.Prim.Any
                                                @ 'Foreign.R.Type.Any)
                                             (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                                          (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                             @ Foreign.R.Internal.SEXPREC
                                             @ Foreign.R.Internal.SEXPREC
                                             sptr
                                             (GHC.Types.I# 32#))))
                                    (Language.R.HExp.$fStorableHExp_$s<$>1
                                       @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                       @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                       (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any)
                                       (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                          @ Foreign.R.Internal.SEXPREC
                                          @ Foreign.R.Internal.SEXPREC
                                          sptr
                                          (GHC.Types.I# 40#))))
                                 (Language.R.HExp.$fStorableHExp_$s<$>1
                                    @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                    @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                    (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any)
                                    (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                       @ Foreign.R.Internal.SEXPREC
                                       @ Foreign.R.Internal.SEXPREC
                                       sptr
                                       (GHC.Types.I# 48#)))))
                             `cast`
                           (Trans
                                (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                ((GHC.Prim.State#
                                    (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                 ->_R ((#,#)
                                         <'GHC.Types.VoidRep>_R
                                         <'GHC.Types.PtrRepLifted>_R
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                         <Language.R.HExp.HExp s a>_R)_R))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds { (#,#) ipv ipv1 ->
                      ipv1 }
                   Foreign.R.Type.List
                   -> case (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.List))
                              @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                              (Unsafe.Coerce.unsafeCoerce
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.List))
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                              (GHC.Base.$fApplicativeIO_$sap
                                 @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                 @ (Language.R.HExp.HExp s 'Foreign.R.Type.List)
                                 (GHC.Base.$fApplicativeIO_$sap
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                       -> Language.R.HExp.HExp s 'Foreign.R.Type.List)
                                    (Language.R.HExp.$fStorableHExp_$s<$>1
                                       @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                       @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                          -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                          -> Language.R.HExp.HExp s 'Foreign.R.Type.List)
                                       (Language.R.HExp.$fStorableHExp_$s$WList @ s @ GHC.Prim.Any)
                                       (Language.R.HExp.$fStorableHExp_$s<$>1
                                          @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                          @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                          (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any)
                                          (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                             @ Foreign.R.Internal.SEXPREC
                                             @ Foreign.R.Internal.SEXPREC
                                             sptr
                                             (GHC.Types.I# 32#))))
                                    (Language.R.HExp.$fStorableHExp_$s<$>1
                                       @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                       @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                       (Language.R.HExp.$fStorableHExp_$s<$>
                                          @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                          @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                          (Foreign.R.Internal.unsafeCoerce
                                             @ s
                                             @ GHC.Prim.Any
                                             @ 'Foreign.R.Type.Any)
                                          (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                                       (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                          @ Foreign.R.Internal.SEXPREC
                                          @ Foreign.R.Internal.SEXPREC
                                          sptr
                                          (GHC.Types.I# 40#))))
                                 (Language.R.HExp.$fStorableHExp_$s<$>1
                                    @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                    (Language.R.HExp.$fStorableHExp_$s<$>
                                       @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                       @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                       (Foreign.R.Internal.unsafeCoerce
                                          @ s
                                          @ GHC.Prim.Any
                                          @ 'Foreign.R.Type.Any)
                                       (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                                    (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                       @ Foreign.R.Internal.SEXPREC
                                       @ Foreign.R.Internal.SEXPREC
                                       sptr
                                       (GHC.Types.I# 48#)))))
                             `cast`
                           (Trans
                                (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                ((GHC.Prim.State#
                                    (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                 ->_R ((#,#)
                                         <'GHC.Types.VoidRep>_R
                                         <'GHC.Types.PtrRepLifted>_R
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                         <Language.R.HExp.HExp s a>_R)_R))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds { (#,#) ipv ipv1 ->
                      ipv1 }
                   Foreign.R.Type.Closure
                   -> case (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Closure))
                              @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                              (Unsafe.Coerce.unsafeCoerce
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Closure))
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                              (GHC.Base.$fApplicativeIO_$sap
                                 @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env)
                                 @ (Language.R.HExp.HExp s 'Foreign.R.Type.Closure)
                                 (GHC.Base.$fApplicativeIO_$sap
                                    @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
                                       -> Language.R.HExp.HExp s 'Foreign.R.Type.Closure)
                                    (Language.R.HExp.$fStorableHExp_$s<$>1
                                       @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                       @ (Foreign.R.Internal.SEXP s GHC.Prim.Any
                                          -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
                                          -> Language.R.HExp.HExp s 'Foreign.R.Type.Closure)
                                       (Language.R.HExp.$fStorableHExp_$s$WClosure
                                          @ s
                                          @ GHC.Prim.Any)
                                       (Language.R.HExp.$fStorableHExp_$s<$>1
                                          @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                          @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                          (Language.R.HExp.$fStorableHExp_$s<$>
                                             @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                             @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                             (Foreign.R.Internal.unsafeCoerce
                                                @ s
                                                @ GHC.Prim.Any
                                                @ 'Foreign.R.Type.Any)
                                             (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                                          (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                             @ Foreign.R.Internal.SEXPREC
                                             @ Foreign.R.Internal.SEXPREC
                                             sptr
                                             (GHC.Types.I# 32#))))
                                    (Language.R.HExp.$fStorableHExp_$s<$>1
                                       @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                       @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                       (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any)
                                       (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                          @ Foreign.R.Internal.SEXPREC
                                          @ Foreign.R.Internal.SEXPREC
                                          sptr
                                          (GHC.Types.I# 40#))))
                                 (Language.R.HExp.$fStorableHExp_$s<$>1
                                    @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env)
                                    (Foreign.R.Internal.sexp @ s @ 'Foreign.R.Type.Env)
                                    (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                       @ Foreign.R.Internal.SEXPREC
                                       @ Foreign.R.Internal.SEXPREC
                                       sptr
                                       (GHC.Types.I# 48#)))))
                             `cast`
                           (Trans
                                (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                ((GHC.Prim.State#
                                    (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                 ->_R ((#,#)
                                         <'GHC.Types.VoidRep>_R
                                         <'GHC.Types.PtrRepLifted>_R
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                         <Language.R.HExp.HExp s a>_R)_R))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds { (#,#) ipv ipv1 ->
                      ipv1 }
                   Foreign.R.Type.Env
                   -> case (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Env))
                              @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                              (Unsafe.Coerce.unsafeCoerce
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Env))
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                              (GHC.Base.$fApplicativeIO_$sap
                                 @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                 @ (Language.R.HExp.HExp s 'Foreign.R.Type.Env)
                                 (GHC.Base.$fApplicativeIO_$sap
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                       -> Language.R.HExp.HExp s 'Foreign.R.Type.Env)
                                    (Language.R.HExp.$fStorableHExp_$s<$>1
                                       @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                       @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                          -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                          -> Language.R.HExp.HExp s 'Foreign.R.Type.Env)
                                       (Language.R.HExp.$fStorableHExp_$s$WEnv @ s)
                                       (Language.R.HExp.$fStorableHExp_$s<$>1
                                          @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                          @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                          (Language.R.HExp.$fStorableHExp_$s<$>
                                             @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                             @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                             (Foreign.R.Internal.unsafeCoerce
                                                @ s
                                                @ GHC.Prim.Any
                                                @ 'Foreign.R.Type.Any)
                                             (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                                          (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                             @ Foreign.R.Internal.SEXPREC
                                             @ Foreign.R.Internal.SEXPREC
                                             sptr
                                             (GHC.Types.I# 32#))))
                                    (Language.R.HExp.$fStorableHExp_$s<$>1
                                       @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                       @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                       (Language.R.HExp.$fStorableHExp_$s<$>
                                          @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                          @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                          (Foreign.R.Internal.unsafeCoerce
                                             @ s
                                             @ GHC.Prim.Any
                                             @ 'Foreign.R.Type.Any)
                                          (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                                       (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                          @ Foreign.R.Internal.SEXPREC
                                          @ Foreign.R.Internal.SEXPREC
                                          sptr
                                          (GHC.Types.I# 40#))))
                                 (Language.R.HExp.$fStorableHExp_$s<$>1
                                    @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                    (Language.R.HExp.$fStorableHExp_$s<$>
                                       @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                       @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                       (Foreign.R.Internal.unsafeCoerce
                                          @ s
                                          @ GHC.Prim.Any
                                          @ 'Foreign.R.Type.Any)
                                       (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                                    (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                       @ Foreign.R.Internal.SEXPREC
                                       @ Foreign.R.Internal.SEXPREC
                                       sptr
                                       (GHC.Types.I# 48#)))))
                             `cast`
                           (Trans
                                (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                ((GHC.Prim.State#
                                    (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                 ->_R ((#,#)
                                         <'GHC.Types.VoidRep>_R
                                         <'GHC.Types.PtrRepLifted>_R
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                         <Language.R.HExp.HExp s a>_R)_R))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds { (#,#) ipv ipv1 ->
                      ipv1 }
                   Foreign.R.Type.Promise
                   -> case (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Promise))
                              @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                              (Unsafe.Coerce.unsafeCoerce
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Promise))
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                              (GHC.Base.$fApplicativeIO_$sap
                                 @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                 @ (Language.R.HExp.HExp s 'Foreign.R.Type.Promise)
                                 (GHC.Base.$fApplicativeIO_$sap
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                       -> Language.R.HExp.HExp s 'Foreign.R.Type.Promise)
                                    (Language.R.HExp.$fStorableHExp_$s<$>1
                                       @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                       @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                          -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                          -> Language.R.HExp.HExp s 'Foreign.R.Type.Promise)
                                       (Language.R.HExp.$fStorableHExp_$s$WPromise
                                          @ s
                                          @ 'Foreign.R.Type.Any)
                                       (Language.R.HExp.$fStorableHExp_$s<$>1
                                          @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                          @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                          (Language.R.HExp.$fStorableHExp_$s<$>
                                             @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                             @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                             (Foreign.R.Internal.unsafeCoerce
                                                @ s
                                                @ GHC.Prim.Any
                                                @ 'Foreign.R.Type.Any)
                                             (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                                          (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                             @ Foreign.R.Internal.SEXPREC
                                             @ Foreign.R.Internal.SEXPREC
                                             sptr
                                             (GHC.Types.I# 32#))))
                                    (Language.R.HExp.$fStorableHExp_$s<$>1
                                       @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                       @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                       (Language.R.HExp.$fStorableHExp_$s<$>
                                          @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                          @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                          (Foreign.R.Internal.unsafeCoerce
                                             @ s
                                             @ GHC.Prim.Any
                                             @ 'Foreign.R.Type.Any)
                                          (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                                       (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                          @ Foreign.R.Internal.SEXPREC
                                          @ Foreign.R.Internal.SEXPREC
                                          sptr
                                          (GHC.Types.I# 40#))))
                                 (Language.R.HExp.$fStorableHExp_$s<$>1
                                    @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                    (Language.R.HExp.$fStorableHExp_$s<$>
                                       @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                       @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                       (Foreign.R.Internal.unsafeCoerce
                                          @ s
                                          @ GHC.Prim.Any
                                          @ 'Foreign.R.Type.Any)
                                       (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                                    (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                       @ Foreign.R.Internal.SEXPREC
                                       @ Foreign.R.Internal.SEXPREC
                                       sptr
                                       (GHC.Types.I# 48#)))))
                             `cast`
                           (Trans
                                (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                ((GHC.Prim.State#
                                    (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                 ->_R ((#,#)
                                         <'GHC.Types.VoidRep>_R
                                         <'GHC.Types.PtrRepLifted>_R
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                         <Language.R.HExp.HExp s a>_R)_R))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds { (#,#) ipv ipv1 ->
                      ipv1 }
                   Foreign.R.Type.Lang
                   -> case (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Lang))
                              @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                              (Unsafe.Coerce.unsafeCoerce
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Lang))
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                              (GHC.Base.$fApplicativeIO_$sap
                                 @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                 @ (Language.R.HExp.HExp s 'Foreign.R.Type.Lang)
                                 (Language.R.HExp.$fStorableHExp_$s<$>1
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                       -> Language.R.HExp.HExp s 'Foreign.R.Type.Lang)
                                    (Language.R.HExp.$fStorableHExp_$s$WLang @ s)
                                    (Language.R.HExp.$fStorableHExp_$s<$>1
                                       @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                       @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                       (Language.R.HExp.$fStorableHExp_$s<$>
                                          @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                          @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                          (Foreign.R.Internal.unsafeCoerce
                                             @ s
                                             @ GHC.Prim.Any
                                             @ 'Foreign.R.Type.Any)
                                          (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                                       (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                          @ Foreign.R.Internal.SEXPREC
                                          @ Foreign.R.Internal.SEXPREC
                                          sptr
                                          (GHC.Types.I# 32#))))
                                 (Language.R.HExp.$fStorableHExp_$s<$>1
                                    @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                    (Language.R.HExp.$fStorableHExp_$s<$>
                                       @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                       @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                       (Foreign.R.Internal.unsafeCoerce
                                          @ s
                                          @ GHC.Prim.Any
                                          @ 'Foreign.R.Type.Any)
                                       (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                                    (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                       @ Foreign.R.Internal.SEXPREC
                                       @ Foreign.R.Internal.SEXPREC
                                       sptr
                                       (GHC.Types.I# 40#)))))
                             `cast`
                           (Trans
                                (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                ((GHC.Prim.State#
                                    (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                 ->_R ((#,#)
                                         <'GHC.Types.VoidRep>_R
                                         <'GHC.Types.PtrRepLifted>_R
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                         <Language.R.HExp.HExp s a>_R)_R))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds { (#,#) ipv ipv1 ->
                      ipv1 }
                   Foreign.R.Type.Special
                   -> case (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Special))
                              @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                              (Unsafe.Coerce.unsafeCoerce
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Special))
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                              (Language.R.HExp.$fStorableHExp_$s<$>1
                                 @ GHC.Int.Int32
                                 @ (Language.R.HExp.HExp s 'Foreign.R.Type.Special)
                                 (Language.R.HExp.$WSpecial @ s)
                                 (Language.R.HExp.$fStorableHExp_$s<$>1
                                    @ Foreign.C.Types.CInt
                                    @ GHC.Int.Int32
                                    (GHC.Base.id @ GHC.Int.Int32)
                                      `cast`
                                    (Sym (Foreign.C.Types.N:CInt[0]) ->_R <GHC.Int.Int32>_R)
                                    (Foreign.C.Types.$fStorableCInt_$cpeekByteOff
                                       @ Foreign.R.Internal.SEXPREC
                                       sptr
                                       (GHC.Types.I# 32#)))))
                             `cast`
                           (Trans
                                (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                ((GHC.Prim.State#
                                    (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                 ->_R ((#,#)
                                         <'GHC.Types.VoidRep>_R
                                         <'GHC.Types.PtrRepLifted>_R
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                         <Language.R.HExp.HExp s a>_R)_R))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds { (#,#) ipv ipv1 ->
                      ipv1 }
                   Foreign.R.Type.Builtin
                   -> case (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Builtin))
                              @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                              (Unsafe.Coerce.unsafeCoerce
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Builtin))
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                              (Language.R.HExp.$fStorableHExp_$s<$>1
                                 @ GHC.Int.Int32
                                 @ (Language.R.HExp.HExp s 'Foreign.R.Type.Builtin)
                                 (Language.R.HExp.$WBuiltin @ s)
                                 (Language.R.HExp.$fStorableHExp_$s<$>1
                                    @ Foreign.C.Types.CInt
                                    @ GHC.Int.Int32
                                    (GHC.Base.id @ GHC.Int.Int32)
                                      `cast`
                                    (Sym (Foreign.C.Types.N:CInt[0]) ->_R <GHC.Int.Int32>_R)
                                    (Foreign.C.Types.$fStorableCInt_$cpeekByteOff
                                       @ Foreign.R.Internal.SEXPREC
                                       sptr
                                       (GHC.Types.I# 32#)))))
                             `cast`
                           (Trans
                                (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                ((GHC.Prim.State#
                                    (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                 ->_R ((#,#)
                                         <'GHC.Types.VoidRep>_R
                                         <'GHC.Types.PtrRepLifted>_R
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                         <Language.R.HExp.HExp s a>_R)_R))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds { (#,#) ipv ipv1 ->
                      ipv1 }
                   Foreign.R.Type.Char
                   -> case (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.Char)
                              @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                              (Unsafe.Coerce.unsafeCoerce
                                 @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.Char)
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                              (case Data.Vector.SEXP.unsafeFromSEXP
                                      @ GHC.Prim.Any
                                      @ 'Foreign.R.Type.Char
                                      @ GHC.Word.Word8
                                      (Foreign.Storable.$fStorableWord8,
                                       (Foreign.R.Type.$fSingISEXPTYPEChar_$s$WSChar
                                          `cast`
                                        (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Char>_N),
                                        GHC.Classes.C:(%%)),
                                       Foreign.R.Type.$fSingISEXPTYPEChar_$s$WSChar
                                         `cast`
                                       (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Char>_N),
                                       (Data.Type.Equality.$f~kab_$cp1~
                                          @ *
                                          @ GHC.Word.Word8
                                          @ GHC.Word.Word8
                                          (GHC.Types.Eq#
                                             @ *
                                             @ *
                                             @ GHC.Word.Word8
                                             @ GHC.Word.Word8
                                             @~ <GHC.Word.Word8>_N))
                                         `cast`
                                       (Sym (Data.Type.Equality.N:~[0]
                                                 <*>_N) <GHC.Word.Word8>_N <GHC.Word.Word8>_N))
                                        `cast`
                                      (GHC.Classes.(%,,,%)
                                         <Foreign.Storable.Storable GHC.Word.Word8>_N
                                         (GHC.Classes.(%,%)
                                            <Data.Singletons.SingI 'Foreign.R.Type.Char>_N
                                            (Sym (Foreign.R.Constraints.D:R::∈[1]
                                                      <'['Foreign.R.Type.Logical,
                                                         'Foreign.R.Type.Int, 'Foreign.R.Type.Real,
                                                         'Foreign.R.Type.Complex,
                                                         'Foreign.R.Type.String,
                                                         'Foreign.R.Type.Vector,
                                                         'Foreign.R.Type.Expr,
                                                         'Foreign.R.Type.WeakRef,
                                                         'Foreign.R.Type.Raw]>_N
                                                      <'Foreign.R.Type.Char>_N)))_N
                                         <Data.Singletons.SingI 'Foreign.R.Type.Char>_N
                                         ((Data.Type.Equality.~)
                                            <*>_N
                                            (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[0]
                                                      <GHC.Prim.Any>_N))
                                            <GHC.Word.Word8>_N)_N)_R
                                      (Unsafe.Coerce.unsafeCoerce
                                         @ (Foreign.R.Internal.SEXP s a)
                                         @ (Foreign.R.Internal.SEXP
                                              GHC.Prim.Any 'Foreign.R.Type.Char)
                                         x1
                                           `cast`
                                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                                   <s>_P
                                                   <a>_P))) of dt { Data.Vector.SEXP.Vector dt1 dt2 dt3 dt4 ->
                               Language.R.HExp.Char
                                 @ GHC.Prim.Any
                                 @ 'Foreign.R.Type.Char
                                 @~ <'Foreign.R.Type.Char>_N
                                 dt1
                                 dt2
                                 dt3
                                 dt4 }))
                             `cast`
                           (Trans
                                (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                ((GHC.Prim.State#
                                    (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                 ->_R ((#,#)
                                         <'GHC.Types.VoidRep>_R
                                         <'GHC.Types.PtrRepLifted>_R
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                         <Language.R.HExp.HExp s a>_R)_R))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds { (#,#) ipv ipv1 ->
                      ipv1 }
                   Foreign.R.Type.Logical
                   -> case (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.Logical)
                              @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                              (Unsafe.Coerce.unsafeCoerce
                                 @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.Logical)
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                              (case Data.Vector.SEXP.unsafeFromSEXP
                                      @ GHC.Prim.Any
                                      @ 'Foreign.R.Type.Logical
                                      @ Foreign.R.Type.Logical
                                      (Foreign.R.Type.$fStorableLogical,
                                       (Foreign.R.Type.$fSingISEXPTYPELogical_$s$WSLogical
                                          `cast`
                                        (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Logical>_N),
                                        GHC.Classes.C:(%%)),
                                       Foreign.R.Type.$fSingISEXPTYPELogical_$s$WSLogical
                                         `cast`
                                       (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Logical>_N),
                                       (Data.Type.Equality.$f~kab_$cp1~
                                          @ *
                                          @ Foreign.R.Type.Logical
                                          @ Foreign.R.Type.Logical
                                          (GHC.Types.Eq#
                                             @ *
                                             @ *
                                             @ Foreign.R.Type.Logical
                                             @ Foreign.R.Type.Logical
                                             @~ <Foreign.R.Type.Logical>_N))
                                         `cast`
                                       (Sym (Data.Type.Equality.N:~[0]
                                                 <*>_N) <Foreign.R.Type.Logical>_N <Foreign.R.Type.Logical>_N))
                                        `cast`
                                      (GHC.Classes.(%,,,%)
                                         <Foreign.Storable.Storable Foreign.R.Type.Logical>_N
                                         (GHC.Classes.(%,%)
                                            <Data.Singletons.SingI 'Foreign.R.Type.Logical>_N
                                            (Trans
                                                 (Sym (Foreign.R.Constraints.D:R::∈[1]
                                                           <'['Foreign.R.Type.Int,
                                                              'Foreign.R.Type.Real,
                                                              'Foreign.R.Type.Complex,
                                                              'Foreign.R.Type.String,
                                                              'Foreign.R.Type.Vector,
                                                              'Foreign.R.Type.Expr,
                                                              'Foreign.R.Type.WeakRef,
                                                              'Foreign.R.Type.Raw]>_N
                                                           <'Foreign.R.Type.Logical>_N))
                                                 (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                           <'['Foreign.R.Type.Logical,
                                                              'Foreign.R.Type.Int,
                                                              'Foreign.R.Type.Real,
                                                              'Foreign.R.Type.Complex,
                                                              'Foreign.R.Type.String,
                                                              'Foreign.R.Type.Vector,
                                                              'Foreign.R.Type.Expr,
                                                              'Foreign.R.Type.WeakRef,
                                                              'Foreign.R.Type.Raw]>_N
                                                           <'Foreign.R.Type.Char>_N
                                                           <'Foreign.R.Type.Logical>_N))))_N
                                         <Data.Singletons.SingI 'Foreign.R.Type.Logical>_N
                                         ((Data.Type.Equality.~)
                                            <*>_N
                                            (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[1]
                                                      <GHC.Prim.Any>_N))
                                            <Foreign.R.Type.Logical>_N)_N)_R
                                      (Unsafe.Coerce.unsafeCoerce
                                         @ (Foreign.R.Internal.SEXP s a)
                                         @ (Foreign.R.Internal.SEXP
                                              GHC.Prim.Any 'Foreign.R.Type.Logical)
                                         x1
                                           `cast`
                                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                                   <s>_P
                                                   <a>_P))) of dt { Data.Vector.SEXP.Vector dt1 dt2 dt3 dt4 ->
                               Language.R.HExp.Logical
                                 @ GHC.Prim.Any
                                 @ 'Foreign.R.Type.Logical
                                 @~ <'Foreign.R.Type.Logical>_N
                                 dt1
                                 dt2
                                 dt3
                                 dt4 }))
                             `cast`
                           (Trans
                                (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                ((GHC.Prim.State#
                                    (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                 ->_R ((#,#)
                                         <'GHC.Types.VoidRep>_R
                                         <'GHC.Types.PtrRepLifted>_R
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                         <Language.R.HExp.HExp s a>_R)_R))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds { (#,#) ipv ipv1 ->
                      ipv1 }
                   Foreign.R.Type.Int
                   -> case (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.Int)
                              @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                              (Unsafe.Coerce.unsafeCoerce
                                 @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.Int)
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                              (case Data.Vector.SEXP.unsafeFromSEXP
                                      @ GHC.Prim.Any
                                      @ 'Foreign.R.Type.Int
                                      @ GHC.Int.Int32
                                      (Foreign.Storable.$fStorableInt32,
                                       (Foreign.R.Type.$fSingISEXPTYPEInt_$s$WSInt
                                          `cast`
                                        (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Int>_N),
                                        GHC.Classes.C:(%%)),
                                       Foreign.R.Type.$fSingISEXPTYPEInt_$s$WSInt
                                         `cast`
                                       (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Int>_N),
                                       (Data.Type.Equality.$f~kab_$cp1~
                                          @ *
                                          @ GHC.Int.Int32
                                          @ GHC.Int.Int32
                                          (GHC.Types.Eq#
                                             @ *
                                             @ *
                                             @ GHC.Int.Int32
                                             @ GHC.Int.Int32
                                             @~ <GHC.Int.Int32>_N))
                                         `cast`
                                       (Sym (Data.Type.Equality.N:~[0]
                                                 <*>_N) <GHC.Int.Int32>_N <GHC.Int.Int32>_N))
                                        `cast`
                                      (GHC.Classes.(%,,,%)
                                         <Foreign.Storable.Storable GHC.Int.Int32>_N
                                         (GHC.Classes.(%,%)
                                            <Data.Singletons.SingI 'Foreign.R.Type.Int>_N
                                            (Trans
                                                 (Sym (Foreign.R.Constraints.D:R::∈[1]
                                                           <'['Foreign.R.Type.Real,
                                                              'Foreign.R.Type.Complex,
                                                              'Foreign.R.Type.String,
                                                              'Foreign.R.Type.Vector,
                                                              'Foreign.R.Type.Expr,
                                                              'Foreign.R.Type.WeakRef,
                                                              'Foreign.R.Type.Raw]>_N
                                                           <'Foreign.R.Type.Int>_N))
                                                 (Trans
                                                      (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                <'['Foreign.R.Type.Int,
                                                                   'Foreign.R.Type.Real,
                                                                   'Foreign.R.Type.Complex,
                                                                   'Foreign.R.Type.String,
                                                                   'Foreign.R.Type.Vector,
                                                                   'Foreign.R.Type.Expr,
                                                                   'Foreign.R.Type.WeakRef,
                                                                   'Foreign.R.Type.Raw]>_N
                                                                <'Foreign.R.Type.Logical>_N
                                                                <'Foreign.R.Type.Int>_N))
                                                      (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                <'['Foreign.R.Type.Logical,
                                                                   'Foreign.R.Type.Int,
                                                                   'Foreign.R.Type.Real,
                                                                   'Foreign.R.Type.Complex,
                                                                   'Foreign.R.Type.String,
                                                                   'Foreign.R.Type.Vector,
                                                                   'Foreign.R.Type.Expr,
                                                                   'Foreign.R.Type.WeakRef,
                                                                   'Foreign.R.Type.Raw]>_N
                                                                <'Foreign.R.Type.Char>_N
                                                                <'Foreign.R.Type.Int>_N)))))_N
                                         <Data.Singletons.SingI 'Foreign.R.Type.Int>_N
                                         ((Data.Type.Equality.~)
                                            <*>_N
                                            (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[2]
                                                      <GHC.Prim.Any>_N))
                                            <GHC.Int.Int32>_N)_N)_R
                                      (Unsafe.Coerce.unsafeCoerce
                                         @ (Foreign.R.Internal.SEXP s a)
                                         @ (Foreign.R.Internal.SEXP
                                              GHC.Prim.Any 'Foreign.R.Type.Int)
                                         x1
                                           `cast`
                                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                                   <s>_P
                                                   <a>_P))) of dt { Data.Vector.SEXP.Vector dt1 dt2 dt3 dt4 ->
                               Language.R.HExp.Int
                                 @ GHC.Prim.Any
                                 @ 'Foreign.R.Type.Int
                                 @~ <'Foreign.R.Type.Int>_N
                                 dt1
                                 dt2
                                 dt3
                                 dt4 }))
                             `cast`
                           (Trans
                                (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                ((GHC.Prim.State#
                                    (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                 ->_R ((#,#)
                                         <'GHC.Types.VoidRep>_R
                                         <'GHC.Types.PtrRepLifted>_R
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                         <Language.R.HExp.HExp s a>_R)_R))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds { (#,#) ipv ipv1 ->
                      ipv1 }
                   Foreign.R.Type.Real
                   -> case (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.Real)
                              @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                              (Unsafe.Coerce.unsafeCoerce
                                 @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.Real)
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                              (case Data.Vector.SEXP.unsafeFromSEXP
                                      @ GHC.Prim.Any
                                      @ 'Foreign.R.Type.Real
                                      @ GHC.Types.Double
                                      (Foreign.Storable.$fStorableDouble,
                                       (Foreign.R.Type.$fSingISEXPTYPEReal_$s$WSReal
                                          `cast`
                                        (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Real>_N),
                                        GHC.Classes.C:(%%)),
                                       Foreign.R.Type.$fSingISEXPTYPEReal_$s$WSReal
                                         `cast`
                                       (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Real>_N),
                                       (Data.Type.Equality.$f~kab_$cp1~
                                          @ *
                                          @ GHC.Types.Double
                                          @ GHC.Types.Double
                                          (GHC.Types.Eq#
                                             @ *
                                             @ *
                                             @ GHC.Types.Double
                                             @ GHC.Types.Double
                                             @~ <GHC.Types.Double>_N))
                                         `cast`
                                       (Sym (Data.Type.Equality.N:~[0]
                                                 <*>_N) <GHC.Types.Double>_N <GHC.Types.Double>_N))
                                        `cast`
                                      (GHC.Classes.(%,,,%)
                                         <Foreign.Storable.Storable GHC.Types.Double>_N
                                         (GHC.Classes.(%,%)
                                            <Data.Singletons.SingI 'Foreign.R.Type.Real>_N
                                            (Trans
                                                 (Sym (Foreign.R.Constraints.D:R::∈[1]
                                                           <'['Foreign.R.Type.Complex,
                                                              'Foreign.R.Type.String,
                                                              'Foreign.R.Type.Vector,
                                                              'Foreign.R.Type.Expr,
                                                              'Foreign.R.Type.WeakRef,
                                                              'Foreign.R.Type.Raw]>_N
                                                           <'Foreign.R.Type.Real>_N))
                                                 (Trans
                                                      (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                <'['Foreign.R.Type.Real,
                                                                   'Foreign.R.Type.Complex,
                                                                   'Foreign.R.Type.String,
                                                                   'Foreign.R.Type.Vector,
                                                                   'Foreign.R.Type.Expr,
                                                                   'Foreign.R.Type.WeakRef,
                                                                   'Foreign.R.Type.Raw]>_N
                                                                <'Foreign.R.Type.Int>_N
                                                                <'Foreign.R.Type.Real>_N))
                                                      (Trans
                                                           (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                     <'['Foreign.R.Type.Int,
                                                                        'Foreign.R.Type.Real,
                                                                        'Foreign.R.Type.Complex,
                                                                        'Foreign.R.Type.String,
                                                                        'Foreign.R.Type.Vector,
                                                                        'Foreign.R.Type.Expr,
                                                                        'Foreign.R.Type.WeakRef,
                                                                        'Foreign.R.Type.Raw]>_N
                                                                     <'Foreign.R.Type.Logical>_N
                                                                     <'Foreign.R.Type.Real>_N))
                                                           (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                     <'['Foreign.R.Type.Logical,
                                                                        'Foreign.R.Type.Int,
                                                                        'Foreign.R.Type.Real,
                                                                        'Foreign.R.Type.Complex,
                                                                        'Foreign.R.Type.String,
                                                                        'Foreign.R.Type.Vector,
                                                                        'Foreign.R.Type.Expr,
                                                                        'Foreign.R.Type.WeakRef,
                                                                        'Foreign.R.Type.Raw]>_N
                                                                     <'Foreign.R.Type.Char>_N
                                                                     <'Foreign.R.Type.Real>_N))))))_N
                                         <Data.Singletons.SingI 'Foreign.R.Type.Real>_N
                                         ((Data.Type.Equality.~)
                                            <*>_N
                                            (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[3]
                                                      <GHC.Prim.Any>_N))
                                            <GHC.Types.Double>_N)_N)_R
                                      (Unsafe.Coerce.unsafeCoerce
                                         @ (Foreign.R.Internal.SEXP s a)
                                         @ (Foreign.R.Internal.SEXP
                                              GHC.Prim.Any 'Foreign.R.Type.Real)
                                         x1
                                           `cast`
                                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                                   <s>_P
                                                   <a>_P))) of dt { Data.Vector.SEXP.Vector dt1 dt2 dt3 dt4 ->
                               Language.R.HExp.Real
                                 @ GHC.Prim.Any
                                 @ 'Foreign.R.Type.Real
                                 @~ <'Foreign.R.Type.Real>_N
                                 dt1
                                 dt2
                                 dt3
                                 dt4 }))
                             `cast`
                           (Trans
                                (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                ((GHC.Prim.State#
                                    (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                 ->_R ((#,#)
                                         <'GHC.Types.VoidRep>_R
                                         <'GHC.Types.PtrRepLifted>_R
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                         <Language.R.HExp.HExp s a>_R)_R))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds { (#,#) ipv ipv1 ->
                      ipv1 }
                   Foreign.R.Type.Complex
                   -> case (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.Complex)
                              @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                              (Unsafe.Coerce.unsafeCoerce
                                 @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.Complex)
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                              (case Data.Vector.SEXP.unsafeFromSEXP
                                      @ GHC.Prim.Any
                                      @ 'Foreign.R.Type.Complex
                                      @ (Data.Complex.Complex GHC.Types.Double)
                                      (Language.R.HExp.$fStorableHExp_$s$fStorableComplex,
                                       (Foreign.R.Type.$fSingISEXPTYPEComplex_$s$WSComplex
                                          `cast`
                                        (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Complex>_N),
                                        GHC.Classes.C:(%%)),
                                       Foreign.R.Type.$fSingISEXPTYPEComplex_$s$WSComplex
                                         `cast`
                                       (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Complex>_N),
                                       (Data.Type.Equality.$f~kab_$cp1~
                                          @ *
                                          @ (Data.Complex.Complex GHC.Types.Double)
                                          @ (Data.Complex.Complex GHC.Types.Double)
                                          (GHC.Types.Eq#
                                             @ *
                                             @ *
                                             @ (Data.Complex.Complex GHC.Types.Double)
                                             @ (Data.Complex.Complex GHC.Types.Double)
                                             @~ <Data.Complex.Complex GHC.Types.Double>_N))
                                         `cast`
                                       (Sym (Data.Type.Equality.N:~[0] <*>_N) <Data.Complex.Complex
                                                                                 GHC.Types.Double>_N <Data.Complex.Complex
                                                                                                        GHC.Types.Double>_N))
                                        `cast`
                                      (GHC.Classes.(%,,,%)
                                         <Foreign.Storable.Storable
                                            (Data.Complex.Complex GHC.Types.Double)>_N
                                         (GHC.Classes.(%,%)
                                            <Data.Singletons.SingI 'Foreign.R.Type.Complex>_N
                                            (Trans
                                                 (Sym (Foreign.R.Constraints.D:R::∈[1]
                                                           <'['Foreign.R.Type.String,
                                                              'Foreign.R.Type.Vector,
                                                              'Foreign.R.Type.Expr,
                                                              'Foreign.R.Type.WeakRef,
                                                              'Foreign.R.Type.Raw]>_N
                                                           <'Foreign.R.Type.Complex>_N))
                                                 (Trans
                                                      (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                <'['Foreign.R.Type.Complex,
                                                                   'Foreign.R.Type.String,
                                                                   'Foreign.R.Type.Vector,
                                                                   'Foreign.R.Type.Expr,
                                                                   'Foreign.R.Type.WeakRef,
                                                                   'Foreign.R.Type.Raw]>_N
                                                                <'Foreign.R.Type.Real>_N
                                                                <'Foreign.R.Type.Complex>_N))
                                                      (Trans
                                                           (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                     <'['Foreign.R.Type.Real,
                                                                        'Foreign.R.Type.Complex,
                                                                        'Foreign.R.Type.String,
                                                                        'Foreign.R.Type.Vector,
                                                                        'Foreign.R.Type.Expr,
                                                                        'Foreign.R.Type.WeakRef,
                                                                        'Foreign.R.Type.Raw]>_N
                                                                     <'Foreign.R.Type.Int>_N
                                                                     <'Foreign.R.Type.Complex>_N))
                                                           (Trans
                                                                (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                          <'['Foreign.R.Type.Int,
                                                                             'Foreign.R.Type.Real,
                                                                             'Foreign.R.Type.Complex,
                                                                             'Foreign.R.Type.String,
                                                                             'Foreign.R.Type.Vector,
                                                                             'Foreign.R.Type.Expr,
                                                                             'Foreign.R.Type.WeakRef,
                                                                             'Foreign.R.Type.Raw]>_N
                                                                          <'Foreign.R.Type.Logical>_N
                                                                          <'Foreign.R.Type.Complex>_N))
                                                                (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                          <'['Foreign.R.Type.Logical,
                                                                             'Foreign.R.Type.Int,
                                                                             'Foreign.R.Type.Real,
                                                                             'Foreign.R.Type.Complex,
                                                                             'Foreign.R.Type.String,
                                                                             'Foreign.R.Type.Vector,
                                                                             'Foreign.R.Type.Expr,
                                                                             'Foreign.R.Type.WeakRef,
                                                                             'Foreign.R.Type.Raw]>_N
                                                                          <'Foreign.R.Type.Char>_N
                                                                          <'Foreign.R.Type.Complex>_N)))))))_N
                                         <Data.Singletons.SingI 'Foreign.R.Type.Complex>_N
                                         ((Data.Type.Equality.~)
                                            <*>_N
                                            (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[4]
                                                      <GHC.Prim.Any>_N))
                                            <Data.Complex.Complex GHC.Types.Double>_N)_N)_R
                                      (Unsafe.Coerce.unsafeCoerce
                                         @ (Foreign.R.Internal.SEXP s a)
                                         @ (Foreign.R.Internal.SEXP
                                              GHC.Prim.Any 'Foreign.R.Type.Complex)
                                         x1
                                           `cast`
                                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                                   <s>_P
                                                   <a>_P))) of dt { Data.Vector.SEXP.Vector dt1 dt2 dt3 dt4 ->
                               Language.R.HExp.Complex
                                 @ GHC.Prim.Any
                                 @ 'Foreign.R.Type.Complex
                                 @~ <'Foreign.R.Type.Complex>_N
                                 dt1
                                 dt2
                                 dt3
                                 dt4 }))
                             `cast`
                           (Trans
                                (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                ((GHC.Prim.State#
                                    (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                 ->_R ((#,#)
                                         <'GHC.Types.VoidRep>_R
                                         <'GHC.Types.PtrRepLifted>_R
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                         <Language.R.HExp.HExp s a>_R)_R))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds { (#,#) ipv ipv1 ->
                      ipv1 }
                   Foreign.R.Type.String
                   -> case (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.String)
                              @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                              (Unsafe.Coerce.unsafeCoerce
                                 @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.String)
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                              (case Data.Vector.SEXP.unsafeFromSEXP
                                      @ GHC.Prim.Any
                                      @ 'Foreign.R.Type.String
                                      @ (Foreign.R.Internal.SEXP GHC.Prim.Any 'Foreign.R.Type.Char)
                                      (Foreign.R.Internal.$fStorableSEXP
                                         @ GHC.Prim.Any
                                         @ 'Foreign.R.Type.Char,
                                       (Foreign.R.Type.$fSingISEXPTYPEString_$s$WSString
                                          `cast`
                                        (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.String>_N),
                                        GHC.Classes.C:(%%)),
                                       Foreign.R.Type.$fSingISEXPTYPEString_$s$WSString
                                         `cast`
                                       (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.String>_N),
                                       (Data.Type.Equality.$f~kab_$cp1~
                                          @ *
                                          @ (Foreign.R.Internal.SEXP
                                               GHC.Prim.Any 'Foreign.R.Type.Char)
                                          @ (Foreign.R.Internal.SEXP
                                               GHC.Prim.Any 'Foreign.R.Type.Char)
                                          (GHC.Types.Eq#
                                             @ *
                                             @ *
                                             @ (Foreign.R.Internal.SEXP
                                                  GHC.Prim.Any 'Foreign.R.Type.Char)
                                             @ (Foreign.R.Internal.SEXP
                                                  GHC.Prim.Any 'Foreign.R.Type.Char)
                                             @~ <Foreign.R.Internal.SEXP
                                                   GHC.Prim.Any 'Foreign.R.Type.Char>_N))
                                         `cast`
                                       (Sym (Data.Type.Equality.N:~[0]
                                                 <*>_N) <Foreign.R.Internal.SEXP
                                                           GHC.Prim.Any
                                                           'Foreign.R.Type.Char>_N <Foreign.R.Internal.SEXP
                                                                                      GHC.Prim.Any
                                                                                      'Foreign.R.Type.Char>_N))
                                        `cast`
                                      (GHC.Classes.(%,,,%)
                                         <Foreign.Storable.Storable
                                            (Foreign.R.Internal.SEXP
                                               GHC.Prim.Any 'Foreign.R.Type.Char)>_N
                                         (GHC.Classes.(%,%)
                                            <Data.Singletons.SingI 'Foreign.R.Type.String>_N
                                            (Trans
                                                 (Sym (Foreign.R.Constraints.D:R::∈[1]
                                                           <'['Foreign.R.Type.Vector,
                                                              'Foreign.R.Type.Expr,
                                                              'Foreign.R.Type.WeakRef,
                                                              'Foreign.R.Type.Raw]>_N
                                                           <'Foreign.R.Type.String>_N))
                                                 (Trans
                                                      (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                <'['Foreign.R.Type.String,
                                                                   'Foreign.R.Type.Vector,
                                                                   'Foreign.R.Type.Expr,
                                                                   'Foreign.R.Type.WeakRef,
                                                                   'Foreign.R.Type.Raw]>_N
                                                                <'Foreign.R.Type.Complex>_N
                                                                <'Foreign.R.Type.String>_N))
                                                      (Trans
                                                           (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                     <'['Foreign.R.Type.Complex,
                                                                        'Foreign.R.Type.String,
                                                                        'Foreign.R.Type.Vector,
                                                                        'Foreign.R.Type.Expr,
                                                                        'Foreign.R.Type.WeakRef,
                                                                        'Foreign.R.Type.Raw]>_N
                                                                     <'Foreign.R.Type.Real>_N
                                                                     <'Foreign.R.Type.String>_N))
                                                           (Trans
                                                                (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                          <'['Foreign.R.Type.Real,
                                                                             'Foreign.R.Type.Complex,
                                                                             'Foreign.R.Type.String,
                                                                             'Foreign.R.Type.Vector,
                                                                             'Foreign.R.Type.Expr,
                                                                             'Foreign.R.Type.WeakRef,
                                                                             'Foreign.R.Type.Raw]>_N
                                                                          <'Foreign.R.Type.Int>_N
                                                                          <'Foreign.R.Type.String>_N))
                                                                (Trans
                                                                     (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                               <'['Foreign.R.Type.Int,
                                                                                  'Foreign.R.Type.Real,
                                                                                  'Foreign.R.Type.Complex,
                                                                                  'Foreign.R.Type.String,
                                                                                  'Foreign.R.Type.Vector,
                                                                                  'Foreign.R.Type.Expr,
                                                                                  'Foreign.R.Type.WeakRef,
                                                                                  'Foreign.R.Type.Raw]>_N
                                                                               <'Foreign.R.Type.Logical>_N
                                                                               <'Foreign.R.Type.String>_N))
                                                                     (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                               <'['Foreign.R.Type.Logical,
                                                                                  'Foreign.R.Type.Int,
                                                                                  'Foreign.R.Type.Real,
                                                                                  'Foreign.R.Type.Complex,
                                                                                  'Foreign.R.Type.String,
                                                                                  'Foreign.R.Type.Vector,
                                                                                  'Foreign.R.Type.Expr,
                                                                                  'Foreign.R.Type.WeakRef,
                                                                                  'Foreign.R.Type.Raw]>_N
                                                                               <'Foreign.R.Type.Char>_N
                                                                               <'Foreign.R.Type.String>_N))))))))_N
                                         <Data.Singletons.SingI 'Foreign.R.Type.String>_N
                                         ((Data.Type.Equality.~)
                                            <*>_N
                                            (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[5]
                                                      <GHC.Prim.Any>_N))
                                            <Foreign.R.Internal.SEXP
                                               GHC.Prim.Any 'Foreign.R.Type.Char>_N)_N)_R
                                      (Unsafe.Coerce.unsafeCoerce
                                         @ (Foreign.R.Internal.SEXP s a)
                                         @ (Foreign.R.Internal.SEXP
                                              GHC.Prim.Any 'Foreign.R.Type.String)
                                         x1
                                           `cast`
                                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                                   <s>_P
                                                   <a>_P))) of dt { Data.Vector.SEXP.Vector dt1 dt2 dt3 dt4 ->
                               Language.R.HExp.String
                                 @ GHC.Prim.Any
                                 @ 'Foreign.R.Type.String
                                 @~ <'Foreign.R.Type.String>_N
                                 dt1
                                 dt2
                                 dt3
                                 dt4 }))
                             `cast`
                           (Trans
                                (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                ((GHC.Prim.State#
                                    (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                 ->_R ((#,#)
                                         <'GHC.Types.VoidRep>_R
                                         <'GHC.Types.PtrRepLifted>_R
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                         <Language.R.HExp.HExp s a>_R)_R))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds { (#,#) ipv ipv1 ->
                      ipv1 }
                   Foreign.R.Type.DotDotDot
                   -> case (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ GHC.Base.String
                              @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                              (Internal.Error.unimplemented
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                              (GHC.Base.augment
                                 @ GHC.Types.Char
                                 (\ @ b
                                    (c :: GHC.Types.Char -> b -> b)[OneShot]
                                    (n :: b)[OneShot] ->
                                  GHC.CString.unpackFoldrCString# @ b "peekHExp: "# c n)
                                 (Foreign.R.Type.$fShowSEXPTYPE_$cshow
                                    (Foreign.R.Internal.typeOf
                                       @ s
                                       @ a
                                       x1
                                         `cast`
                                       (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P))))))
                             `cast`
                           (Trans
                                (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                ((GHC.Prim.State#
                                    (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                 ->_R ((#,#)
                                         <'GHC.Types.VoidRep>_R
                                         <'GHC.Types.PtrRepLifted>_R
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                         <Language.R.HExp.HExp s a>_R)_R))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds { (#,#) ipv ipv1 ->
                      ipv1 }
                   Foreign.R.Type.Vector
                   -> case (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Vector))
                              @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                              (Unsafe.Coerce.unsafeCoerce
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Vector))
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                              (GHC.Base.$fApplicativeIO_$sap
                                 @ (Data.Vector.SEXP.Vector
                                      s 'Foreign.R.Type.Vector (Foreign.R.Internal.SomeSEXP s))
                                 @ (Language.R.HExp.HExp s 'Foreign.R.Type.Vector)
                                 (Language.R.HExp.$fStorableHExp_$s<$>1
                                    @ GHC.Int.Int32
                                    @ (Data.Vector.SEXP.Vector
                                         s 'Foreign.R.Type.Vector (Foreign.R.Internal.SomeSEXP s)
                                       -> Language.R.HExp.HExp s 'Foreign.R.Type.Vector)
                                    (Language.R.HExp.$WVector @ s)
                                    (Language.R.HExp.$fStorableHExp_$s<$>1
                                       @ Foreign.C.Types.CInt
                                       @ GHC.Int.Int32
                                       (GHC.Base.id @ GHC.Int.Int32)
                                         `cast`
                                       (Sym (Foreign.C.Types.N:CInt[0]) ->_R <GHC.Int.Int32>_R)
                                       (Foreign.C.Types.$fStorableCInt_$cpeekByteOff
                                          @ Foreign.R.Internal.SEXPREC
                                          sptr
                                          (GHC.Types.I# 36#))))
                                 (GHC.Base.returnIO
                                    @ (Data.Vector.SEXP.Vector
                                         s 'Foreign.R.Type.Vector (Foreign.R.Internal.SomeSEXP s))
                                    (Data.Vector.SEXP.unsafeFromSEXP
                                       @ s
                                       @ 'Foreign.R.Type.Vector
                                       @ (Foreign.R.Internal.SomeSEXP s)
                                       (Foreign.R.Internal.$fStorableSomeSEXP @ s,
                                        (Foreign.R.Type.$fSingISEXPTYPEVector_$s$WSVector
                                           `cast`
                                         (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Vector>_N),
                                         GHC.Classes.C:(%%)),
                                        Foreign.R.Type.$fSingISEXPTYPEVector_$s$WSVector
                                          `cast`
                                        (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Vector>_N),
                                        (Data.Type.Equality.$f~kab_$cp1~
                                           @ *
                                           @ (Foreign.R.Internal.SomeSEXP s)
                                           @ (Foreign.R.Internal.SomeSEXP s)
                                           (GHC.Types.Eq#
                                              @ *
                                              @ *
                                              @ (Foreign.R.Internal.SomeSEXP s)
                                              @ (Foreign.R.Internal.SomeSEXP s)
                                              @~ <Foreign.R.Internal.SomeSEXP s>_N))
                                          `cast`
                                        (Sym (Data.Type.Equality.N:~[0]
                                                  <*>_N) <Foreign.R.Internal.SomeSEXP
                                                            s>_N <Foreign.R.Internal.SomeSEXP s>_N))
                                         `cast`
                                       (GHC.Classes.(%,,,%)
                                          <Foreign.Storable.Storable
                                             (Foreign.R.Internal.SomeSEXP s)>_N
                                          (GHC.Classes.(%,%)
                                             <Data.Singletons.SingI 'Foreign.R.Type.Vector>_N
                                             (Trans
                                                  (Sym (Foreign.R.Constraints.D:R::∈[1]
                                                            <'['Foreign.R.Type.Expr,
                                                               'Foreign.R.Type.WeakRef,
                                                               'Foreign.R.Type.Raw]>_N
                                                            <'Foreign.R.Type.Vector>_N))
                                                  (Trans
                                                       (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                 <'['Foreign.R.Type.Vector,
                                                                    'Foreign.R.Type.Expr,
                                                                    'Foreign.R.Type.WeakRef,
                                                                    'Foreign.R.Type.Raw]>_N
                                                                 <'Foreign.R.Type.String>_N
                                                                 <'Foreign.R.Type.Vector>_N))
                                                       (Trans
                                                            (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                      <'['Foreign.R.Type.String,
                                                                         'Foreign.R.Type.Vector,
                                                                         'Foreign.R.Type.Expr,
                                                                         'Foreign.R.Type.WeakRef,
                                                                         'Foreign.R.Type.Raw]>_N
                                                                      <'Foreign.R.Type.Complex>_N
                                                                      <'Foreign.R.Type.Vector>_N))
                                                            (Trans
                                                                 (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                           <'['Foreign.R.Type.Complex,
                                                                              'Foreign.R.Type.String,
                                                                              'Foreign.R.Type.Vector,
                                                                              'Foreign.R.Type.Expr,
                                                                              'Foreign.R.Type.WeakRef,
                                                                              'Foreign.R.Type.Raw]>_N
                                                                           <'Foreign.R.Type.Real>_N
                                                                           <'Foreign.R.Type.Vector>_N))
                                                                 (Trans
                                                                      (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                                <'['Foreign.R.Type.Real,
                                                                                   'Foreign.R.Type.Complex,
                                                                                   'Foreign.R.Type.String,
                                                                                   'Foreign.R.Type.Vector,
                                                                                   'Foreign.R.Type.Expr,
                                                                                   'Foreign.R.Type.WeakRef,
                                                                                   'Foreign.R.Type.Raw]>_N
                                                                                <'Foreign.R.Type.Int>_N
                                                                                <'Foreign.R.Type.Vector>_N))
                                                                      (Trans
                                                                           (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                                     <'['Foreign.R.Type.Int,
                                                                                        'Foreign.R.Type.Real,
                                                                                        'Foreign.R.Type.Complex,
                                                                                        'Foreign.R.Type.String,
                                                                                        'Foreign.R.Type.Vector,
                                                                                        'Foreign.R.Type.Expr,
                                                                                        'Foreign.R.Type.WeakRef,
                                                                                        'Foreign.R.Type.Raw]>_N
                                                                                     <'Foreign.R.Type.Logical>_N
                                                                                     <'Foreign.R.Type.Vector>_N))
                                                                           (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                                     <'['Foreign.R.Type.Logical,
                                                                                        'Foreign.R.Type.Int,
                                                                                        'Foreign.R.Type.Real,
                                                                                        'Foreign.R.Type.Complex,
                                                                                        'Foreign.R.Type.String,
                                                                                        'Foreign.R.Type.Vector,
                                                                                        'Foreign.R.Type.Expr,
                                                                                        'Foreign.R.Type.WeakRef,
                                                                                        'Foreign.R.Type.Raw]>_N
                                                                                     <'Foreign.R.Type.Char>_N
                                                                                     <'Foreign.R.Type.Vector>_N)))))))))_N
                                          <Data.Singletons.SingI 'Foreign.R.Type.Vector>_N
                                          ((Data.Type.Equality.~)
                                             <*>_N
                                             (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[6] <s>_N))
                                             <Foreign.R.Internal.SomeSEXP s>_N)_N)_R
                                       (Unsafe.Coerce.unsafeCoerce
                                          @ (Foreign.R.Internal.SEXP s a)
                                          @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Vector)
                                          x1
                                            `cast`
                                          (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)))))))
                             `cast`
                           (Trans
                                (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                ((GHC.Prim.State#
                                    (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                 ->_R ((#,#)
                                         <'GHC.Types.VoidRep>_R
                                         <'GHC.Types.PtrRepLifted>_R
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                         <Language.R.HExp.HExp s a>_R)_R))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds { (#,#) ipv ipv1 ->
                      ipv1 }
                   Foreign.R.Type.Expr
                   -> case (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Expr))
                              @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                              (Unsafe.Coerce.unsafeCoerce
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Expr))
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                              (GHC.Base.$fApplicativeIO_$sap
                                 @ (Data.Vector.SEXP.Vector
                                      s 'Foreign.R.Type.Expr (Foreign.R.Internal.SomeSEXP s))
                                 @ (Language.R.HExp.HExp s 'Foreign.R.Type.Expr)
                                 (Language.R.HExp.$fStorableHExp_$s<$>1
                                    @ GHC.Int.Int32
                                    @ (Data.Vector.SEXP.Vector
                                         s 'Foreign.R.Type.Expr (Foreign.R.Internal.SomeSEXP s)
                                       -> Language.R.HExp.HExp s 'Foreign.R.Type.Expr)
                                    (Language.R.HExp.$WExpr @ s)
                                    (Language.R.HExp.$fStorableHExp_$s<$>1
                                       @ Foreign.C.Types.CInt
                                       @ GHC.Int.Int32
                                       (GHC.Base.id @ GHC.Int.Int32)
                                         `cast`
                                       (Sym (Foreign.C.Types.N:CInt[0]) ->_R <GHC.Int.Int32>_R)
                                       (Foreign.C.Types.$fStorableCInt_$cpeekByteOff
                                          @ Foreign.R.Internal.SEXPREC
                                          sptr
                                          (GHC.Types.I# 36#))))
                                 (GHC.Base.returnIO
                                    @ (Data.Vector.SEXP.Vector
                                         s 'Foreign.R.Type.Expr (Foreign.R.Internal.SomeSEXP s))
                                    (Data.Vector.SEXP.unsafeFromSEXP
                                       @ s
                                       @ 'Foreign.R.Type.Expr
                                       @ (Foreign.R.Internal.SomeSEXP s)
                                       (Foreign.R.Internal.$fStorableSomeSEXP @ s,
                                        (Foreign.R.Type.$fSingISEXPTYPEExpr_$s$WSExpr
                                           `cast`
                                         (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Expr>_N),
                                         GHC.Classes.C:(%%)),
                                        Foreign.R.Type.$fSingISEXPTYPEExpr_$s$WSExpr
                                          `cast`
                                        (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Expr>_N),
                                        (Data.Type.Equality.$f~kab_$cp1~
                                           @ *
                                           @ (Foreign.R.Internal.SomeSEXP s)
                                           @ (Foreign.R.Internal.SomeSEXP s)
                                           (GHC.Types.Eq#
                                              @ *
                                              @ *
                                              @ (Foreign.R.Internal.SomeSEXP s)
                                              @ (Foreign.R.Internal.SomeSEXP s)
                                              @~ <Foreign.R.Internal.SomeSEXP s>_N))
                                          `cast`
                                        (Sym (Data.Type.Equality.N:~[0]
                                                  <*>_N) <Foreign.R.Internal.SomeSEXP
                                                            s>_N <Foreign.R.Internal.SomeSEXP s>_N))
                                         `cast`
                                       (GHC.Classes.(%,,,%)
                                          <Foreign.Storable.Storable
                                             (Foreign.R.Internal.SomeSEXP s)>_N
                                          (GHC.Classes.(%,%)
                                             <Data.Singletons.SingI 'Foreign.R.Type.Expr>_N
                                             (Trans
                                                  (Sym (Foreign.R.Constraints.D:R::∈[1]
                                                            <'['Foreign.R.Type.WeakRef,
                                                               'Foreign.R.Type.Raw]>_N
                                                            <'Foreign.R.Type.Expr>_N))
                                                  (Trans
                                                       (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                 <'['Foreign.R.Type.Expr,
                                                                    'Foreign.R.Type.WeakRef,
                                                                    'Foreign.R.Type.Raw]>_N
                                                                 <'Foreign.R.Type.Vector>_N
                                                                 <'Foreign.R.Type.Expr>_N))
                                                       (Trans
                                                            (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                      <'['Foreign.R.Type.Vector,
                                                                         'Foreign.R.Type.Expr,
                                                                         'Foreign.R.Type.WeakRef,
                                                                         'Foreign.R.Type.Raw]>_N
                                                                      <'Foreign.R.Type.String>_N
                                                                      <'Foreign.R.Type.Expr>_N))
                                                            (Trans
                                                                 (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                           <'['Foreign.R.Type.String,
                                                                              'Foreign.R.Type.Vector,
                                                                              'Foreign.R.Type.Expr,
                                                                              'Foreign.R.Type.WeakRef,
                                                                              'Foreign.R.Type.Raw]>_N
                                                                           <'Foreign.R.Type.Complex>_N
                                                                           <'Foreign.R.Type.Expr>_N))
                                                                 (Trans
                                                                      (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                                <'['Foreign.R.Type.Complex,
                                                                                   'Foreign.R.Type.String,
                                                                                   'Foreign.R.Type.Vector,
                                                                                   'Foreign.R.Type.Expr,
                                                                                   'Foreign.R.Type.WeakRef,
                                                                                   'Foreign.R.Type.Raw]>_N
                                                                                <'Foreign.R.Type.Real>_N
                                                                                <'Foreign.R.Type.Expr>_N))
                                                                      (Trans
                                                                           (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                                     <'['Foreign.R.Type.Real,
                                                                                        'Foreign.R.Type.Complex,
                                                                                        'Foreign.R.Type.String,
                                                                                        'Foreign.R.Type.Vector,
                                                                                        'Foreign.R.Type.Expr,
                                                                                        'Foreign.R.Type.WeakRef,
                                                                                        'Foreign.R.Type.Raw]>_N
                                                                                     <'Foreign.R.Type.Int>_N
                                                                                     <'Foreign.R.Type.Expr>_N))
                                                                           (Trans
                                                                                (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                                          <'['Foreign.R.Type.Int,
                                                                                             'Foreign.R.Type.Real,
                                                                                             'Foreign.R.Type.Complex,
                                                                                             'Foreign.R.Type.String,
                                                                                             'Foreign.R.Type.Vector,
                                                                                             'Foreign.R.Type.Expr,
                                                                                             'Foreign.R.Type.WeakRef,
                                                                                             'Foreign.R.Type.Raw]>_N
                                                                                          <'Foreign.R.Type.Logical>_N
                                                                                          <'Foreign.R.Type.Expr>_N))
                                                                                (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                                          <'['Foreign.R.Type.Logical,
                                                                                             'Foreign.R.Type.Int,
                                                                                             'Foreign.R.Type.Real,
                                                                                             'Foreign.R.Type.Complex,
                                                                                             'Foreign.R.Type.String,
                                                                                             'Foreign.R.Type.Vector,
                                                                                             'Foreign.R.Type.Expr,
                                                                                             'Foreign.R.Type.WeakRef,
                                                                                             'Foreign.R.Type.Raw]>_N
                                                                                          <'Foreign.R.Type.Char>_N
                                                                                          <'Foreign.R.Type.Expr>_N))))))))))_N
                                          <Data.Singletons.SingI 'Foreign.R.Type.Expr>_N
                                          ((Data.Type.Equality.~)
                                             <*>_N
                                             (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[7] <s>_N))
                                             <Foreign.R.Internal.SomeSEXP s>_N)_N)_R
                                       (Unsafe.Coerce.unsafeCoerce
                                          @ (Foreign.R.Internal.SEXP s a)
                                          @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Expr)
                                          x1
                                            `cast`
                                          (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)))))))
                             `cast`
                           (Trans
                                (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                ((GHC.Prim.State#
                                    (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                 ->_R ((#,#)
                                         <'GHC.Types.VoidRep>_R
                                         <'GHC.Types.PtrRepLifted>_R
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                         <Language.R.HExp.HExp s a>_R)_R))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds { (#,#) ipv ipv1 ->
                      ipv1 }
                   Foreign.R.Type.Bytecode
                   -> case (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Bytecode))
                              @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                              (Unsafe.Coerce.unsafeCoerce
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.Bytecode))
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                              (GHC.Base.returnIO
                                 @ (Language.R.HExp.HExp s 'Foreign.R.Type.Bytecode)
                                 (Language.R.HExp.$WBytecode @ s)))
                             `cast`
                           (Trans
                                (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                ((GHC.Prim.State#
                                    (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                 ->_R ((#,#)
                                         <'GHC.Types.VoidRep>_R
                                         <'GHC.Types.PtrRepLifted>_R
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                         <Language.R.HExp.HExp s a>_R)_R))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds { (#,#) ipv ipv1 ->
                      ipv1 }
                   Foreign.R.Type.ExtPtr
                   -> case (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.ExtPtr))
                              @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                              (Unsafe.Coerce.unsafeCoerce
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.ExtPtr))
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                              (GHC.Base.$fApplicativeIO_$sap
                                 @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol)
                                 @ (Language.R.HExp.HExp s 'Foreign.R.Type.ExtPtr)
                                 (GHC.Base.$fApplicativeIO_$sap
                                    @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol
                                       -> Language.R.HExp.HExp s 'Foreign.R.Type.ExtPtr)
                                    (Language.R.HExp.$fStorableHExp_$s<$>1
                                       @ (GHC.Ptr.Ptr ())
                                       @ (Foreign.R.Internal.SEXP s GHC.Prim.Any
                                          -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol
                                          -> Language.R.HExp.HExp s 'Foreign.R.Type.ExtPtr)
                                       (Language.R.HExp.$WExtPtr @ s @ GHC.Prim.Any)
                                       (Language.R.HExp.$fStorableHExp_$s<$>1
                                          @ (GHC.Ptr.Ptr GHC.Prim.Any)
                                          @ (GHC.Ptr.Ptr ())
                                          (GHC.Ptr.castPtr @ GHC.Prim.Any @ ())
                                          (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                             @ GHC.Prim.Any
                                             @ Foreign.R.Internal.SEXPREC
                                             sptr
                                             (GHC.Types.I# 32#))))
                                    (Language.R.HExp.$fStorableHExp_$s<$>1
                                       @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                       @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                       (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any)
                                       (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                          @ Foreign.R.Internal.SEXPREC
                                          @ Foreign.R.Internal.SEXPREC
                                          sptr
                                          (GHC.Types.I# 40#))))
                                 (Language.R.HExp.$fStorableHExp_$s<$>1
                                    @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol)
                                    (Foreign.R.Internal.sexp @ s @ 'Foreign.R.Type.Symbol)
                                    (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                       @ Foreign.R.Internal.SEXPREC
                                       @ Foreign.R.Internal.SEXPREC
                                       sptr
                                       (GHC.Types.I# 48#)))))
                             `cast`
                           (Trans
                                (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                ((GHC.Prim.State#
                                    (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                 ->_R ((#,#)
                                         <'GHC.Types.VoidRep>_R
                                         <'GHC.Types.PtrRepLifted>_R
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                         <Language.R.HExp.HExp s a>_R)_R))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds { (#,#) ipv ipv1 ->
                      ipv1 }
                   Foreign.R.Type.WeakRef
                   -> case (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.WeakRef))
                              @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                              (Unsafe.Coerce.unsafeCoerce
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.WeakRef))
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                              (GHC.Base.$fApplicativeIO_$sap
                                 @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                 @ (Language.R.HExp.HExp s 'Foreign.R.Type.WeakRef)
                                 (GHC.Base.$fApplicativeIO_$sap
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                       -> Language.R.HExp.HExp s 'Foreign.R.Type.WeakRef)
                                    (GHC.Base.$fApplicativeIO_$sap
                                       @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                       @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                          -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                          -> Language.R.HExp.HExp s 'Foreign.R.Type.WeakRef)
                                       (Language.R.HExp.$fStorableHExp_$s<$>1
                                          @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                          @ (Foreign.R.Internal.SEXP s GHC.Prim.Any
                                             -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                             -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any
                                             -> Language.R.HExp.HExp s 'Foreign.R.Type.WeakRef)
                                          (Language.R.HExp.$fStorableHExp_$s$WWeakRef
                                             @ s
                                             @ GHC.Prim.Any)
                                          (Language.R.HExp.$fStorableHExp_$s<$>1
                                             @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                             @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                             (Language.R.HExp.$fStorableHExp_$s<$>
                                                @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                                @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                                (Foreign.R.Internal.unsafeCoerce
                                                   @ s
                                                   @ GHC.Prim.Any
                                                   @ 'Foreign.R.Type.Any)
                                                (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                                             (GHC.Storable.readPtrOffPtr
                                                @ Foreign.R.Internal.SEXPREC
                                                (GHC.Base.$
                                                   @ 'GHC.Types.PtrRepLifted
                                                   @ (GHC.Ptr.Ptr ())
                                                   @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXP0)
                                                   (GHC.Ptr.castPtr @ () @ Foreign.R.Internal.SEXP0)
                                                   (Foreign.R.Internal.unsafeSEXPToVectorPtr
                                                      @ s
                                                      @ a
                                                      x1
                                                        `cast`
                                                      (Sym (Foreign.R.Internal.N:SEXP[0]
                                                                <s>_P <a>_P))))
                                                (GHC.Types.I# 0#))))
                                       (Language.R.HExp.$fStorableHExp_$s<$>1
                                          @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                          @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                          (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any)
                                          (GHC.Storable.readPtrOffPtr
                                             @ Foreign.R.Internal.SEXPREC
                                             (GHC.Base.$
                                                @ 'GHC.Types.PtrRepLifted
                                                @ (GHC.Ptr.Ptr ())
                                                @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXP0)
                                                (GHC.Ptr.castPtr @ () @ Foreign.R.Internal.SEXP0)
                                                (Foreign.R.Internal.unsafeSEXPToVectorPtr
                                                   @ s
                                                   @ a
                                                   x1
                                                     `cast`
                                                   (Sym (Foreign.R.Internal.N:SEXP[0]
                                                             <s>_P <a>_P))))
                                             (GHC.Types.I# 1#))))
                                    (Language.R.HExp.$fStorableHExp_$s<$>1
                                       @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                       @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                       (Language.R.HExp.$fStorableHExp_$s<$>
                                          @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                          @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                          (Foreign.R.Internal.unsafeCoerce
                                             @ s
                                             @ GHC.Prim.Any
                                             @ 'Foreign.R.Type.Any)
                                          (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                                       (GHC.Storable.readPtrOffPtr
                                          @ Foreign.R.Internal.SEXPREC
                                          (GHC.Base.$
                                             @ 'GHC.Types.PtrRepLifted
                                             @ (GHC.Ptr.Ptr ())
                                             @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXP0)
                                             (GHC.Ptr.castPtr @ () @ Foreign.R.Internal.SEXP0)
                                             (Foreign.R.Internal.unsafeSEXPToVectorPtr
                                                @ s
                                                @ a
                                                x1
                                                  `cast`
                                                (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P))))
                                          (GHC.Types.I# 2#))))
                                 (Language.R.HExp.$fStorableHExp_$s<$>1
                                    @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                    @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                    (Language.R.HExp.$fStorableHExp_$s<$>
                                       @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                       @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Any)
                                       (Foreign.R.Internal.unsafeCoerce
                                          @ s
                                          @ GHC.Prim.Any
                                          @ 'Foreign.R.Type.Any)
                                       (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any))
                                    (GHC.Storable.readPtrOffPtr
                                       @ Foreign.R.Internal.SEXPREC
                                       (GHC.Base.$
                                          @ 'GHC.Types.PtrRepLifted
                                          @ (GHC.Ptr.Ptr ())
                                          @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXP0)
                                          (GHC.Ptr.castPtr @ () @ Foreign.R.Internal.SEXP0)
                                          (Foreign.R.Internal.unsafeSEXPToVectorPtr
                                             @ s
                                             @ a
                                             x1
                                               `cast`
                                             (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P))))
                                       (GHC.Types.I# 3#)))))
                             `cast`
                           (Trans
                                (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                ((GHC.Prim.State#
                                    (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                 ->_R ((#,#)
                                         <'GHC.Types.VoidRep>_R
                                         <'GHC.Types.PtrRepLifted>_R
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                         <Language.R.HExp.HExp s a>_R)_R))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds { (#,#) ipv ipv1 ->
                      ipv1 }
                   Foreign.R.Type.Raw
                   -> case (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.Raw)
                              @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                              (Unsafe.Coerce.unsafeCoerce
                                 @ (Language.R.HExp.HExp GHC.Prim.Any 'Foreign.R.Type.Raw)
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                              (case Data.Vector.SEXP.unsafeFromSEXP
                                      @ GHC.Prim.Any
                                      @ 'Foreign.R.Type.Raw
                                      @ GHC.Word.Word8
                                      (Foreign.Storable.$fStorableWord8,
                                       (Foreign.R.Type.$fSingISEXPTYPERaw_$s$WSRaw
                                          `cast`
                                        (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Raw>_N),
                                        GHC.Classes.C:(%%)),
                                       Foreign.R.Type.$fSingISEXPTYPERaw_$s$WSRaw
                                         `cast`
                                       (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Raw>_N),
                                       (Data.Type.Equality.$f~kab_$cp1~
                                          @ *
                                          @ GHC.Word.Word8
                                          @ GHC.Word.Word8
                                          (GHC.Types.Eq#
                                             @ *
                                             @ *
                                             @ GHC.Word.Word8
                                             @ GHC.Word.Word8
                                             @~ <GHC.Word.Word8>_N))
                                         `cast`
                                       (Sym (Data.Type.Equality.N:~[0]
                                                 <*>_N) <GHC.Word.Word8>_N <GHC.Word.Word8>_N))
                                        `cast`
                                      (GHC.Classes.(%,,,%)
                                         <Foreign.Storable.Storable GHC.Word.Word8>_N
                                         (GHC.Classes.(%,%)
                                            <Data.Singletons.SingI 'Foreign.R.Type.Raw>_N
                                            (Trans
                                                 (Sym (Foreign.R.Constraints.D:R::∈[1]
                                                           <'[]>_N <'Foreign.R.Type.Raw>_N))
                                                 (Trans
                                                      (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                <'['Foreign.R.Type.Raw]>_N
                                                                <'Foreign.R.Type.WeakRef>_N
                                                                <'Foreign.R.Type.Raw>_N))
                                                      (Trans
                                                           (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                     <'['Foreign.R.Type.WeakRef,
                                                                        'Foreign.R.Type.Raw]>_N
                                                                     <'Foreign.R.Type.Expr>_N
                                                                     <'Foreign.R.Type.Raw>_N))
                                                           (Trans
                                                                (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                          <'['Foreign.R.Type.Expr,
                                                                             'Foreign.R.Type.WeakRef,
                                                                             'Foreign.R.Type.Raw]>_N
                                                                          <'Foreign.R.Type.Vector>_N
                                                                          <'Foreign.R.Type.Raw>_N))
                                                                (Trans
                                                                     (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                               <'['Foreign.R.Type.Vector,
                                                                                  'Foreign.R.Type.Expr,
                                                                                  'Foreign.R.Type.WeakRef,
                                                                                  'Foreign.R.Type.Raw]>_N
                                                                               <'Foreign.R.Type.String>_N
                                                                               <'Foreign.R.Type.Raw>_N))
                                                                     (Trans
                                                                          (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                                    <'['Foreign.R.Type.String,
                                                                                       'Foreign.R.Type.Vector,
                                                                                       'Foreign.R.Type.Expr,
                                                                                       'Foreign.R.Type.WeakRef,
                                                                                       'Foreign.R.Type.Raw]>_N
                                                                                    <'Foreign.R.Type.Complex>_N
                                                                                    <'Foreign.R.Type.Raw>_N))
                                                                          (Trans
                                                                               (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                                         <'['Foreign.R.Type.Complex,
                                                                                            'Foreign.R.Type.String,
                                                                                            'Foreign.R.Type.Vector,
                                                                                            'Foreign.R.Type.Expr,
                                                                                            'Foreign.R.Type.WeakRef,
                                                                                            'Foreign.R.Type.Raw]>_N
                                                                                         <'Foreign.R.Type.Real>_N
                                                                                         <'Foreign.R.Type.Raw>_N))
                                                                               (Trans
                                                                                    (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                                              <'['Foreign.R.Type.Real,
                                                                                                 'Foreign.R.Type.Complex,
                                                                                                 'Foreign.R.Type.String,
                                                                                                 'Foreign.R.Type.Vector,
                                                                                                 'Foreign.R.Type.Expr,
                                                                                                 'Foreign.R.Type.WeakRef,
                                                                                                 'Foreign.R.Type.Raw]>_N
                                                                                              <'Foreign.R.Type.Int>_N
                                                                                              <'Foreign.R.Type.Raw>_N))
                                                                                    (Trans
                                                                                         (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                                                   <'['Foreign.R.Type.Int,
                                                                                                      'Foreign.R.Type.Real,
                                                                                                      'Foreign.R.Type.Complex,
                                                                                                      'Foreign.R.Type.String,
                                                                                                      'Foreign.R.Type.Vector,
                                                                                                      'Foreign.R.Type.Expr,
                                                                                                      'Foreign.R.Type.WeakRef,
                                                                                                      'Foreign.R.Type.Raw]>_N
                                                                                                   <'Foreign.R.Type.Logical>_N
                                                                                                   <'Foreign.R.Type.Raw>_N))
                                                                                         (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                                                                   <'['Foreign.R.Type.Logical,
                                                                                                      'Foreign.R.Type.Int,
                                                                                                      'Foreign.R.Type.Real,
                                                                                                      'Foreign.R.Type.Complex,
                                                                                                      'Foreign.R.Type.String,
                                                                                                      'Foreign.R.Type.Vector,
                                                                                                      'Foreign.R.Type.Expr,
                                                                                                      'Foreign.R.Type.WeakRef,
                                                                                                      'Foreign.R.Type.Raw]>_N
                                                                                                   <'Foreign.R.Type.Char>_N
                                                                                                   <'Foreign.R.Type.Raw>_N))))))))))))_N
                                         <Data.Singletons.SingI 'Foreign.R.Type.Raw>_N
                                         ((Data.Type.Equality.~)
                                            <*>_N
                                            (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[8]
                                                      <GHC.Prim.Any>_N))
                                            <GHC.Word.Word8>_N)_N)_R
                                      (Unsafe.Coerce.unsafeCoerce
                                         @ (Foreign.R.Internal.SEXP s a)
                                         @ (Foreign.R.Internal.SEXP
                                              GHC.Prim.Any 'Foreign.R.Type.Raw)
                                         x1
                                           `cast`
                                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                                   <s>_P
                                                   <a>_P))) of dt { Data.Vector.SEXP.Vector dt1 dt2 dt3 dt4 ->
                               Language.R.HExp.Raw
                                 @ GHC.Prim.Any
                                 @ 'Foreign.R.Type.Raw
                                 @~ <'Foreign.R.Type.Raw>_N
                                 dt1
                                 dt2
                                 dt3
                                 dt4 }))
                             `cast`
                           (Trans
                                (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                ((GHC.Prim.State#
                                    (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                 ->_R ((#,#)
                                         <'GHC.Types.VoidRep>_R
                                         <'GHC.Types.PtrRepLifted>_R
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                         <Language.R.HExp.HExp s a>_R)_R))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds { (#,#) ipv ipv1 ->
                      ipv1 }
                   Foreign.R.Type.S4
                   -> case (GHC.Base.$
                              @ 'GHC.Types.PtrRepLifted
                              @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.S4))
                              @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                              (Unsafe.Coerce.unsafeCoerce
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s 'Foreign.R.Type.S4))
                                 @ (GHC.Types.IO (Language.R.HExp.HExp s a)))
                              (Language.R.HExp.$fStorableHExp_$s<$>1
                                 @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                 @ (Language.R.HExp.HExp s 'Foreign.R.Type.S4)
                                 (Language.R.HExp.$WS4 @ s @ GHC.Prim.Any)
                                 (Language.R.HExp.$fStorableHExp_$s<$>1
                                    @ (GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC)
                                    @ (Foreign.R.Internal.SEXP s GHC.Prim.Any)
                                    (Foreign.R.Internal.sexp @ s @ GHC.Prim.Any)
                                    (Foreign.Storable.$fStorablePtr_$cpeekByteOff
                                       @ Foreign.R.Internal.SEXPREC
                                       @ Foreign.R.Internal.SEXPREC
                                       sptr
                                       (GHC.Types.I# 48#)))))
                             `cast`
                           (Trans
                                (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                ((GHC.Prim.State#
                                    (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                 ->_R ((#,#)
                                         <'GHC.Types.VoidRep>_R
                                         <'GHC.Types.PtrRepLifted>_R
                                         (GHC.Prim.State#
                                            (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                         <Language.R.HExp.HExp s a>_R)_R))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds { (#,#) ipv ipv1 ->
                      ipv1 } }) -}
87f422bbaa2bfca911fc744ac53d22fa
  unhexp ::
    Control.Monad.R.Class.MonadR m =>
    Language.R.HExp.HExp (Control.Monad.R.Class.Region m) a
    -> m (Foreign.R.Internal.SEXP (Control.Monad.R.Class.Region m) a)
  {- Arity: 2,
     Strictness: <S,U(A,1*U(1*U(A,1*C1(C1(U)),A,1*C1(U),A),A),A,A,A,1*C1(U),1*C1(U),A,A)><S,1*U> -}
343083f20d347d54766accc1ddbd9fce
  vector ::
    Foreign.R.Type.IsVector a =>
    Foreign.R.Internal.SEXP s a
    -> Data.Vector.SEXP.Vector s a (Data.Vector.SEXP.Base.ElemRep s a)
  {- Arity: 2, Strictness: <L,A><S(S),1*U(U)>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ (a :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   (w :: Foreign.R.Type.IsVector a)
                   (w1 :: Foreign.R.Internal.SEXP s a) ->
                 case w1
                        `cast`
                      (Foreign.R.Internal.N:SEXP[0]
                           <s>_P <a>_P) of ww { GHC.Ptr.Ptr ww1 ->
                 case {__pkg_ccall inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs ghczuwrapperZC23ZCinlinezmrzm0zi9zi0zi2zmGXEXrsxC4K8OTVxhqWwxsZCForeignziRziInternalZCTYPEOF GHC.Prim.Addr#
                                                                                                                                                                       -> GHC.Prim.State#
                                                                                                                                                                            GHC.Prim.RealWorld
                                                                                                                                                                       -> (# GHC.Prim.State#
                                                                                                                                                                               GHC.Prim.RealWorld,
                                                                                                                                                                             GHC.Prim.Int# #)}
                        ww1
                        GHC.Prim.realWorld# of wild { (#,#) ds2 ds3 ->
                 let {
                   $j :: GHC.Prim.Void#
                         -> Data.Vector.SEXP.Vector s a (Data.Vector.SEXP.Base.ElemRep s a)
                     {- Arity: 1, Strictness: <B,A>b -}
                   = \ (w2 :: GHC.Prim.Void#)[OneShot] ->
                     case GHC.Exception.throw
                            @ Internal.Error.Failure
                            @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                            Internal.Error.$fExceptionFailure
                            (Internal.Error.Failure
                               (GHC.CString.unpackAppendCString#
                                  "peekHExp: "#
                                  (case {__pkg_ccall inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs ghczuwrapperZC23ZCinlinezmrzm0zi9zi0zi2zmGXEXrsxC4K8OTVxhqWwxsZCForeignziRziInternalZCTYPEOF GHC.Prim.Addr#
                                                                                                                                                                                         -> GHC.Prim.State#
                                                                                                                                                                                              GHC.Prim.RealWorld
                                                                                                                                                                                         -> (# GHC.Prim.State#
                                                                                                                                                                                                 GHC.Prim.RealWorld,
                                                                                                                                                                                               GHC.Prim.Int# #)}
                                          ww1
                                          GHC.Prim.realWorld# of wild1 { (#,#) ds1 ds5 ->
                                   Foreign.R.Type.$w$cshowsPrec
                                     (Foreign.R.Type.$w$ctoEnum (GHC.Prim.narrow32Int# ds5))
                                     (GHC.Types.[] @ GHC.Types.Char) }))
                               Internal.Error.unimplemented1)
                     ret_ty (Data.Vector.SEXP.Vector
                               s a (Data.Vector.SEXP.Base.ElemRep s a))
                     of {}
                 } in
                 let {
                   $j1 :: GHC.Prim.Void#
                          -> Data.Vector.SEXP.Vector s a (Data.Vector.SEXP.Base.ElemRep s a)
                     {- Arity: 1, Strictness: <B,A>x -}
                   = \ (w2 :: GHC.Prim.Void#)[OneShot] ->
                     GHC.Exception.throw
                       @ Internal.Error.Violation
                       @ (Data.Vector.SEXP.Vector s a (Data.Vector.SEXP.Base.ElemRep s a))
                       Internal.Error.$fExceptionViolation
                       (Internal.Error.Violation
                          Language.R.HExp.vector1
                          (case {__pkg_ccall inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs ghczuwrapperZC23ZCinlinezmrzm0zi9zi0zi2zmGXEXrsxC4K8OTVxhqWwxsZCForeignziRziInternalZCTYPEOF GHC.Prim.Addr#
                                                                                                                                                                                 -> GHC.Prim.State#
                                                                                                                                                                                      GHC.Prim.RealWorld
                                                                                                                                                                                 -> (# GHC.Prim.State#
                                                                                                                                                                                         GHC.Prim.RealWorld,
                                                                                                                                                                                       GHC.Prim.Int# #)}
                                  ww1
                                  GHC.Prim.realWorld# of wild1 { (#,#) ds1 ds5 ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             (Foreign.R.Type.$w$cshowsPrec
                                (Foreign.R.Type.$w$ctoEnum (GHC.Prim.narrow32Int# ds5))
                                (GHC.Types.[] @ GHC.Types.Char))
                             (GHC.CString.unpackCString# " unexpected vector type."#) }))
                 } in
                 case GHC.Prim.narrow32Int# ds3 of ds {
                   DEFAULT
                   -> case Foreign.R.Type.$fEnumSEXPTYPE1
                      ret_ty (Data.Vector.SEXP.Vector
                                s a (Data.Vector.SEXP.Base.ElemRep s a))
                      of {}
                   0# -> $j1 GHC.Prim.void#
                   1#
                   -> case GHC.Prim.readAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 32#)
                             0#
                             GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                      case GHC.Prim.readAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 40#)
                             0#
                             ipv of ds5 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.readAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 48#)
                             0#
                             ipv2 of ds6 { (#,#) ipv4 ipv5 ->
                      $j1 GHC.Prim.void# } } }
                   2#
                   -> case GHC.Prim.readAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 32#)
                             0#
                             GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                      case GHC.Prim.readAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 40#)
                             0#
                             ipv of ds5 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.readAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 48#)
                             0#
                             ipv2 of ds6 { (#,#) ipv4 ipv5 ->
                      $j1 GHC.Prim.void# } } }
                   3#
                   -> case GHC.Prim.readAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 32#)
                             0#
                             GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                      case GHC.Prim.readAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 40#)
                             0#
                             ipv of ds5 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.readAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 48#)
                             0#
                             ipv2 of ds6 { (#,#) ipv4 ipv5 ->
                      $j1 GHC.Prim.void# } } }
                   4#
                   -> case GHC.Prim.readAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 32#)
                             0#
                             GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                      case GHC.Prim.readAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 40#)
                             0#
                             ipv of ds5 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.readAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 48#)
                             0#
                             ipv2 of ds6 { (#,#) ipv4 ipv5 ->
                      $j1 GHC.Prim.void# } } }
                   5#
                   -> case GHC.Prim.readAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 32#)
                             0#
                             GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                      case GHC.Prim.readAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 40#)
                             0#
                             ipv of ds5 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.readAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 48#)
                             0#
                             ipv2 of ds6 { (#,#) ipv4 ipv5 ->
                      $j1 GHC.Prim.void# } } }
                   6#
                   -> case GHC.Prim.readAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 32#)
                             0#
                             GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                      case GHC.Prim.readAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 40#)
                             0#
                             ipv of ds5 { (#,#) ipv2 ipv3 ->
                      $j1 GHC.Prim.void# } }
                   7#
                   -> case GHC.Prim.readInt32OffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 32#)
                             0#
                             GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                      $j1 GHC.Prim.void# }
                   8#
                   -> case GHC.Prim.readInt32OffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 32#)
                             0#
                             GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                      $j1 GHC.Prim.void# }
                   9#
                   -> case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_PreserveObject GHC.Prim.Addr#
                                                                                                   -> GHC.Prim.State#
                                                                                                        GHC.Prim.RealWorld
                                                                                                   -> (# GHC.Prim.State#
                                                                                                           GHC.Prim.RealWorld #)}
                             ww1
                             GHC.Prim.realWorld# of wild1 { Unit# ds1 ->
                      case GHC.ForeignPtr.$wnewConcForeignPtr
                             @ ()
                             ww1
                             (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_ReleaseObject GHC.Prim.Addr#
                                                                                                          -> GHC.Prim.State#
                                                                                                               GHC.Prim.RealWorld
                                                                                                          -> (# GHC.Prim.State#
                                                                                                                  GHC.Prim.RealWorld #)}
                                     ww1
                                     s1 of wild2 { Unit# ds5 ->
                              (# ds5, GHC.Tuple.() #) })
                               `cast`
                             (Sym (GHC.Types.N:IO[0] <()>_R))
                             ds1 of ds5 { (#,#) ipv ipv1 ->
                      case GHC.Prim.readInt32OffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 32#)
                             0#
                             ipv of ds6 { (#,#) ipv2 ipv3 ->
                      case ipv1 of dt { GHC.ForeignPtr.ForeignPtr dt1 dt2 ->
                      case (Language.R.HExp.Char
                              @ GHC.Prim.Any
                              @ 'Foreign.R.Type.Char
                              @~ <'Foreign.R.Type.Char>_N
                              dt1
                              dt2
                              0#
                              (GHC.Prim.narrow32Int# ipv3))
                             `cast`
                           (Trans
                                (UnsafeCo representational (Language.R.HExp.HExp
                                                              GHC.Prim.Any
                                                              'Foreign.R.Type.Char) (GHC.Types.IO
                                                                                       (Language.R.HExp.HExp
                                                                                          s a)))
                                (Trans
                                     (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                     ((GHC.Prim.State#
                                         (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                      ->_R ((#,#)
                                              <'GHC.Types.VoidRep>_R
                                              <'GHC.Types.PtrRepLifted>_R
                                              (GHC.Prim.State#
                                                 (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                              <Language.R.HExp.HExp s a>_R)_R)))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds7 { (#,#) ipv4 ipv5 ->
                      case ipv5 of wild2 {
                        DEFAULT -> $j1 GHC.Prim.void#
                        Language.R.HExp.Char cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Logical cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Int cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Real cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Complex cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.String cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Vector cobox0 dt4 dt5 dt6 dt7 dt8
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt5
                             dt6
                             dt7
                             dt8
                        Language.R.HExp.Expr cobox0 dt4 dt5 dt6 dt7 dt8
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt5
                             dt6
                             dt7
                             dt8 } } } } } }
                   10#
                   -> case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_PreserveObject GHC.Prim.Addr#
                                                                                                   -> GHC.Prim.State#
                                                                                                        GHC.Prim.RealWorld
                                                                                                   -> (# GHC.Prim.State#
                                                                                                           GHC.Prim.RealWorld #)}
                             ww1
                             GHC.Prim.realWorld# of wild1 { Unit# ds1 ->
                      case GHC.ForeignPtr.$wnewConcForeignPtr
                             @ ()
                             ww1
                             (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_ReleaseObject GHC.Prim.Addr#
                                                                                                          -> GHC.Prim.State#
                                                                                                               GHC.Prim.RealWorld
                                                                                                          -> (# GHC.Prim.State#
                                                                                                                  GHC.Prim.RealWorld #)}
                                     ww1
                                     s1 of wild2 { Unit# ds5 ->
                              (# ds5, GHC.Tuple.() #) })
                               `cast`
                             (Sym (GHC.Types.N:IO[0] <()>_R))
                             ds1 of ds5 { (#,#) ipv ipv1 ->
                      case GHC.Prim.readInt32OffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 32#)
                             0#
                             ipv of ds6 { (#,#) ipv2 ipv3 ->
                      case ipv1 of dt { GHC.ForeignPtr.ForeignPtr dt1 dt2 ->
                      case (Language.R.HExp.Logical
                              @ GHC.Prim.Any
                              @ 'Foreign.R.Type.Logical
                              @~ <'Foreign.R.Type.Logical>_N
                              dt1
                              dt2
                              0#
                              (GHC.Prim.narrow32Int# ipv3))
                             `cast`
                           (Trans
                                (UnsafeCo representational (Language.R.HExp.HExp
                                                              GHC.Prim.Any
                                                              'Foreign.R.Type.Logical) (GHC.Types.IO
                                                                                          (Language.R.HExp.HExp
                                                                                             s a)))
                                (Trans
                                     (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                     ((GHC.Prim.State#
                                         (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                      ->_R ((#,#)
                                              <'GHC.Types.VoidRep>_R
                                              <'GHC.Types.PtrRepLifted>_R
                                              (GHC.Prim.State#
                                                 (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                              <Language.R.HExp.HExp s a>_R)_R)))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds7 { (#,#) ipv4 ipv5 ->
                      case ipv5 of wild2 {
                        DEFAULT -> $j1 GHC.Prim.void#
                        Language.R.HExp.Char cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Logical cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Int cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Real cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Complex cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.String cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Vector cobox0 dt4 dt5 dt6 dt7 dt8
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt5
                             dt6
                             dt7
                             dt8
                        Language.R.HExp.Expr cobox0 dt4 dt5 dt6 dt7 dt8
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt5
                             dt6
                             dt7
                             dt8 } } } } } }
                   13#
                   -> case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_PreserveObject GHC.Prim.Addr#
                                                                                                   -> GHC.Prim.State#
                                                                                                        GHC.Prim.RealWorld
                                                                                                   -> (# GHC.Prim.State#
                                                                                                           GHC.Prim.RealWorld #)}
                             ww1
                             GHC.Prim.realWorld# of wild1 { Unit# ds1 ->
                      case GHC.ForeignPtr.$wnewConcForeignPtr
                             @ ()
                             ww1
                             (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_ReleaseObject GHC.Prim.Addr#
                                                                                                          -> GHC.Prim.State#
                                                                                                               GHC.Prim.RealWorld
                                                                                                          -> (# GHC.Prim.State#
                                                                                                                  GHC.Prim.RealWorld #)}
                                     ww1
                                     s1 of wild2 { Unit# ds5 ->
                              (# ds5, GHC.Tuple.() #) })
                               `cast`
                             (Sym (GHC.Types.N:IO[0] <()>_R))
                             ds1 of ds5 { (#,#) ipv ipv1 ->
                      case GHC.Prim.readInt32OffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 32#)
                             0#
                             ipv of ds6 { (#,#) ipv2 ipv3 ->
                      case ipv1 of dt { GHC.ForeignPtr.ForeignPtr dt1 dt2 ->
                      case (Language.R.HExp.Int
                              @ GHC.Prim.Any
                              @ 'Foreign.R.Type.Int
                              @~ <'Foreign.R.Type.Int>_N
                              dt1
                              dt2
                              0#
                              (GHC.Prim.narrow32Int# ipv3))
                             `cast`
                           (Trans
                                (UnsafeCo representational (Language.R.HExp.HExp
                                                              GHC.Prim.Any
                                                              'Foreign.R.Type.Int) (GHC.Types.IO
                                                                                      (Language.R.HExp.HExp
                                                                                         s a)))
                                (Trans
                                     (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                     ((GHC.Prim.State#
                                         (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                      ->_R ((#,#)
                                              <'GHC.Types.VoidRep>_R
                                              <'GHC.Types.PtrRepLifted>_R
                                              (GHC.Prim.State#
                                                 (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                              <Language.R.HExp.HExp s a>_R)_R)))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds7 { (#,#) ipv4 ipv5 ->
                      case ipv5 of wild2 {
                        DEFAULT -> $j1 GHC.Prim.void#
                        Language.R.HExp.Char cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Logical cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Int cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Real cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Complex cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.String cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Vector cobox0 dt4 dt5 dt6 dt7 dt8
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt5
                             dt6
                             dt7
                             dt8
                        Language.R.HExp.Expr cobox0 dt4 dt5 dt6 dt7 dt8
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt5
                             dt6
                             dt7
                             dt8 } } } } } }
                   14#
                   -> case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_PreserveObject GHC.Prim.Addr#
                                                                                                   -> GHC.Prim.State#
                                                                                                        GHC.Prim.RealWorld
                                                                                                   -> (# GHC.Prim.State#
                                                                                                           GHC.Prim.RealWorld #)}
                             ww1
                             GHC.Prim.realWorld# of wild1 { Unit# ds1 ->
                      case GHC.ForeignPtr.$wnewConcForeignPtr
                             @ ()
                             ww1
                             (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_ReleaseObject GHC.Prim.Addr#
                                                                                                          -> GHC.Prim.State#
                                                                                                               GHC.Prim.RealWorld
                                                                                                          -> (# GHC.Prim.State#
                                                                                                                  GHC.Prim.RealWorld #)}
                                     ww1
                                     s1 of wild2 { Unit# ds5 ->
                              (# ds5, GHC.Tuple.() #) })
                               `cast`
                             (Sym (GHC.Types.N:IO[0] <()>_R))
                             ds1 of ds5 { (#,#) ipv ipv1 ->
                      case GHC.Prim.readInt32OffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 32#)
                             0#
                             ipv of ds6 { (#,#) ipv2 ipv3 ->
                      case ipv1 of dt { GHC.ForeignPtr.ForeignPtr dt1 dt2 ->
                      case (Language.R.HExp.Real
                              @ GHC.Prim.Any
                              @ 'Foreign.R.Type.Real
                              @~ <'Foreign.R.Type.Real>_N
                              dt1
                              dt2
                              0#
                              (GHC.Prim.narrow32Int# ipv3))
                             `cast`
                           (Trans
                                (UnsafeCo representational (Language.R.HExp.HExp
                                                              GHC.Prim.Any
                                                              'Foreign.R.Type.Real) (GHC.Types.IO
                                                                                       (Language.R.HExp.HExp
                                                                                          s a)))
                                (Trans
                                     (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                     ((GHC.Prim.State#
                                         (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                      ->_R ((#,#)
                                              <'GHC.Types.VoidRep>_R
                                              <'GHC.Types.PtrRepLifted>_R
                                              (GHC.Prim.State#
                                                 (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                              <Language.R.HExp.HExp s a>_R)_R)))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds7 { (#,#) ipv4 ipv5 ->
                      case ipv5 of wild2 {
                        DEFAULT -> $j1 GHC.Prim.void#
                        Language.R.HExp.Char cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Logical cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Int cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Real cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Complex cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.String cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Vector cobox0 dt4 dt5 dt6 dt7 dt8
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt5
                             dt6
                             dt7
                             dt8
                        Language.R.HExp.Expr cobox0 dt4 dt5 dt6 dt7 dt8
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt5
                             dt6
                             dt7
                             dt8 } } } } } }
                   15#
                   -> case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_PreserveObject GHC.Prim.Addr#
                                                                                                   -> GHC.Prim.State#
                                                                                                        GHC.Prim.RealWorld
                                                                                                   -> (# GHC.Prim.State#
                                                                                                           GHC.Prim.RealWorld #)}
                             ww1
                             GHC.Prim.realWorld# of wild1 { Unit# ds1 ->
                      case GHC.ForeignPtr.$wnewConcForeignPtr
                             @ ()
                             ww1
                             (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_ReleaseObject GHC.Prim.Addr#
                                                                                                          -> GHC.Prim.State#
                                                                                                               GHC.Prim.RealWorld
                                                                                                          -> (# GHC.Prim.State#
                                                                                                                  GHC.Prim.RealWorld #)}
                                     ww1
                                     s1 of wild2 { Unit# ds5 ->
                              (# ds5, GHC.Tuple.() #) })
                               `cast`
                             (Sym (GHC.Types.N:IO[0] <()>_R))
                             ds1 of ds5 { (#,#) ipv ipv1 ->
                      case GHC.Prim.readInt32OffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 32#)
                             0#
                             ipv of ds6 { (#,#) ipv2 ipv3 ->
                      case ipv1 of dt { GHC.ForeignPtr.ForeignPtr dt1 dt2 ->
                      case (Language.R.HExp.Complex
                              @ GHC.Prim.Any
                              @ 'Foreign.R.Type.Complex
                              @~ <'Foreign.R.Type.Complex>_N
                              dt1
                              dt2
                              0#
                              (GHC.Prim.narrow32Int# ipv3))
                             `cast`
                           (Trans
                                (UnsafeCo representational (Language.R.HExp.HExp
                                                              GHC.Prim.Any
                                                              'Foreign.R.Type.Complex) (GHC.Types.IO
                                                                                          (Language.R.HExp.HExp
                                                                                             s a)))
                                (Trans
                                     (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                     ((GHC.Prim.State#
                                         (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                      ->_R ((#,#)
                                              <'GHC.Types.VoidRep>_R
                                              <'GHC.Types.PtrRepLifted>_R
                                              (GHC.Prim.State#
                                                 (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                              <Language.R.HExp.HExp s a>_R)_R)))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds7 { (#,#) ipv4 ipv5 ->
                      case ipv5 of wild2 {
                        DEFAULT -> $j1 GHC.Prim.void#
                        Language.R.HExp.Char cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Logical cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Int cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Real cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Complex cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.String cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Vector cobox0 dt4 dt5 dt6 dt7 dt8
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt5
                             dt6
                             dt7
                             dt8
                        Language.R.HExp.Expr cobox0 dt4 dt5 dt6 dt7 dt8
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt5
                             dt6
                             dt7
                             dt8 } } } } } }
                   16#
                   -> case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_PreserveObject GHC.Prim.Addr#
                                                                                                   -> GHC.Prim.State#
                                                                                                        GHC.Prim.RealWorld
                                                                                                   -> (# GHC.Prim.State#
                                                                                                           GHC.Prim.RealWorld #)}
                             ww1
                             GHC.Prim.realWorld# of wild1 { Unit# ds1 ->
                      case GHC.ForeignPtr.$wnewConcForeignPtr
                             @ ()
                             ww1
                             (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_ReleaseObject GHC.Prim.Addr#
                                                                                                          -> GHC.Prim.State#
                                                                                                               GHC.Prim.RealWorld
                                                                                                          -> (# GHC.Prim.State#
                                                                                                                  GHC.Prim.RealWorld #)}
                                     ww1
                                     s1 of wild2 { Unit# ds5 ->
                              (# ds5, GHC.Tuple.() #) })
                               `cast`
                             (Sym (GHC.Types.N:IO[0] <()>_R))
                             ds1 of ds5 { (#,#) ipv ipv1 ->
                      case GHC.Prim.readInt32OffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 32#)
                             0#
                             ipv of ds6 { (#,#) ipv2 ipv3 ->
                      case ipv1 of dt { GHC.ForeignPtr.ForeignPtr dt1 dt2 ->
                      case (Language.R.HExp.String
                              @ GHC.Prim.Any
                              @ 'Foreign.R.Type.String
                              @~ <'Foreign.R.Type.String>_N
                              dt1
                              dt2
                              0#
                              (GHC.Prim.narrow32Int# ipv3))
                             `cast`
                           (Trans
                                (UnsafeCo representational (Language.R.HExp.HExp
                                                              GHC.Prim.Any
                                                              'Foreign.R.Type.String) (GHC.Types.IO
                                                                                         (Language.R.HExp.HExp
                                                                                            s a)))
                                (Trans
                                     (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                     ((GHC.Prim.State#
                                         (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                      ->_R ((#,#)
                                              <'GHC.Types.VoidRep>_R
                                              <'GHC.Types.PtrRepLifted>_R
                                              (GHC.Prim.State#
                                                 (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                              <Language.R.HExp.HExp s a>_R)_R)))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds7 { (#,#) ipv4 ipv5 ->
                      case ipv5 of wild2 {
                        DEFAULT -> $j1 GHC.Prim.void#
                        Language.R.HExp.Char cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Logical cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Int cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Real cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Complex cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.String cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Vector cobox0 dt4 dt5 dt6 dt7 dt8
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt5
                             dt6
                             dt7
                             dt8
                        Language.R.HExp.Expr cobox0 dt4 dt5 dt6 dt7 dt8
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt5
                             dt6
                             dt7
                             dt8 } } } } } }
                   17#
                   -> case GHC.Exception.throw
                             @ Internal.Error.Failure
                             @ (GHC.Types.IO (Language.R.HExp.HExp s a))
                             Internal.Error.$fExceptionFailure
                             (Internal.Error.Failure
                                (GHC.CString.unpackAppendCString#
                                   "peekHExp: "#
                                   (case {__pkg_ccall inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs ghczuwrapperZC23ZCinlinezmrzm0zi9zi0zi2zmGXEXrsxC4K8OTVxhqWwxsZCForeignziRziInternalZCTYPEOF GHC.Prim.Addr#
                                                                                                                                                                                          -> GHC.Prim.State#
                                                                                                                                                                                               GHC.Prim.RealWorld
                                                                                                                                                                                          -> (# GHC.Prim.State#
                                                                                                                                                                                                  GHC.Prim.RealWorld,
                                                                                                                                                                                                GHC.Prim.Int# #)}
                                           ww1
                                           GHC.Prim.realWorld# of wild1 { (#,#) ds1 ds5 ->
                                    Foreign.R.Type.$w$cshowsPrec
                                      (Foreign.R.Type.$w$ctoEnum (GHC.Prim.narrow32Int# ds5))
                                      (GHC.Types.[] @ GHC.Types.Char) }))
                                Internal.Error.unimplemented1)
                      ret_ty (Data.Vector.SEXP.Vector
                                s a (Data.Vector.SEXP.Base.ElemRep s a))
                      of {}
                   18# -> $j GHC.Prim.void#
                   19#
                   -> case GHC.Prim.readInt32OffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 36#)
                             0#
                             GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_PreserveObject GHC.Prim.Addr#
                                                                                                   -> GHC.Prim.State#
                                                                                                        GHC.Prim.RealWorld
                                                                                                   -> (# GHC.Prim.State#
                                                                                                           GHC.Prim.RealWorld #)}
                             ww1
                             GHC.Prim.realWorld# of wild1 { Unit# ds5 ->
                      case GHC.ForeignPtr.$wnewConcForeignPtr
                             @ ()
                             ww1
                             (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_ReleaseObject GHC.Prim.Addr#
                                                                                                          -> GHC.Prim.State#
                                                                                                               GHC.Prim.RealWorld
                                                                                                          -> (# GHC.Prim.State#
                                                                                                                  GHC.Prim.RealWorld #)}
                                     ww1
                                     s1 of wild2 { Unit# ds6 ->
                              (# ds6, GHC.Tuple.() #) })
                               `cast`
                             (Sym (GHC.Types.N:IO[0] <()>_R))
                             ds5 of ds6 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.readInt32OffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 32#)
                             0#
                             ipv2 of ds7 { (#,#) ipv4 ipv5 ->
                      case ipv3 of dt { GHC.ForeignPtr.ForeignPtr dt1 dt2 ->
                      Data.Vector.SEXP.Vector
                        @ s
                        @ a
                        @ (Data.Vector.SEXP.Base.ElemRep s a)
                        dt1
                        dt2
                        0#
                        (GHC.Prim.narrow32Int# ipv5) } } } } }
                   20#
                   -> case GHC.Prim.readInt32OffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 36#)
                             0#
                             GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_PreserveObject GHC.Prim.Addr#
                                                                                                   -> GHC.Prim.State#
                                                                                                        GHC.Prim.RealWorld
                                                                                                   -> (# GHC.Prim.State#
                                                                                                           GHC.Prim.RealWorld #)}
                             ww1
                             GHC.Prim.realWorld# of wild1 { Unit# ds5 ->
                      case GHC.ForeignPtr.$wnewConcForeignPtr
                             @ ()
                             ww1
                             (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_ReleaseObject GHC.Prim.Addr#
                                                                                                          -> GHC.Prim.State#
                                                                                                               GHC.Prim.RealWorld
                                                                                                          -> (# GHC.Prim.State#
                                                                                                                  GHC.Prim.RealWorld #)}
                                     ww1
                                     s1 of wild2 { Unit# ds6 ->
                              (# ds6, GHC.Tuple.() #) })
                               `cast`
                             (Sym (GHC.Types.N:IO[0] <()>_R))
                             ds5 of ds6 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.readInt32OffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 32#)
                             0#
                             ipv2 of ds7 { (#,#) ipv4 ipv5 ->
                      case ipv3 of dt { GHC.ForeignPtr.ForeignPtr dt1 dt2 ->
                      Data.Vector.SEXP.Vector
                        @ s
                        @ a
                        @ (Data.Vector.SEXP.Base.ElemRep s a)
                        dt1
                        dt2
                        0#
                        (GHC.Prim.narrow32Int# ipv5) } } } } }
                   21# -> $j1 GHC.Prim.void#
                   22#
                   -> case GHC.Prim.readAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 32#)
                             0#
                             GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                      case GHC.Prim.readAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 40#)
                             0#
                             ipv of ds5 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.readAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 48#)
                             0#
                             ipv2 of ds6 { (#,#) ipv4 ipv5 ->
                      $j1 GHC.Prim.void# } } }
                   23#
                   -> case GHC.Prim.readAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 40#)
                             0#
                             GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                      case GHC.Prim.readAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 40#)
                             1#
                             ipv of ds5 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.readAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 40#)
                             2#
                             ipv2 of ds6 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 40#)
                             3#
                             ipv4 of ds7 { (#,#) ipv6 ipv7 ->
                      $j1 GHC.Prim.void# } } } }
                   24#
                   -> case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_PreserveObject GHC.Prim.Addr#
                                                                                                   -> GHC.Prim.State#
                                                                                                        GHC.Prim.RealWorld
                                                                                                   -> (# GHC.Prim.State#
                                                                                                           GHC.Prim.RealWorld #)}
                             ww1
                             GHC.Prim.realWorld# of wild1 { Unit# ds1 ->
                      case GHC.ForeignPtr.$wnewConcForeignPtr
                             @ ()
                             ww1
                             (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs R_ReleaseObject GHC.Prim.Addr#
                                                                                                          -> GHC.Prim.State#
                                                                                                               GHC.Prim.RealWorld
                                                                                                          -> (# GHC.Prim.State#
                                                                                                                  GHC.Prim.RealWorld #)}
                                     ww1
                                     s1 of wild2 { Unit# ds5 ->
                              (# ds5, GHC.Tuple.() #) })
                               `cast`
                             (Sym (GHC.Types.N:IO[0] <()>_R))
                             ds1 of ds5 { (#,#) ipv ipv1 ->
                      case GHC.Prim.readInt32OffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 32#)
                             0#
                             ipv of ds6 { (#,#) ipv2 ipv3 ->
                      case ipv1 of dt { GHC.ForeignPtr.ForeignPtr dt1 dt2 ->
                      case (Language.R.HExp.Raw
                              @ GHC.Prim.Any
                              @ 'Foreign.R.Type.Raw
                              @~ <'Foreign.R.Type.Raw>_N
                              dt1
                              dt2
                              0#
                              (GHC.Prim.narrow32Int# ipv3))
                             `cast`
                           (Trans
                                (UnsafeCo representational (Language.R.HExp.HExp
                                                              GHC.Prim.Any
                                                              'Foreign.R.Type.Raw) (GHC.Types.IO
                                                                                      (Language.R.HExp.HExp
                                                                                         s a)))
                                (Trans
                                     (GHC.Types.N:IO[0] <Language.R.HExp.HExp s a>_R)
                                     ((GHC.Prim.State#
                                         (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                      ->_R ((#,#)
                                              <'GHC.Types.VoidRep>_R
                                              <'GHC.Types.PtrRepLifted>_R
                                              (GHC.Prim.State#
                                                 (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R
                                              <Language.R.HExp.HExp s a>_R)_R)))
                             GHC.Prim.realWorld#
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds7 { (#,#) ipv4 ipv5 ->
                      case ipv5 of wild2 {
                        DEFAULT -> $j1 GHC.Prim.void#
                        Language.R.HExp.Char cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Logical cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Int cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Real cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Complex cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.String cobox0 dt4 dt5 dt6 dt7
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt4
                             dt5
                             dt6
                             dt7
                        Language.R.HExp.Vector cobox0 dt4 dt5 dt6 dt7 dt8
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt5
                             dt6
                             dt7
                             dt8
                        Language.R.HExp.Expr cobox0 dt4 dt5 dt6 dt7 dt8
                        -> Data.Vector.SEXP.Vector
                             @ s
                             @ a
                             @ (Data.Vector.SEXP.Base.ElemRep s a)
                             dt5
                             dt6
                             dt7
                             dt8 } } } } } }
                   25#
                   -> case GHC.Prim.readAddrOffAddr#
                             @ GHC.Prim.RealWorld
                             (GHC.Prim.plusAddr# ww1 48#)
                             0#
                             GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                      $j1 GHC.Prim.void# }
                   30# -> $j GHC.Prim.void#
                   31# -> $j GHC.Prim.void#
                   99# -> $j GHC.Prim.void# } } }) -}
c973dbec74b614b5fddef20fbdabf8bf
  vector1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "vector"#) -}
instance GHC.Classes.Eq [Language.R.HExp.HExp]
  = Language.R.HExp.$fEqHExp
instance Foreign.Storable.Storable [Language.R.HExp.HExp]
  = Language.R.HExp.$fStorableHExp
instance Data.Type.Equality.TestEquality [Foreign.R.Type.SEXPTYPE,
                                          Language.R.HExp.E]
  = Language.R.HExp.$fTestEqualitySEXPTYPEE
instance Data.Type.Equality.TestEquality [Foreign.R.Type.SEXPTYPE,
                                          Language.R.HExp.HExp]
  = Language.R.HExp.$fTestEqualitySEXPTYPEHExp
"SPEC/Language.R.HExp $WClosure _ @ 'Any _" [ALWAYS] forall @ s
                                                            @ (b :: Foreign.R.Type.SEXPTYPE)
                                                            (dt :: Foreign.R.Type.IsPairList
                                                                     'Foreign.R.Type.Any)
  Language.R.HExp.$WClosure @ s @ 'Foreign.R.Type.Any @ b dt
  = Language.R.HExp.$fStorableHExp_$s$WClosure @ s @ b
"SPEC/Language.R.HExp $WEnv _ @ 'Any @ 'Any @ 'Any" [ALWAYS] forall @ s
                                                                    (dt :: 'Foreign.R.Type.Any
                                                                           Foreign.R.Constraints.:∈ '['Foreign.R.Type.Vector,
                                                                                                      'Foreign.R.Type.Nil])
                                                                    (dt1 :: 'Foreign.R.Type.Any
                                                                            Foreign.R.Constraints.:∈ '['Foreign.R.Type.Env,
                                                                                                       'Foreign.R.Type.Nil])
                                                                    (dt2 :: Foreign.R.Type.IsPairList
                                                                              'Foreign.R.Type.Any)
  Language.R.HExp.$WEnv @ s
                        @ 'Foreign.R.Type.Any
                        @ 'Foreign.R.Type.Any
                        @ 'Foreign.R.Type.Any
                        dt2
                        dt1
                        dt
  = Language.R.HExp.$fStorableHExp_$s$WEnv @ s
"SPEC/Language.R.HExp $WLang _ @ 'Any @ 'Any" [ALWAYS] forall @ s
                                                              (dt :: Foreign.R.Type.IsPairList
                                                                       'Foreign.R.Type.Any)
                                                              (dt1 :: Foreign.R.Type.IsExpression
                                                                        'Foreign.R.Type.Any)
  Language.R.HExp.$WLang @ s
                         @ 'Foreign.R.Type.Any
                         @ 'Foreign.R.Type.Any
                         dt1
                         dt
  = Language.R.HExp.$fStorableHExp_$s$WLang @ s
"SPEC/Language.R.HExp $WList _ @ 'Any @ 'Any _" [ALWAYS] forall @ s
                                                                @ (a :: Foreign.R.Type.SEXPTYPE)
                                                                (dt :: 'Foreign.R.Type.Any
                                                                       Foreign.R.Constraints.:∈ '['Foreign.R.Type.Symbol,
                                                                                                  'Foreign.R.Type.Nil])
                                                                (dt1 :: Foreign.R.Type.IsPairList
                                                                          'Foreign.R.Type.Any)
  Language.R.HExp.$WList @ s
                         @ 'Foreign.R.Type.Any
                         @ 'Foreign.R.Type.Any
                         @ a
                         dt1
                         dt
  = Language.R.HExp.$fStorableHExp_$s$WList @ s @ a
"SPEC/Language.R.HExp $WPromise _ @ 'Any @ 'Any _" [ALWAYS] forall @ s
                                                                   @ (a :: Foreign.R.Type.SEXPTYPE)
                                                                   (dt :: 'Foreign.R.Type.Any
                                                                          Foreign.R.Constraints.:∈ '['Foreign.R.Type.Env,
                                                                                                     'Foreign.R.Type.Nil])
                                                                   (dt1 :: Foreign.R.Type.IsExpression
                                                                             'Foreign.R.Type.Any)
  Language.R.HExp.$WPromise @ s
                            @ 'Foreign.R.Type.Any
                            @ 'Foreign.R.Type.Any
                            @ a
                            dt1
                            dt
  = Language.R.HExp.$fStorableHExp_$s$WPromise @ s @ a
"SPEC/Language.R.HExp $WSymbol _ @ 'Any _ _" [ALWAYS] forall @ s
                                                             @ (b :: Foreign.R.Type.SEXPTYPE)
                                                             @ (c :: Foreign.R.Type.SEXPTYPE)
                                                             (dt :: 'Foreign.R.Type.Any
                                                                    Foreign.R.Constraints.:∈ '['Foreign.R.Type.Char,
                                                                                               'Foreign.R.Type.Nil])
  Language.R.HExp.$WSymbol @ s @ 'Foreign.R.Type.Any @ b @ c dt
  = Language.R.HExp.$fStorableHExp_$s$WSymbol @ s @ b @ c
"SPEC/Language.R.HExp $WWeakRef _ @ 'Any @ 'Any @ 'Any _" [ALWAYS] forall @ s
                                                                          @ (b :: Foreign.R.Type.SEXPTYPE)
                                                                          (dt :: 'Foreign.R.Type.Any
                                                                                 Foreign.R.Constraints.:∈ '['Foreign.R.Type.WeakRef,
                                                                                                            'Foreign.R.Type.Nil])
                                                                          (dt1 :: 'Foreign.R.Type.Any
                                                                                  Foreign.R.Constraints.:∈ '['Foreign.R.Type.Closure,
                                                                                                             'Foreign.R.Type.Builtin,
                                                                                                             'Foreign.R.Type.Special,
                                                                                                             'Foreign.R.Type.Nil])
                                                                          (dt2 :: 'Foreign.R.Type.Any
                                                                                  Foreign.R.Constraints.:∈ '['Foreign.R.Type.Env,
                                                                                                             'Foreign.R.Type.ExtPtr,
                                                                                                             'Foreign.R.Type.Nil])
  Language.R.HExp.$WWeakRef @ s
                            @ 'Foreign.R.Type.Any
                            @ 'Foreign.R.Type.Any
                            @ 'Foreign.R.Type.Any
                            @ b
                            dt2
                            dt1
                            dt
  = Language.R.HExp.$fStorableHExp_$s$WWeakRef @ s @ b
"SPEC/Language.R.HExp $fEqComplex @ Double" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                       GHC.Types.Double)
  Data.Complex.$fEqComplex @ GHC.Types.Double $dEq
  = Language.R.HExp.$s$fEqComplex
"SPEC/Language.R.HExp $fEqComplex_$c/= @ Double" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                            GHC.Types.Double)
  Data.Complex.$fEqComplex_$c/= @ GHC.Types.Double $dEq
  = Language.R.HExp.$s$fEqComplex_$s$fEqComplex_$c/=
"SPEC/Language.R.HExp $fStorableComplex @ Double" [ALWAYS] forall ($dStorable :: Foreign.Storable.Storable
                                                                                   GHC.Types.Double)
  Data.Complex.$fStorableComplex @ GHC.Types.Double $dStorable
  = Language.R.HExp.$fStorableHExp_$s$fStorableComplex
"SPEC/Language.R.HExp $fStorableComplex_$calignment @ Double" [ALWAYS] forall ($dStorable :: Foreign.Storable.Storable
                                                                                               GHC.Types.Double)
  Data.Complex.$fStorableComplex_$calignment @ GHC.Types.Double
                                             $dStorable
  = Language.R.HExp.$fStorableHExp_$s$fStorableComplex_$calignment
"SPEC/Language.R.HExp $fStorableComplex_$csizeOf @ Double" [ALWAYS] forall ($dStorable :: Foreign.Storable.Storable
                                                                                            GHC.Types.Double)
  Data.Complex.$fStorableComplex_$csizeOf @ GHC.Types.Double
                                          $dStorable
  = Language.R.HExp.$fStorableHExp_$s$fStorableComplex_$csizeOf
"SPEC/Language.R.HExp <$> @ ((->) SEXP0) _ _" [ALWAYS] forall @ a
                                                              @ b
                                                              ($dFunctor :: GHC.Base.Functor
                                                                              ((->)
                                                                                 Foreign.R.Internal.SEXP0))
  Data.Functor.<$> @ ((->) Foreign.R.Internal.SEXP0)
                   @ a
                   @ b
                   $dFunctor
  = Language.R.HExp.$fStorableHExp_$s<$> @ a @ b
"SPEC/Language.R.HExp <$> @ IO _ _" [ALWAYS] forall @ a
                                                    @ b
                                                    ($dFunctor :: GHC.Base.Functor GHC.Types.IO)
  Data.Functor.<$> @ GHC.Types.IO @ a @ b $dFunctor
  = Language.R.HExp.$fStorableHExp_$s<$>1 @ a @ b
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

