
==================== FINAL INTERFACE ====================
2017-12-28 08:03:02.805693 UTC

interface inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs:Language.R.Literal 8002
  interface hash: 0072fbc7c86c6cd98137796177f3454e
  ABI hash: d409db939582610ed384d6b48d8c9b18
  export-list hash: 70daf7511b7775593a84716d3f1712d3
  orphan hash: ecb86d5d30552fe78460d678d77c7903
  flag hash: 52b7ac3eb6ea1a754f655b326b047ebb
  sig of: Nothing
  used TH splices: True
  where
exports:
  Language.R.Literal.dynSEXP
  Language.R.Literal.fromPairList
  Language.R.Literal.fromSomeSEXP
  Language.R.Literal.funToSEXP
  Language.R.Literal.mkProtectedSEXPVector
  Language.R.Literal.mkProtectedSEXPVectorIO
  Language.R.Literal.mkSEXP
  Language.R.Literal.mkSEXPVector
  Language.R.Literal.mkSEXPVectorIO
  Language.R.Literal.toPairList
  Language.R.Literal.Literal{Language.R.Literal.fromSEXP Language.R.Literal.mkSEXPIO}
module dependencies: Control.Memory.Region Control.Monad.R.Class
                     Control.Monad.R.Internal Data.Vector.SEXP Data.Vector.SEXP.Base
                     Data.Vector.SEXP.Mutable Data.Vector.SEXP.Mutable.Internal
                     Foreign.R Foreign.R.Constraints Foreign.R.Embedded
                     Foreign.R.EventLoop Foreign.R.Internal Foreign.R.Type
                     Internal.Error Language.R.Globals Language.R.HExp
                     Language.R.Instance Language.R.Internal [boot]
                     Language.R.Internal.FunWrappers Language.R.Internal.FunWrappers.TH
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-GsXqKN6o1X9jr0fF5qCVD
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      process-1.4.3.0@process-1.4.3.0
                      reflection-2.1.2@reflection-2.1.2-Bem12O1xFGSHr4C2Hyu1c4
                      safe-0.3.15@safe-0.3.15-2Yd45VWFfdcKqKyispOifY
                      setenv-0.1.1.3@setenv-0.1.1.3-8dEhk6JWvlmCmVyBammSpu
                      singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      syb-0.7@syb-0.7-4OKdCpwGutyB1rNRmoa0ya template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      th-desugar-1.6@th-desugar-1.6-4xe2xTMQQiAGUPVUAkAZhp
                      th-expand-syns-0.4.3.0@th-expand-syns-0.4.3.0-A2GRp9XTxmBCMfV7DnYdn0
                      th-lift-0.7.7@th-lift-0.7.7-JWI9Gh7wB0MC9Q5wqv5aoI
                      th-lift-instances-0.1.11@th-lift-instances-0.1.11-A7sWuFC2KLsFTBmLagoRSX
                      th-orphans-0.13.4@th-orphans-0.13.4-IGsCpZ5u2Ab1MvGd5biF2z
                      th-reify-many-0.1.8@th-reify-many-0.1.8-5ZNbfXxMl3y5DMJznTzmN9
                      transformers-0.5.2.0@transformers-0.5.2.0 unix-2.7.2.1@unix-2.7.2.1
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         reflection-2.1.2@reflection-2.1.2-Bem12O1xFGSHr4C2Hyu1c4:Data.Reflection
         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Decide
         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Prelude.Instances
         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.TypeLits
         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.TypeLits.Internal
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         syb-0.7@syb-0.7-4OKdCpwGutyB1rNRmoa0ya:Data.Generics.Instances
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         th-lift-0.7.7@th-lift-0.7.7-JWI9Gh7wB0MC9Q5wqv5aoI:Language.Haskell.TH.Lift
         th-lift-instances-0.1.11@th-lift-instances-0.1.11-A7sWuFC2KLsFTBmLagoRSX:Instances.TH.Lift
         th-orphans-0.13.4@th-orphans-0.13.4-IGsCpZ5u2Ab1MvGd5biF2z:Language.Haskell.TH.Instances
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs:Control.Memory.Region
                         inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs:Data.Vector.SEXP
                         inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs:Foreign.R.Type
                         inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs:Language.R.Instance
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Prelude.Bool
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Prelude.Eq
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Prelude.Instances
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Prelude.Num
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Prelude.Ord
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.Syntax
                         singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons.TypeLits.Internal
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         th-desugar-1.6@th-desugar-1.6-4xe2xTMQQiAGUPVUAkAZhp:Language.Haskell.TH.Desugar.Core
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Data.Complex ec864ed8b68bbdf9c6cffa700c3cfe8e
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:Data.Int 07f5a36c488acfe0ac32e81c7536b8ff
import  -/  base-4.9.1.0:Foreign b4bee334aade4f33021057fdecf4a495
import  -/  base-4.9.1.0:Foreign.C.String b924799565cbc1299cb1e113052a7304
import  -/  base-4.9.1.0:Foreign.Storable 085c8d7f42ceec1dbb4e818f06339b9d
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Foreign de3d96134515831e87168a99ec5c2e52
import  -/  base-4.9.1.0:GHC.IO.Encoding.UTF8 f6440a715bcff7bc7c96faebcd7b3f81
import  -/  base-4.9.1.0:GHC.IO.Unsafe 1c057c642b0e201f55a24585d3d94564
import  -/  base-4.9.1.0:GHC.Int e6f85fcab22769385fba2b5fce0acb40
import  -/  base-4.9.1.0:GHC.Ptr 427a6ad9312f04edb98e0f5b7c4e2596
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO.Unsafe 1e3c5b8dd8cf6850ae43cce967bb46cd
import  -/  deepseq-1.4.2.0@deepseq-1.4.2.0:Control.DeepSeq 3b9ddb93b8ec16cf9a98d6096b46c390
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  Control.Memory.Region 308182c83bf046edf073fad284bcd617
  exports: 0c21e32b92bdaf94d0d4d90814626648
  V 761191645162463b83c4dd72888da9ec
import  -/  Control.Monad.R.Class cad819d8a5243541d9a0f1421f7ef4d8
  exports: 7b258842783caee6f8995be87e582334
  MonadR 1f397b618ab35a4d9191d2514797ac03
  Region 9ddc10a1fcce4af410d9af5cec63780b
  acquire c97740e9eedd70c24248a6eb93268c15
  io 47b7fbff6ab092e9379deafe03b9e9eb
import  -/  Data.Vector.SEXP f3382934389ac09b3b6a3233ff740f5d
  exports: 1a9edc4c4b74d90c3be54c98c7ed5206
  Vector 5a4969675eb1cadbaf3eeb53aa5ed01a
  fromSEXP 50493310645b2a7af5a395440e6ae41e
  toList 5a4969675eb1cadbaf3eeb53aa5ed01a
  toSEXP 7842d096d1532389f72dc783995e6918
  toString 3c1356258193ba7b2c6e442674c652d8
import  -/  Data.Vector.SEXP.Base 4fee69f30bb73a3bab2a9c4037daa643
  ElemRep 8e4dd549ff2b82b8535f8cd92bb19531
  VECTOR 93c7fea9b59e1a69c8899e0c05cdaf3f
import  -/  Data.Vector.SEXP.Mutable 59c2ce6d13b7c9ceacbeeb67be8da248
  exports: b44b49b93a2463cf278cc6756978a50a
  fromSEXP 548292713b95129cf9394e7438c01070
  toSEXP de980db5b0c9ffbbb0166f2e6b55c36e
import  -/  Data.Vector.SEXP.Mutable.Internal 294a79ed9866077cadcc4d24a50cf544
  MVector 058ff4e1ccef46a392b9d8c04bf76ce0
import  -/  Foreign.R 76af03c75eee17c66f999e9a2952a2da
  exports: 48f78775472e7fa46d6f356ef53096ba
  CE_UTF8 74fbd07d237b8165f301b436052093d2
  SEXP0 12efc2d6507407c762763b432400a30a
  allocVector baae24e9e27a16a83e3d16cb75aa5f5d
  install 395c56c1b149ebf0c90df54649cce2c0
  mkCharCE 7a0513985c5e5d9d79765e4834818fd9
  protect da5d6af0b23aadb157f211119bb4a11b
  unprotect 1d53930f88b54905b7e5703f6cefc644
  withProtected c6d380aac0f4491df5a9e0d7bb15dac7
import  -/  Foreign.R.Internal 94b91017c41283795b0b9850baa548e1
  exports: c0d5408e19dcf48aa85ceb904e52646b
  SEXP fc0be32d064254795db93fc76b1941a7
  SEXP e854911eaf3995eafd7923a39be3730e
  SomeSEXP ac06eddac9c804dceae070cd71dda1a9
  SomeSEXP 2d223e0ee1874a597046c351c68c0d5d
  cast 501e93daec148bbca57637c7fcf43886
  release 5116a27e38d30bf46ba100a28ca95c3e
  somesexp 8c4a4dc73d79a8e61b277b88ce8fe44e
  unsafeCoerce 2e39492f3a025c453536013a0cfc7981
  unsafeRelease 9fd97ad066a257ca40faf80b46003d47
  unsafeSEXPToVectorPtr ad9529ee338bb707cc43d0da4de9d170
  unsexp 1573041870e0760e000ed172b72eb84f
import  -/  Foreign.R.Type 87886be580abef21e3eb082d49bd5e09
  exports: 4a9e8ba576dbff5e9a94102d7ea58a6b
  Any a734370b2cac1dac40b0e4feb41135b0
  Char 5a1ac22d2987bdd3eece5f743d2cb5f4
  Complex e3ab53f74c77296d0ba4be591701521d
  ExtPtr 47fbb737cdf190aa2f58d5acfa226e26
  Int 6bcba177d987d55800c18b81ba8743df
  IsVector 0143b1d3b569e92594aeca4f8bd230af
  Logical 7bdfc2078965c38226b1ce131bf680a9
  Logical 9963a440f8731b94f650595bd8b72193
  Raw d02f4414723e232e799f99e1614148a7
  Real 0c81d244b1d6437d5b712aeb06759a1e
  SSEXPTYPE 86bcbd3d4f0ba71e6665b69a8de66c05
  String dbce0f4ae053a2b4d564fb855017ab2a
import  -/  Internal.Error 4ff915c9ecc9112f8c436f5ab8665640
  exports: 1cf446c8d06e4ccec0c56e44b9f9480d
  failure efc8a89e7e01a2173cf015a15f491325
  impossible 8df2fc319c9948abcd37f19a34b88b54
  unimplemented 9f2583d00eb497be46bc091af16bd702
import  -/  Language.R.Globals 727a60bd96cf801e88bef214649657f2
  exports: b49c6114bd9b47465af7425ddde25637
  nilValue e96e7a0452e11fb5aa455cb6e7eb4b14
import  -/  Language.R.HExp 768ccdb4121f577443f4e30350c7e65e
  exports: 80720591874e38dd54d698f3391e09fb
  Char a3a122933adb75e30a27c18ac7746631
  Complex c66de90213b46aed593eb6a26d2f45ca
  Int f9d40049b60bc1a24eeca07999e9bbe3
  List 2b354d2a68ec37edda8223d693600ef6
  Logical 1fdbcbf26883f6f249032cc7f09f7cb0
  Nil 12c25135d9288d7c65560d015bde1dab
  Real fa0c5e1fa70e68d7c52fa04278d9dfcf
  String 819c6520aa71868de6883bbf72cacb25
  Symbol aac5ab673f6d9d1a7822bddc5b7fcb8f
  hexp 0f590453cd31bf45bb9500c240cbec0a
  unhexp 87f422bbaa2bfca911fc744ac53d22fa
import  -/  Language.R.Instance a0b299dbe1f879a75a4772ba281059aa
  exports: 4136f07a3f02476c9104c974aa60153a
  R 74115e3d17bc6506da54d03835c71928
  unsafeRunRegion ddd1b411860efaabd12cbe1c70b87418
import  -/  Language.R.Internal d9b874767c7b176e1c6b78d61a395719
  exports: c85048407525dc61515cf739c3e7bebc
  r1 491a0b9cc04b5533b70a344fb4348766
import  -/  Language.R.Internal.FunWrappers a5770d0b565c38cfe619495c17b14d24
  exports: de5f78bb06b33258370d280e6acb9a99
  wrap0 4a6016b4c39c1222ec99f87769b57df2
  wrap1 ff4273b1b718dab7894b1f472df24ff5
  wrap10 937b3ea37c4c0daa0d54000622a6bb6a
  wrap11 a05b679bd1489b9f259cc0a397123939
  wrap12 b906fe1faee801e261173477c88e312b
  wrap2 2cde28dff27f77905a44a3649a591b9b
  wrap3 ba79414a236bce9045fe78fbd1ec28da
  wrap4 368e4e7898cf461a1bee25dc5dfdf721
  wrap5 d5bfb172d573c009c45462ca33277abf
  wrap6 f9e3ab78d3fd064b699bc53e606e7e36
  wrap7 75a03c1afed82b8d30872ca81b1b7727
  wrap8 84111649a3891eaf3aea1b9b71f55bd4
  wrap9 778c48714384e5381a12e475a5e2e91f
import  -/  Language.R.Internal.FunWrappers.TH f287118cbdab5dbdcf22a9306234a586
  exports: e13e77a8f95b94d0740b7d488ac19b22
  thWrapperLiterals 1f49646a342876e0fda47aa349d3c70f
import  -/  singletons-2.2@singletons-2.2-F6aalBFPo1F9ebvy1Wkuj3:Data.Singletons 96f581fbb6b163dc76612f9ad2e8eb18
3ce0f279aeab0bb38c7251baf993600b
  $dmfromSEXP ::
    Language.R.Literal.Literal a ty =>
    forall s.
    (Foreign.R.Type.IsVector ty, Language.R.Literal.Literal [a] ty) =>
    Foreign.R.Internal.SEXP s ty -> a
  {- Arity: 4,
     Strictness: <L,A><L,A><S(LLC(S)),1*U(A,A,1*C1(U))><L,U>,
     Unfolding: InlineRule (0, True, False)
                (\ @ a
                   @ (ty :: Foreign.R.Type.SEXPTYPE)
                   ($dLiteral :: Language.R.Literal.Literal a ty)
                   @ s
                   ($d(%,%) :: Foreign.R.Type.IsVector ty)
                   ($dLiteral1 :: Language.R.Literal.Literal [a] ty)
                   (ds :: Foreign.R.Internal.SEXP s ty) ->
                 let {
                   fail5 :: GHC.Prim.Void# -> a {- Arity: 1 -}
                   = \ (ds1 :: GHC.Prim.Void#)[OneShot] ->
                     Internal.Error.failure
                       @ a
                       (GHC.Base.build
                          @ GHC.Types.Char
                          (\ @ b -> GHC.CString.unpackFoldrCString# @ b "fromSEXP"#))
                       (GHC.Base.build
                          @ GHC.Types.Char
                          (\ @ b ->
                           GHC.CString.unpackFoldrCString# @ b "Not a singleton vector."#))
                 } in
                 case Language.R.Literal.fromSEXP
                        @ [a]
                        @ ty
                        $dLiteral1
                        @ s
                        ds of wild {
                   [] -> fail5 GHC.Prim.void#
                   : x ds1
                   -> case ds1 of wild1 {
                        [] -> x : ipv ipv1 -> fail5 GHC.Prim.void# } }) -}
d6b02a463718b02fbd4277d69b2ad1fa
  $dmmkSEXPIO ::
    (Language.R.Literal.Literal a ty, Foreign.R.Type.IsVector ty,
     Language.R.Literal.Literal [a] ty) =>
    a
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP Control.Memory.Region.V ty)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><L,A><S(LC(S)L),1*U(A,1*C1(U),A)><L,U>,
     Unfolding: InlineRule (0, True, False)
                (\ @ a
                   @ (ty :: Foreign.R.Type.SEXPTYPE)
                   ($dLiteral :: Language.R.Literal.Literal a ty)
                   ($d(%,%) :: Foreign.R.Type.IsVector ty)
                   ($dLiteral1 :: Language.R.Literal.Literal [a] ty)
                   (x :: a) ->
                 Language.R.Literal.mkSEXPIO
                   @ [a]
                   @ ty
                   $dLiteral1
                   (GHC.Base.build
                      @ a
                      (\ @ a1 (c :: a -> a1 -> a1)[OneShot] (n :: a1)[OneShot] ->
                       c x n))) -}
cb2e1087f0fba98f3c036a1fd99f826f
  $fHFunWrap(->)(->) ::
    (Language.R.Literal.Literal a la,
     Language.R.Literal.HFunWrap b wb) =>
    Language.R.Literal.HFunWrap (a -> b) (Foreign.R.SEXP0 -> wb)
  DFunId
  {- Arity: 4,
     Strictness: <L,U(1*U,A,1*C1(U))><C(S),1*C1(U)><L,1*C1(U)><L,1*U(U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (2, False, True)
                Language.R.Literal.$fHFunWrap(->)(->)_$chFunWrap
                  `cast`
                (forall (a :: <*>_N) (la :: <Foreign.R.Type.SEXPTYPE>_N) (b :: <*>_N) (wb :: <*>_N).
                 <Language.R.Literal.Literal a la>_R
                 ->_R <Language.R.Literal.HFunWrap b wb>_R
                 ->_R Sym (Language.R.Literal.N:HFunWrap[0]) <a
                                                              -> b>_N <Foreign.R.SEXP0 -> wb>_N) -}
cb2e1087f0fba98f3c036a1fd99f826f
  $fHFunWrap(->)(->)_$chFunWrap ::
    (Language.R.Literal.Literal a la,
     Language.R.Literal.HFunWrap b wb) =>
    (a -> b) -> Foreign.R.SEXP0 -> wb
  {- Arity: 4,
     Strictness: <L,U(1*U,A,1*C1(U))><C(S),1*C1(U)><L,1*C1(U)><L,1*U(U)>,
     Unfolding: (\ @ a
                   @ (la :: Foreign.R.Type.SEXPTYPE)
                   @ b
                   @ wb
                   ($dLiteral :: Language.R.Literal.Literal a la)
                   ($dHFunWrap :: Language.R.Literal.HFunWrap b wb)
                   (eta :: a -> b)
                   (eta1 :: Foreign.R.SEXP0) ->
                 $dHFunWrap `cast` (Language.R.Literal.N:HFunWrap[0] <b>_N <wb>_N)
                   (case Language.R.Literal.fromSEXP
                           @ a
                           @ la
                           $dLiteral
                           @ GHC.Prim.Any
                           (case eta1
                                   `cast`
                                 (GHC.Ptr.Ptr
                                    <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                   GHC.Prim.Any
                                                                   GHC.Prim.Any>)_R of dt { GHC.Ptr.Ptr dt1 ->
                            case Foreign.R.Internal.$wunsafeCast
                                   @ GHC.Prim.Any
                                   @ la
                                   (Foreign.R.Type.$fSingKindSEXPTYPE_$cfromSing
                                      @ la
                                      (Language.R.Literal.$p1Literal @ a @ la $dLiteral)
                                        `cast`
                                      (Data.Singletons.N:SingI[0] <Foreign.R.Type.SEXPTYPE>_N <la>_N))
                                     `cast`
                                   (Sub (Foreign.R.Type.D:R:DemoteRepSEXPTYPE[0]))
                                   (Foreign.R.Internal.SomeSEXP
                                      @ GHC.Prim.Any
                                      @ GHC.Prim.Any
                                      dt1) of ww { DEFAULT ->
                            (GHC.Ptr.Ptr @ (Language.R.HExp.HExp GHC.Prim.Any la) ww)
                              `cast`
                            (Sym (Foreign.R.Internal.N:SEXP[0]
                                      <GHC.Prim.Any>_P <la>_P)) } }) of vx { DEFAULT ->
                    eta vx })) -}
cb2e1087f0fba98f3c036a1fd99f826f
  $fHFunWrapRIO ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a la) =>
    Language.R.Literal.HFunWrap
      (Language.R.Instance.R s a) (GHC.Types.IO Foreign.R.SEXP0)
  DFunId
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,C(H)><L,1*U(A,1*C1(C1(U(U,U))),A)><L,C(C1(U(U,U)))><S,U>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (2, False, True)
                Language.R.Literal.$fHFunWrapRIO_$chFunWrap
                  `cast`
                (forall (a :: <*>_N) (la :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R <Language.R.Literal.Literal a la>_R
                 ->_R Sym (Language.R.Literal.N:HFunWrap[0]) <Language.R.Instance.R
                                                                s a>_N <GHC.Types.IO
                                                                          Foreign.R.SEXP0>_N) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fHFunWrapRIO1 ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a la) =>
    Language.R.Instance.R s a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP0 #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,C(H)><L,1*U(A,1*C1(C1(U(U,U))),A)><L,C(C1(U(U,U)))><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   @ (la :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData a)
                   ($dLiteral :: Language.R.Literal.Literal a la)
                   (a1 :: Language.R.Instance.R s a)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Language.R.Instance.runRegion2
                        @ a
                        @ s
                        $dNFData
                        a1
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of vx { DEFAULT ->
                 case (Language.R.Literal.mkSEXPIO @ a @ la $dLiteral vx)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <Foreign.R.Internal.SEXP Control.Memory.Region.V la>_R)
                        ipv of ds { (#,#) ipv2 ipv3 ->
                 (# ipv2,
                    ipv3
                      `cast`
                    (Trans
                         (Foreign.R.Internal.N:SEXP[0] <Control.Memory.Region.V>_P <la>_P)
                         (GHC.Ptr.Ptr
                            <Language.R.HExp.HExp
                               Control.Memory.Region.V
                               la, Foreign.R.Internal.SEXPREC>)_R) #) } } }) -}
1317a7e54aa62d7a6c15ace5b9ed78b1
  $fHFunWrapRIO_$chFunWrap ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a la) =>
    Language.R.Instance.R s a -> GHC.Types.IO Foreign.R.SEXP0
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,C(H)><L,1*U(A,1*C1(C1(U(U,U))),A)><L,C(C1(U(U,U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fHFunWrapRIO1
                  `cast`
                (forall (a :: <*>_N) (la :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R <Language.R.Literal.Literal a la>_R
                 ->_R <Language.R.Instance.R s a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SEXP0>_R)) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr ::
    (Control.DeepSeq.NFData c, Language.R.Literal.Literal a a0,
     Language.R.Literal.Literal b b0,
     Language.R.Literal.Literal c c0) =>
    Language.R.Literal.Literal
      (a -> b -> Language.R.Instance.R s c) 'Foreign.R.Type.ExtPtr
  DFunId
  {- Arity: 4,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ c
                      @ a
                      @ (a0 :: Foreign.R.Type.SEXPTYPE)
                      @ b
                      @ (b0 :: Foreign.R.Type.SEXPTYPE)
                      @ (c0 :: Foreign.R.Type.SEXPTYPE)
                      @ s
                      ($dNFData :: Control.DeepSeq.NFData c)
                      ($dLiteral :: Language.R.Literal.Literal a a0)
                      ($dLiteral1 :: Language.R.Literal.Literal b b0)
                      ($dLiteral2 :: Language.R.Literal.Literal c c0).
                  @ (a -> b -> Language.R.Instance.R s c)
                  @ 'Foreign.R.Type.ExtPtr
                  (Language.R.Literal.$fLiteral(->)ExtPtr_$cp1Literal
                     @ c
                     @ a
                     @ a0
                     @ b
                     @ b0
                     @ c0
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2)
                  (Language.R.Literal.$fLiteral(->)ExtPtr_$cmkSEXPIO
                     @ c
                     @ a
                     @ a0
                     @ b
                     @ b0
                     @ c0
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2)
                  (Language.R.Literal.$fLiteral(->)ExtPtr_$cfromSEXP
                     @ c
                     @ a
                     @ a0
                     @ b
                     @ b0
                     @ c0
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr0 ::
    (Control.DeepSeq.NFData b, Language.R.Literal.Literal a a0,
     Language.R.Literal.Literal b b0) =>
    Language.R.Literal.Literal
      (a -> Language.R.Instance.R s b) 'Foreign.R.Type.ExtPtr
  DFunId
  {- Arity: 3,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ b
                      @ a
                      @ (a0 :: Foreign.R.Type.SEXPTYPE)
                      @ (b0 :: Foreign.R.Type.SEXPTYPE)
                      @ s
                      ($dNFData :: Control.DeepSeq.NFData b)
                      ($dLiteral :: Language.R.Literal.Literal a a0)
                      ($dLiteral1 :: Language.R.Literal.Literal b b0).
                  @ (a -> Language.R.Instance.R s b)
                  @ 'Foreign.R.Type.ExtPtr
                  (Language.R.Literal.$fLiteral(->)ExtPtr0_$cp1Literal
                     @ b
                     @ a
                     @ a0
                     @ b0
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1)
                  (Language.R.Literal.$fLiteral(->)ExtPtr0_$cmkSEXPIO
                     @ b
                     @ a
                     @ a0
                     @ b0
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1)
                  (Language.R.Literal.$fLiteral(->)ExtPtr0_$cfromSEXP
                     @ b
                     @ a
                     @ a0
                     @ b0
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr0_$cfromSEXP ::
    (Control.DeepSeq.NFData b, Language.R.Literal.Literal a a0,
     Language.R.Literal.Literal b b0) =>
    forall s1.
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.ExtPtr
    -> a -> Language.R.Instance.R s b
  {- Arity: 3, Strictness: <B,A><B,A><B,A>x,
     Unfolding: InlineRule (3, True, True)
                (\ @ b
                   @ a
                   @ (a0 :: Foreign.R.Type.SEXPTYPE)
                   @ (b0 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData b)
                   ($dLiteral :: Language.R.Literal.Literal a a0)
                   ($dLiteral1 :: Language.R.Literal.Literal b b0)
                   @ s1 ->
                 Language.R.Literal.$fLiteral(->)ExtPtr14 @ s @ b @ a @ s1) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr0_$cmkSEXPIO ::
    (Control.DeepSeq.NFData b, Language.R.Literal.Literal a a0,
     Language.R.Literal.Literal b b0) =>
    (a -> Language.R.Instance.R s b)
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.ExtPtr)
  {- Arity: 5,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)><L,C(C(C1(U(U,U))))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral(->)ExtPtr15
                  `cast`
                (forall (b :: <*>_N) (a :: <*>_N) (a0 :: <Foreign.R.Type.SEXPTYPE>_N) (b0 :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData b>_R
                 ->_R <Language.R.Literal.Literal a a0>_R
                 ->_R <Language.R.Literal.Literal b b0>_R
                 ->_R <a -> Language.R.Instance.R s b>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.ExtPtr>_R)) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr0_$cp1Literal ::
    (Control.DeepSeq.NFData b, Language.R.Literal.Literal a a0,
     Language.R.Literal.Literal b b0) =>
    Data.Singletons.SingI 'Foreign.R.Type.ExtPtr
  {- Arity: 3, Strictness: <L,A><L,A><L,A>m21,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral(->)ExtPtr16
                  `cast`
                (forall (b :: <*>_N) (a :: <*>_N) (a0 :: <Foreign.R.Type.SEXPTYPE>_N) (b0 :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData b>_R
                 ->_R <Language.R.Literal.Literal a a0>_R
                 ->_R <Language.R.Literal.Literal b b0>_R
                 ->_R Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.ExtPtr>_N) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr1 ::
    (Control.DeepSeq.NFData a0, Language.R.Literal.Literal a1 i0,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7, Language.R.Literal.Literal a9 i8,
     Language.R.Literal.Literal a10 i9,
     Language.R.Literal.Literal a11 i10,
     Language.R.Literal.Literal a12 i11,
     Language.R.Literal.Literal a0 i12) =>
    Language.R.Literal.Literal
      (a1
       -> a2
       -> a3
       -> a4
       -> a5
       -> a6
       -> a7
       -> a8
       -> a9
       -> a10
       -> a11
       -> a12
       -> Language.R.Instance.R s0 a0)
      'Foreign.R.Type.ExtPtr
  DFunId
  {- Arity: 14,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      @ a1
                      @ (i :: Foreign.R.Type.SEXPTYPE)
                      @ a2
                      @ (i1 :: Foreign.R.Type.SEXPTYPE)
                      @ a3
                      @ (i2 :: Foreign.R.Type.SEXPTYPE)
                      @ a4
                      @ (i3 :: Foreign.R.Type.SEXPTYPE)
                      @ a5
                      @ (i4 :: Foreign.R.Type.SEXPTYPE)
                      @ a6
                      @ (i5 :: Foreign.R.Type.SEXPTYPE)
                      @ a7
                      @ (i6 :: Foreign.R.Type.SEXPTYPE)
                      @ a8
                      @ (i7 :: Foreign.R.Type.SEXPTYPE)
                      @ a9
                      @ (i8 :: Foreign.R.Type.SEXPTYPE)
                      @ a10
                      @ (i9 :: Foreign.R.Type.SEXPTYPE)
                      @ a11
                      @ (i10 :: Foreign.R.Type.SEXPTYPE)
                      @ a12
                      @ (i11 :: Foreign.R.Type.SEXPTYPE)
                      @ (i12 :: Foreign.R.Type.SEXPTYPE)
                      @ s
                      ($dNFData :: Control.DeepSeq.NFData a)
                      ($dLiteral :: Language.R.Literal.Literal a1 i)
                      ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                      ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                      ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                      ($dLiteral4 :: Language.R.Literal.Literal a5 i4)
                      ($dLiteral5 :: Language.R.Literal.Literal a6 i5)
                      ($dLiteral6 :: Language.R.Literal.Literal a7 i6)
                      ($dLiteral7 :: Language.R.Literal.Literal a8 i7)
                      ($dLiteral8 :: Language.R.Literal.Literal a9 i8)
                      ($dLiteral9 :: Language.R.Literal.Literal a10 i9)
                      ($dLiteral10 :: Language.R.Literal.Literal a11 i10)
                      ($dLiteral11 :: Language.R.Literal.Literal a12 i11)
                      ($dLiteral12 :: Language.R.Literal.Literal a i12).
                  @ (a1
                     -> a2
                     -> a3
                     -> a4
                     -> a5
                     -> a6
                     -> a7
                     -> a8
                     -> a9
                     -> a10
                     -> a11
                     -> a12
                     -> Language.R.Instance.R s a)
                  @ 'Foreign.R.Type.ExtPtr
                  (Language.R.Literal.$fLiteral(->)ExtPtr1_$cp1Literal
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ a5
                     @ i4
                     @ a6
                     @ i5
                     @ a7
                     @ i6
                     @ a8
                     @ i7
                     @ a9
                     @ i8
                     @ a10
                     @ i9
                     @ a11
                     @ i10
                     @ a12
                     @ i11
                     @ i12
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4
                     $dLiteral5
                     $dLiteral6
                     $dLiteral7
                     $dLiteral8
                     $dLiteral9
                     $dLiteral10
                     $dLiteral11
                     $dLiteral12)
                  (Language.R.Literal.$fLiteral(->)ExtPtr1_$cmkSEXPIO
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ a5
                     @ i4
                     @ a6
                     @ i5
                     @ a7
                     @ i6
                     @ a8
                     @ i7
                     @ a9
                     @ i8
                     @ a10
                     @ i9
                     @ a11
                     @ i10
                     @ a12
                     @ i11
                     @ i12
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4
                     $dLiteral5
                     $dLiteral6
                     $dLiteral7
                     $dLiteral8
                     $dLiteral9
                     $dLiteral10
                     $dLiteral11
                     $dLiteral12)
                  (Language.R.Literal.$fLiteral(->)ExtPtr1_$cfromSEXP
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ a5
                     @ i4
                     @ a6
                     @ i5
                     @ a7
                     @ i6
                     @ a8
                     @ i7
                     @ a9
                     @ i8
                     @ a10
                     @ i9
                     @ a11
                     @ i10
                     @ a12
                     @ i11
                     @ i12
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4
                     $dLiteral5
                     $dLiteral6
                     $dLiteral7
                     $dLiteral8
                     $dLiteral9
                     $dLiteral10
                     $dLiteral11
                     $dLiteral12) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr10 ::
    (Control.DeepSeq.NFData a0, Language.R.Literal.Literal a1 i0,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a0 i3) =>
    Language.R.Literal.Literal
      (a1 -> a2 -> a3 -> Language.R.Instance.R s0 a0)
      'Foreign.R.Type.ExtPtr
  DFunId
  {- Arity: 5,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      @ a1
                      @ (i :: Foreign.R.Type.SEXPTYPE)
                      @ a2
                      @ (i1 :: Foreign.R.Type.SEXPTYPE)
                      @ a3
                      @ (i2 :: Foreign.R.Type.SEXPTYPE)
                      @ (i3 :: Foreign.R.Type.SEXPTYPE)
                      @ s
                      ($dNFData :: Control.DeepSeq.NFData a)
                      ($dLiteral :: Language.R.Literal.Literal a1 i)
                      ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                      ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                      ($dLiteral3 :: Language.R.Literal.Literal a i3).
                  @ (a1 -> a2 -> a3 -> Language.R.Instance.R s a)
                  @ 'Foreign.R.Type.ExtPtr
                  (Language.R.Literal.$fLiteral(->)ExtPtr10_$cp1Literal
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ i3
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3)
                  (Language.R.Literal.$fLiteral(->)ExtPtr10_$cmkSEXPIO
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ i3
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3)
                  (Language.R.Literal.$fLiteral(->)ExtPtr10_$cfromSEXP
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ i3
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr10_$cfromSEXP ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a i3) =>
    forall s1.
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.ExtPtr
    -> a1 -> a2 -> a3 -> Language.R.Instance.R s a
  {- Arity: 5, Strictness: <B,A><B,A><B,A><B,A><B,A>x,
     Unfolding: InlineRule (5, True, True)
                (\ @ a
                   @ a1
                   @ (i :: Foreign.R.Type.SEXPTYPE)
                   @ a2
                   @ (i1 :: Foreign.R.Type.SEXPTYPE)
                   @ a3
                   @ (i2 :: Foreign.R.Type.SEXPTYPE)
                   @ (i3 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData a)
                   ($dLiteral :: Language.R.Literal.Literal a1 i)
                   ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                   ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                   ($dLiteral3 :: Language.R.Literal.Literal a i3)
                   @ s1 ->
                 Language.R.Literal.$fLiteral(->)ExtPtr20
                   @ s
                   @ a
                   @ a3
                   @ a2
                   @ a1
                   @ s1) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr10_$cmkSEXPIO ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a i3) =>
    (a1 -> a2 -> a3 -> Language.R.Instance.R s a)
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.ExtPtr)
  {- Arity: 7,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)><L,C(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral(->)ExtPtr21
                  `cast`
                (forall (a :: <*>_N) (a1 :: <*>_N) (i :: <Foreign.R.Type.SEXPTYPE>_N) (a2 :: <*>_N) (i1 :: <Foreign.R.Type.SEXPTYPE>_N) (a3 :: <*>_N) (i2 :: <Foreign.R.Type.SEXPTYPE>_N) (i3 :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R <Language.R.Literal.Literal a1 i>_R
                 ->_R <Language.R.Literal.Literal a2 i1>_R
                 ->_R <Language.R.Literal.Literal a3 i2>_R
                 ->_R <Language.R.Literal.Literal a i3>_R
                 ->_R <a1 -> a2 -> a3 -> Language.R.Instance.R s a>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.ExtPtr>_R)) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr10_$cp1Literal ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a i3) =>
    Data.Singletons.SingI 'Foreign.R.Type.ExtPtr
  {- Arity: 5, Strictness: <L,A><L,A><L,A><L,A><L,A>m21,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral(->)ExtPtr22
                  `cast`
                (forall (a :: <*>_N) (a1 :: <*>_N) (i :: <Foreign.R.Type.SEXPTYPE>_N) (a2 :: <*>_N) (i1 :: <Foreign.R.Type.SEXPTYPE>_N) (a3 :: <*>_N) (i2 :: <Foreign.R.Type.SEXPTYPE>_N) (i3 :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R <Language.R.Literal.Literal a1 i>_R
                 ->_R <Language.R.Literal.Literal a2 i1>_R
                 ->_R <Language.R.Literal.Literal a3 i2>_R
                 ->_R <Language.R.Literal.Literal a i3>_R
                 ->_R Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.ExtPtr>_N) -}
b75cc3154977549bfd64571928cc5c30
  $fLiteral(->)ExtPtr11 ::
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.ExtPtr
    -> a -> b -> Language.R.Instance.R s c
  {- Strictness: x -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr12 ::
    (Control.DeepSeq.NFData c, Language.R.Literal.Literal a a0,
     Language.R.Literal.Literal b b0,
     Language.R.Literal.Literal c c0) =>
    (a -> b -> Language.R.Instance.R s c)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.ExtPtr #)
  {- Arity: 6,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)><L,C(U)><S,U>,
     Unfolding: (\ @ c
                   @ a
                   @ (a0 :: Foreign.R.Type.SEXPTYPE)
                   @ b
                   @ (b0 :: Foreign.R.Type.SEXPTYPE)
                   @ (c0 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData c)
                   ($dLiteral :: Language.R.Literal.Literal a a0)
                   ($dLiteral1 :: Language.R.Literal.Literal b b0)
                   ($dLiteral2 :: Language.R.Literal.Literal c c0)
                   (eta :: a -> b -> Language.R.Instance.R s c)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   lvl47 :: Data.Singletons.DemoteRep Foreign.R.Type.SEXPTYPE
                   = Foreign.R.Type.$fSingKindSEXPTYPE_$cfromSing
                       @ b0
                       (Language.R.Literal.$p1Literal @ b @ b0 $dLiteral1)
                         `cast`
                       (Data.Singletons.N:SingI[0] <Foreign.R.Type.SEXPTYPE>_N <b0>_N)
                 } in
                 let {
                   lvl48 :: Data.Singletons.DemoteRep Foreign.R.Type.SEXPTYPE
                   = Foreign.R.Type.$fSingKindSEXPTYPE_$cfromSing
                       @ a0
                       (Language.R.Literal.$p1Literal @ a @ a0 $dLiteral)
                         `cast`
                       (Data.Singletons.N:SingI[0] <Foreign.R.Type.SEXPTYPE>_N <a0>_N)
                 } in
                 case (Language.R.Internal.FunWrappers.wrap2
                         (\ (eta1 :: Foreign.R.SEXP0) ->
                          let {
                            eta2 :: b -> Language.R.Instance.R s c
                            = case Language.R.Literal.fromSEXP
                                     @ a
                                     @ a0
                                     $dLiteral
                                     @ GHC.Prim.Any
                                     (case eta1
                                             `cast`
                                           (GHC.Ptr.Ptr
                                              <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                             GHC.Prim.Any
                                                                             GHC.Prim.Any>)_R of dt { GHC.Ptr.Ptr dt1 ->
                                      case Foreign.R.Internal.$wunsafeCast
                                             @ GHC.Prim.Any
                                             @ a0
                                             lvl48
                                               `cast`
                                             (Sub (Foreign.R.Type.D:R:DemoteRepSEXPTYPE[0]))
                                             (Foreign.R.Internal.SomeSEXP
                                                @ GHC.Prim.Any
                                                @ GHC.Prim.Any
                                                dt1) of ww { DEFAULT ->
                                      (GHC.Ptr.Ptr @ (Language.R.HExp.HExp GHC.Prim.Any a0) ww)
                                        `cast`
                                      (Sym (Foreign.R.Internal.N:SEXP[0]
                                                <GHC.Prim.Any>_P <a0>_P)) } }) of vx { DEFAULT ->
                              eta vx }
                          } in
                          \ (eta3 :: Foreign.R.SEXP0)
                            (eta4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case Language.R.Instance.runRegion2
                                 @ c
                                 @ s
                                 $dNFData
                                 (case Language.R.Literal.fromSEXP
                                         @ b
                                         @ b0
                                         $dLiteral1
                                         @ GHC.Prim.Any
                                         (case eta3
                                                 `cast`
                                               (GHC.Ptr.Ptr
                                                  <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                                 GHC.Prim.Any
                                                                                 GHC.Prim.Any>)_R of dt { GHC.Ptr.Ptr dt1 ->
                                          case Foreign.R.Internal.$wunsafeCast
                                                 @ GHC.Prim.Any
                                                 @ b0
                                                 lvl47
                                                   `cast`
                                                 (Sub (Foreign.R.Type.D:R:DemoteRepSEXPTYPE[0]))
                                                 (Foreign.R.Internal.SomeSEXP
                                                    @ GHC.Prim.Any
                                                    @ GHC.Prim.Any
                                                    dt1) of ww { DEFAULT ->
                                          (GHC.Ptr.Ptr @ (Language.R.HExp.HExp GHC.Prim.Any b0) ww)
                                            `cast`
                                          (Sym (Foreign.R.Internal.N:SEXP[0]
                                                    <GHC.Prim.Any>_P
                                                    <b0>_P)) } }) of vx { DEFAULT ->
                                  eta2 vx })
                                 eta4 of ds1 { (#,#) ipv ipv1 ->
                          case ipv1 of vx { DEFAULT ->
                          case (Language.R.Literal.mkSEXPIO @ c @ c0 $dLiteral2 vx)
                                 `cast`
                               (GHC.Types.N:IO[0]
                                    <Foreign.R.Internal.SEXP Control.Memory.Region.V c0>_R)
                                 ipv of ds { (#,#) ipv2 ipv3 ->
                          (# ipv2,
                             ipv3
                               `cast`
                             (Trans
                                  (Foreign.R.Internal.N:SEXP[0] <Control.Memory.Region.V>_P <c0>_P)
                                  (GHC.Ptr.Ptr
                                     <Language.R.HExp.HExp
                                        Control.Memory.Region.V
                                        c0, Foreign.R.Internal.SEXPREC>)_R) #) } } })
                           `cast`
                         (<Foreign.R.SEXP0>_R
                          ->_R <Foreign.R.SEXP0>_R
                          ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.SEXP0>_R)))
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Ptr.FunPtr
                              (Foreign.R.SEXP0
                               -> Foreign.R.SEXP0 -> GHC.Types.IO Foreign.R.SEXP0)>_R)
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ds { GHC.Ptr.FunPtr ds2 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs funPtrToSEXP GHC.Prim.Addr#
                                                                                          -> GHC.Prim.State#
                                                                                               GHC.Prim.RealWorld
                                                                                          -> (# GHC.Prim.State#
                                                                                                  GHC.Prim.RealWorld,
                                                                                                GHC.Prim.Addr# #)}
                        ds2
                        ipv of wild { (#,#) ds3 ds4 ->
                 (# ds3,
                    GHC.Ptr.Ptr
                      @ (Language.R.HExp.HExp
                           Control.Memory.Region.V 'Foreign.R.Type.ExtPtr)
                      ds4 #)
                   `cast`
                 ((#,#)
                    <'GHC.Types.VoidRep>_R
                    <'GHC.Types.PtrRepLifted>_R
                    <GHC.Prim.State# GHC.Prim.RealWorld>_R
                    (Sym (Foreign.R.Internal.N:SEXP[0]
                              <Control.Memory.Region.V `cast` <GHC.Types.*>_N>_P
                              <'Foreign.R.Type.ExtPtr>_P)))_R } } }) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr13 ::
    (Control.DeepSeq.NFData c, Language.R.Literal.Literal a a0,
     Language.R.Literal.Literal b b0,
     Language.R.Literal.Literal c c0) =>
    Data.Singletons.Sing 'Foreign.R.Type.ExtPtr
  {- Arity: 4, Strictness: <L,A><L,A><L,A><L,A>m21,
     Unfolding: InlineRule (4, True, True)
                (\ @ c
                   @ a
                   @ (a0 :: Foreign.R.Type.SEXPTYPE)
                   @ b
                   @ (b0 :: Foreign.R.Type.SEXPTYPE)
                   @ (c0 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData c)
                   ($dLiteral :: Language.R.Literal.Literal a a0)
                   ($dLiteral1 :: Language.R.Literal.Literal b b0)
                   ($dLiteral2 :: Language.R.Literal.Literal c c0) ->
                 Foreign.R.Type.$fSingISEXPTYPEExtPtr_$s$WSExtPtr) -}
c0205e68235ecd4716514bc2079f1ba6
  $fLiteral(->)ExtPtr14 ::
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.ExtPtr
    -> a -> Language.R.Instance.R s b
  {- Strictness: x -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr15 ::
    (Control.DeepSeq.NFData b, Language.R.Literal.Literal a a0,
     Language.R.Literal.Literal b b0) =>
    (a -> Language.R.Instance.R s b)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.ExtPtr #)
  {- Arity: 5,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)><L,C(C(C1(U(U,U))))><S,U>,
     Unfolding: (\ @ b
                   @ a
                   @ (a0 :: Foreign.R.Type.SEXPTYPE)
                   @ (b0 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData b)
                   ($dLiteral :: Language.R.Literal.Literal a a0)
                   ($dLiteral1 :: Language.R.Literal.Literal b b0)
                   (eta :: a -> Language.R.Instance.R s b)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   lvl47 :: Data.Singletons.DemoteRep Foreign.R.Type.SEXPTYPE
                   = Foreign.R.Type.$fSingKindSEXPTYPE_$cfromSing
                       @ a0
                       (Language.R.Literal.$p1Literal @ a @ a0 $dLiteral)
                         `cast`
                       (Data.Singletons.N:SingI[0] <Foreign.R.Type.SEXPTYPE>_N <a0>_N)
                 } in
                 case (Language.R.Internal.FunWrappers.wrap1
                         (\ (eta1 :: Foreign.R.SEXP0)
                            (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case Language.R.Instance.runRegion2
                                 @ b
                                 @ s
                                 $dNFData
                                 (case Language.R.Literal.fromSEXP
                                         @ a
                                         @ a0
                                         $dLiteral
                                         @ GHC.Prim.Any
                                         (case eta1
                                                 `cast`
                                               (GHC.Ptr.Ptr
                                                  <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                                 GHC.Prim.Any
                                                                                 GHC.Prim.Any>)_R of dt { GHC.Ptr.Ptr dt1 ->
                                          case Foreign.R.Internal.$wunsafeCast
                                                 @ GHC.Prim.Any
                                                 @ a0
                                                 lvl47
                                                   `cast`
                                                 (Sub (Foreign.R.Type.D:R:DemoteRepSEXPTYPE[0]))
                                                 (Foreign.R.Internal.SomeSEXP
                                                    @ GHC.Prim.Any
                                                    @ GHC.Prim.Any
                                                    dt1) of ww { DEFAULT ->
                                          (GHC.Ptr.Ptr @ (Language.R.HExp.HExp GHC.Prim.Any a0) ww)
                                            `cast`
                                          (Sym (Foreign.R.Internal.N:SEXP[0]
                                                    <GHC.Prim.Any>_P
                                                    <a0>_P)) } }) of vx { DEFAULT ->
                                  eta vx })
                                 eta2 of ds1 { (#,#) ipv ipv1 ->
                          case ipv1 of vx { DEFAULT ->
                          case (Language.R.Literal.mkSEXPIO @ b @ b0 $dLiteral1 vx)
                                 `cast`
                               (GHC.Types.N:IO[0]
                                    <Foreign.R.Internal.SEXP Control.Memory.Region.V b0>_R)
                                 ipv of ds { (#,#) ipv2 ipv3 ->
                          (# ipv2,
                             ipv3
                               `cast`
                             (Trans
                                  (Foreign.R.Internal.N:SEXP[0] <Control.Memory.Region.V>_P <b0>_P)
                                  (GHC.Ptr.Ptr
                                     <Language.R.HExp.HExp
                                        Control.Memory.Region.V
                                        b0, Foreign.R.Internal.SEXPREC>)_R) #) } } })
                           `cast`
                         (<Foreign.R.SEXP0>_R
                          ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.SEXP0>_R)))
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Ptr.FunPtr
                              (Foreign.R.SEXP0 -> GHC.Types.IO Foreign.R.SEXP0)>_R)
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ds { GHC.Ptr.FunPtr ds2 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs funPtrToSEXP GHC.Prim.Addr#
                                                                                          -> GHC.Prim.State#
                                                                                               GHC.Prim.RealWorld
                                                                                          -> (# GHC.Prim.State#
                                                                                                  GHC.Prim.RealWorld,
                                                                                                GHC.Prim.Addr# #)}
                        ds2
                        ipv of wild { (#,#) ds3 ds4 ->
                 (# ds3,
                    GHC.Ptr.Ptr
                      @ (Language.R.HExp.HExp
                           Control.Memory.Region.V 'Foreign.R.Type.ExtPtr)
                      ds4 #)
                   `cast`
                 ((#,#)
                    <'GHC.Types.VoidRep>_R
                    <'GHC.Types.PtrRepLifted>_R
                    <GHC.Prim.State# GHC.Prim.RealWorld>_R
                    (Sym (Foreign.R.Internal.N:SEXP[0]
                              <Control.Memory.Region.V `cast` <GHC.Types.*>_N>_P
                              <'Foreign.R.Type.ExtPtr>_P)))_R } } }) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr16 ::
    (Control.DeepSeq.NFData b, Language.R.Literal.Literal a a0,
     Language.R.Literal.Literal b b0) =>
    Data.Singletons.Sing 'Foreign.R.Type.ExtPtr
  {- Arity: 3, Strictness: <L,A><L,A><L,A>m21,
     Unfolding: InlineRule (3, True, True)
                (\ @ b
                   @ a
                   @ (a0 :: Foreign.R.Type.SEXPTYPE)
                   @ (b0 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData b)
                   ($dLiteral :: Language.R.Literal.Literal a a0)
                   ($dLiteral1 :: Language.R.Literal.Literal b b0) ->
                 Foreign.R.Type.$fSingISEXPTYPEExtPtr_$s$WSExtPtr) -}
335d8de3394b629f168340b81f4c9777
  $fLiteral(->)ExtPtr17 ::
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.ExtPtr
    -> a12
    -> a11
    -> a10
    -> a9
    -> a8
    -> a7
    -> a6
    -> a5
    -> a4
    -> a3
    -> a2
    -> a1
    -> Language.R.Instance.R s a
  {- Strictness: x -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr18 ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7, Language.R.Literal.Literal a9 i8,
     Language.R.Literal.Literal a10 i9,
     Language.R.Literal.Literal a11 i10,
     Language.R.Literal.Literal a12 i11,
     Language.R.Literal.Literal a i12) =>
    (a1
     -> a2
     -> a3
     -> a4
     -> a5
     -> a6
     -> a7
     -> a8
     -> a9
     -> a10
     -> a11
     -> a12
     -> Language.R.Instance.R s a)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.ExtPtr #)
  {- Arity: 16,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)><L,C(U)><S,U> -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr19 ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7, Language.R.Literal.Literal a9 i8,
     Language.R.Literal.Literal a10 i9,
     Language.R.Literal.Literal a11 i10,
     Language.R.Literal.Literal a12 i11,
     Language.R.Literal.Literal a i12) =>
    Data.Singletons.Sing 'Foreign.R.Type.ExtPtr
  {- Arity: 14,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A>m21,
     Unfolding: InlineRule (14, True, True)
                (\ @ a
                   @ a1
                   @ (i :: Foreign.R.Type.SEXPTYPE)
                   @ a2
                   @ (i1 :: Foreign.R.Type.SEXPTYPE)
                   @ a3
                   @ (i2 :: Foreign.R.Type.SEXPTYPE)
                   @ a4
                   @ (i3 :: Foreign.R.Type.SEXPTYPE)
                   @ a5
                   @ (i4 :: Foreign.R.Type.SEXPTYPE)
                   @ a6
                   @ (i5 :: Foreign.R.Type.SEXPTYPE)
                   @ a7
                   @ (i6 :: Foreign.R.Type.SEXPTYPE)
                   @ a8
                   @ (i7 :: Foreign.R.Type.SEXPTYPE)
                   @ a9
                   @ (i8 :: Foreign.R.Type.SEXPTYPE)
                   @ a10
                   @ (i9 :: Foreign.R.Type.SEXPTYPE)
                   @ a11
                   @ (i10 :: Foreign.R.Type.SEXPTYPE)
                   @ a12
                   @ (i11 :: Foreign.R.Type.SEXPTYPE)
                   @ (i12 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData a)
                   ($dLiteral :: Language.R.Literal.Literal a1 i)
                   ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                   ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                   ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                   ($dLiteral4 :: Language.R.Literal.Literal a5 i4)
                   ($dLiteral5 :: Language.R.Literal.Literal a6 i5)
                   ($dLiteral6 :: Language.R.Literal.Literal a7 i6)
                   ($dLiteral7 :: Language.R.Literal.Literal a8 i7)
                   ($dLiteral8 :: Language.R.Literal.Literal a9 i8)
                   ($dLiteral9 :: Language.R.Literal.Literal a10 i9)
                   ($dLiteral10 :: Language.R.Literal.Literal a11 i10)
                   ($dLiteral11 :: Language.R.Literal.Literal a12 i11)
                   ($dLiteral12 :: Language.R.Literal.Literal a i12) ->
                 Foreign.R.Type.$fSingISEXPTYPEExtPtr_$s$WSExtPtr) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr1_$cfromSEXP ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7, Language.R.Literal.Literal a9 i8,
     Language.R.Literal.Literal a10 i9,
     Language.R.Literal.Literal a11 i10,
     Language.R.Literal.Literal a12 i11,
     Language.R.Literal.Literal a i12) =>
    forall s1.
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.ExtPtr
    -> a1
    -> a2
    -> a3
    -> a4
    -> a5
    -> a6
    -> a7
    -> a8
    -> a9
    -> a10
    -> a11
    -> a12
    -> Language.R.Instance.R s a
  {- Arity: 14,
     Strictness: <B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A>x,
     Unfolding: InlineRule (14, True, True)
                (\ @ a
                   @ a1
                   @ (i :: Foreign.R.Type.SEXPTYPE)
                   @ a2
                   @ (i1 :: Foreign.R.Type.SEXPTYPE)
                   @ a3
                   @ (i2 :: Foreign.R.Type.SEXPTYPE)
                   @ a4
                   @ (i3 :: Foreign.R.Type.SEXPTYPE)
                   @ a5
                   @ (i4 :: Foreign.R.Type.SEXPTYPE)
                   @ a6
                   @ (i5 :: Foreign.R.Type.SEXPTYPE)
                   @ a7
                   @ (i6 :: Foreign.R.Type.SEXPTYPE)
                   @ a8
                   @ (i7 :: Foreign.R.Type.SEXPTYPE)
                   @ a9
                   @ (i8 :: Foreign.R.Type.SEXPTYPE)
                   @ a10
                   @ (i9 :: Foreign.R.Type.SEXPTYPE)
                   @ a11
                   @ (i10 :: Foreign.R.Type.SEXPTYPE)
                   @ a12
                   @ (i11 :: Foreign.R.Type.SEXPTYPE)
                   @ (i12 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData a)
                   ($dLiteral :: Language.R.Literal.Literal a1 i)
                   ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                   ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                   ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                   ($dLiteral4 :: Language.R.Literal.Literal a5 i4)
                   ($dLiteral5 :: Language.R.Literal.Literal a6 i5)
                   ($dLiteral6 :: Language.R.Literal.Literal a7 i6)
                   ($dLiteral7 :: Language.R.Literal.Literal a8 i7)
                   ($dLiteral8 :: Language.R.Literal.Literal a9 i8)
                   ($dLiteral9 :: Language.R.Literal.Literal a10 i9)
                   ($dLiteral10 :: Language.R.Literal.Literal a11 i10)
                   ($dLiteral11 :: Language.R.Literal.Literal a12 i11)
                   ($dLiteral12 :: Language.R.Literal.Literal a i12)
                   @ s1 ->
                 Language.R.Literal.$fLiteral(->)ExtPtr17
                   @ s
                   @ a
                   @ a12
                   @ a11
                   @ a10
                   @ a9
                   @ a8
                   @ a7
                   @ a6
                   @ a5
                   @ a4
                   @ a3
                   @ a2
                   @ a1
                   @ s1) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr1_$cmkSEXPIO ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7, Language.R.Literal.Literal a9 i8,
     Language.R.Literal.Literal a10 i9,
     Language.R.Literal.Literal a11 i10,
     Language.R.Literal.Literal a12 i11,
     Language.R.Literal.Literal a i12) =>
    (a1
     -> a2
     -> a3
     -> a4
     -> a5
     -> a6
     -> a7
     -> a8
     -> a9
     -> a10
     -> a11
     -> a12
     -> Language.R.Instance.R s a)
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.ExtPtr)
  {- Arity: 16,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)><L,C(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral(->)ExtPtr18
                  `cast`
                (forall (a :: <*>_N) (a1 :: <*>_N) (i :: <Foreign.R.Type.SEXPTYPE>_N) (a2 :: <*>_N) (i1 :: <Foreign.R.Type.SEXPTYPE>_N) (a3 :: <*>_N) (i2 :: <Foreign.R.Type.SEXPTYPE>_N) (a4 :: <*>_N) (i3 :: <Foreign.R.Type.SEXPTYPE>_N) (a5 :: <*>_N) (i4 :: <Foreign.R.Type.SEXPTYPE>_N) (a6 :: <*>_N) (i5 :: <Foreign.R.Type.SEXPTYPE>_N) (a7 :: <*>_N) (i6 :: <Foreign.R.Type.SEXPTYPE>_N) (a8 :: <*>_N) (i7 :: <Foreign.R.Type.SEXPTYPE>_N) (a9 :: <*>_N) (i8 :: <Foreign.R.Type.SEXPTYPE>_N) (a10 :: <*>_N) (i9 :: <Foreign.R.Type.SEXPTYPE>_N) (a11 :: <*>_N) (i10 :: <Foreign.R.Type.SEXPTYPE>_N) (a12 :: <*>_N) (i11 :: <Foreign.R.Type.SEXPTYPE>_N) (i12 :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R <Language.R.Literal.Literal a1 i>_R
                 ->_R <Language.R.Literal.Literal a2 i1>_R
                 ->_R <Language.R.Literal.Literal a3 i2>_R
                 ->_R <Language.R.Literal.Literal a4 i3>_R
                 ->_R <Language.R.Literal.Literal a5 i4>_R
                 ->_R <Language.R.Literal.Literal a6 i5>_R
                 ->_R <Language.R.Literal.Literal a7 i6>_R
                 ->_R <Language.R.Literal.Literal a8 i7>_R
                 ->_R <Language.R.Literal.Literal a9 i8>_R
                 ->_R <Language.R.Literal.Literal a10 i9>_R
                 ->_R <Language.R.Literal.Literal a11 i10>_R
                 ->_R <Language.R.Literal.Literal a12 i11>_R
                 ->_R <Language.R.Literal.Literal a i12>_R
                 ->_R <a1
                       -> a2
                       -> a3
                       -> a4
                       -> a5
                       -> a6
                       -> a7
                       -> a8
                       -> a9
                       -> a10
                       -> a11
                       -> a12
                       -> Language.R.Instance.R s a>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.ExtPtr>_R)) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr1_$cp1Literal ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7, Language.R.Literal.Literal a9 i8,
     Language.R.Literal.Literal a10 i9,
     Language.R.Literal.Literal a11 i10,
     Language.R.Literal.Literal a12 i11,
     Language.R.Literal.Literal a i12) =>
    Data.Singletons.SingI 'Foreign.R.Type.ExtPtr
  {- Arity: 14,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A>m21,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral(->)ExtPtr19
                  `cast`
                (forall (a :: <*>_N) (a1 :: <*>_N) (i :: <Foreign.R.Type.SEXPTYPE>_N) (a2 :: <*>_N) (i1 :: <Foreign.R.Type.SEXPTYPE>_N) (a3 :: <*>_N) (i2 :: <Foreign.R.Type.SEXPTYPE>_N) (a4 :: <*>_N) (i3 :: <Foreign.R.Type.SEXPTYPE>_N) (a5 :: <*>_N) (i4 :: <Foreign.R.Type.SEXPTYPE>_N) (a6 :: <*>_N) (i5 :: <Foreign.R.Type.SEXPTYPE>_N) (a7 :: <*>_N) (i6 :: <Foreign.R.Type.SEXPTYPE>_N) (a8 :: <*>_N) (i7 :: <Foreign.R.Type.SEXPTYPE>_N) (a9 :: <*>_N) (i8 :: <Foreign.R.Type.SEXPTYPE>_N) (a10 :: <*>_N) (i9 :: <Foreign.R.Type.SEXPTYPE>_N) (a11 :: <*>_N) (i10 :: <Foreign.R.Type.SEXPTYPE>_N) (a12 :: <*>_N) (i11 :: <Foreign.R.Type.SEXPTYPE>_N) (i12 :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R <Language.R.Literal.Literal a1 i>_R
                 ->_R <Language.R.Literal.Literal a2 i1>_R
                 ->_R <Language.R.Literal.Literal a3 i2>_R
                 ->_R <Language.R.Literal.Literal a4 i3>_R
                 ->_R <Language.R.Literal.Literal a5 i4>_R
                 ->_R <Language.R.Literal.Literal a6 i5>_R
                 ->_R <Language.R.Literal.Literal a7 i6>_R
                 ->_R <Language.R.Literal.Literal a8 i7>_R
                 ->_R <Language.R.Literal.Literal a9 i8>_R
                 ->_R <Language.R.Literal.Literal a10 i9>_R
                 ->_R <Language.R.Literal.Literal a11 i10>_R
                 ->_R <Language.R.Literal.Literal a12 i11>_R
                 ->_R <Language.R.Literal.Literal a i12>_R
                 ->_R Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.ExtPtr>_N) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr2 ::
    (Control.DeepSeq.NFData a0, Language.R.Literal.Literal a1 i0,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7, Language.R.Literal.Literal a9 i8,
     Language.R.Literal.Literal a10 i9,
     Language.R.Literal.Literal a11 i10,
     Language.R.Literal.Literal a0 i11) =>
    Language.R.Literal.Literal
      (a1
       -> a2
       -> a3
       -> a4
       -> a5
       -> a6
       -> a7
       -> a8
       -> a9
       -> a10
       -> a11
       -> Language.R.Instance.R s0 a0)
      'Foreign.R.Type.ExtPtr
  DFunId
  {- Arity: 13,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      @ a1
                      @ (i :: Foreign.R.Type.SEXPTYPE)
                      @ a2
                      @ (i1 :: Foreign.R.Type.SEXPTYPE)
                      @ a3
                      @ (i2 :: Foreign.R.Type.SEXPTYPE)
                      @ a4
                      @ (i3 :: Foreign.R.Type.SEXPTYPE)
                      @ a5
                      @ (i4 :: Foreign.R.Type.SEXPTYPE)
                      @ a6
                      @ (i5 :: Foreign.R.Type.SEXPTYPE)
                      @ a7
                      @ (i6 :: Foreign.R.Type.SEXPTYPE)
                      @ a8
                      @ (i7 :: Foreign.R.Type.SEXPTYPE)
                      @ a9
                      @ (i8 :: Foreign.R.Type.SEXPTYPE)
                      @ a10
                      @ (i9 :: Foreign.R.Type.SEXPTYPE)
                      @ a11
                      @ (i10 :: Foreign.R.Type.SEXPTYPE)
                      @ (i11 :: Foreign.R.Type.SEXPTYPE)
                      @ s
                      ($dNFData :: Control.DeepSeq.NFData a)
                      ($dLiteral :: Language.R.Literal.Literal a1 i)
                      ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                      ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                      ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                      ($dLiteral4 :: Language.R.Literal.Literal a5 i4)
                      ($dLiteral5 :: Language.R.Literal.Literal a6 i5)
                      ($dLiteral6 :: Language.R.Literal.Literal a7 i6)
                      ($dLiteral7 :: Language.R.Literal.Literal a8 i7)
                      ($dLiteral8 :: Language.R.Literal.Literal a9 i8)
                      ($dLiteral9 :: Language.R.Literal.Literal a10 i9)
                      ($dLiteral10 :: Language.R.Literal.Literal a11 i10)
                      ($dLiteral11 :: Language.R.Literal.Literal a i11).
                  @ (a1
                     -> a2
                     -> a3
                     -> a4
                     -> a5
                     -> a6
                     -> a7
                     -> a8
                     -> a9
                     -> a10
                     -> a11
                     -> Language.R.Instance.R s a)
                  @ 'Foreign.R.Type.ExtPtr
                  (Language.R.Literal.$fLiteral(->)ExtPtr2_$cp1Literal
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ a5
                     @ i4
                     @ a6
                     @ i5
                     @ a7
                     @ i6
                     @ a8
                     @ i7
                     @ a9
                     @ i8
                     @ a10
                     @ i9
                     @ a11
                     @ i10
                     @ i11
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4
                     $dLiteral5
                     $dLiteral6
                     $dLiteral7
                     $dLiteral8
                     $dLiteral9
                     $dLiteral10
                     $dLiteral11)
                  (Language.R.Literal.$fLiteral(->)ExtPtr2_$cmkSEXPIO
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ a5
                     @ i4
                     @ a6
                     @ i5
                     @ a7
                     @ i6
                     @ a8
                     @ i7
                     @ a9
                     @ i8
                     @ a10
                     @ i9
                     @ a11
                     @ i10
                     @ i11
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4
                     $dLiteral5
                     $dLiteral6
                     $dLiteral7
                     $dLiteral8
                     $dLiteral9
                     $dLiteral10
                     $dLiteral11)
                  (Language.R.Literal.$fLiteral(->)ExtPtr2_$cfromSEXP
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ a5
                     @ i4
                     @ a6
                     @ i5
                     @ a7
                     @ i6
                     @ a8
                     @ i7
                     @ a9
                     @ i8
                     @ a10
                     @ i9
                     @ a11
                     @ i10
                     @ i11
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4
                     $dLiteral5
                     $dLiteral6
                     $dLiteral7
                     $dLiteral8
                     $dLiteral9
                     $dLiteral10
                     $dLiteral11) -}
a376249dbab8c7bc78511559dfd66403
  $fLiteral(->)ExtPtr20 ::
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.ExtPtr
    -> a3 -> a2 -> a1 -> Language.R.Instance.R s a
  {- Strictness: x -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr21 ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a i3) =>
    (a1 -> a2 -> a3 -> Language.R.Instance.R s a)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.ExtPtr #)
  {- Arity: 7,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)><L,C(U)><S,U>,
     Unfolding: (\ @ a
                   @ a1
                   @ (i :: Foreign.R.Type.SEXPTYPE)
                   @ a2
                   @ (i1 :: Foreign.R.Type.SEXPTYPE)
                   @ a3
                   @ (i2 :: Foreign.R.Type.SEXPTYPE)
                   @ (i3 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData a)
                   ($dLiteral :: Language.R.Literal.Literal a1 i)
                   ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                   ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                   ($dLiteral3 :: Language.R.Literal.Literal a i3)
                   (eta :: a1 -> a2 -> a3 -> Language.R.Instance.R s a)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   lvl47 :: Data.Singletons.DemoteRep Foreign.R.Type.SEXPTYPE
                   = Foreign.R.Type.$fSingKindSEXPTYPE_$cfromSing
                       @ i2
                       (Language.R.Literal.$p1Literal @ a3 @ i2 $dLiteral2)
                         `cast`
                       (Data.Singletons.N:SingI[0] <Foreign.R.Type.SEXPTYPE>_N <i2>_N)
                 } in
                 let {
                   lvl48 :: Data.Singletons.DemoteRep Foreign.R.Type.SEXPTYPE
                   = Foreign.R.Type.$fSingKindSEXPTYPE_$cfromSing
                       @ i1
                       (Language.R.Literal.$p1Literal @ a2 @ i1 $dLiteral1)
                         `cast`
                       (Data.Singletons.N:SingI[0] <Foreign.R.Type.SEXPTYPE>_N <i1>_N)
                 } in
                 let {
                   lvl49 :: Data.Singletons.DemoteRep Foreign.R.Type.SEXPTYPE
                   = Foreign.R.Type.$fSingKindSEXPTYPE_$cfromSing
                       @ i
                       (Language.R.Literal.$p1Literal @ a1 @ i $dLiteral)
                         `cast`
                       (Data.Singletons.N:SingI[0] <Foreign.R.Type.SEXPTYPE>_N <i>_N)
                 } in
                 case (Language.R.Internal.FunWrappers.wrap3
                         (\ (eta1 :: Foreign.R.SEXP0) ->
                          let {
                            eta2 :: a2 -> a3 -> Language.R.Instance.R s a
                            = case Language.R.Literal.fromSEXP
                                     @ a1
                                     @ i
                                     $dLiteral
                                     @ GHC.Prim.Any
                                     (case eta1
                                             `cast`
                                           (GHC.Ptr.Ptr
                                              <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                             GHC.Prim.Any
                                                                             GHC.Prim.Any>)_R of dt { GHC.Ptr.Ptr dt1 ->
                                      case Foreign.R.Internal.$wunsafeCast
                                             @ GHC.Prim.Any
                                             @ i
                                             lvl49
                                               `cast`
                                             (Sub (Foreign.R.Type.D:R:DemoteRepSEXPTYPE[0]))
                                             (Foreign.R.Internal.SomeSEXP
                                                @ GHC.Prim.Any
                                                @ GHC.Prim.Any
                                                dt1) of ww { DEFAULT ->
                                      (GHC.Ptr.Ptr @ (Language.R.HExp.HExp GHC.Prim.Any i) ww)
                                        `cast`
                                      (Sym (Foreign.R.Internal.N:SEXP[0]
                                                <GHC.Prim.Any>_P <i>_P)) } }) of vx { DEFAULT ->
                              eta vx }
                          } in
                          \ (eta3 :: Foreign.R.SEXP0) ->
                          let {
                            eta4 :: a3 -> Language.R.Instance.R s a
                            = case Language.R.Literal.fromSEXP
                                     @ a2
                                     @ i1
                                     $dLiteral1
                                     @ GHC.Prim.Any
                                     (case eta3
                                             `cast`
                                           (GHC.Ptr.Ptr
                                              <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                             GHC.Prim.Any
                                                                             GHC.Prim.Any>)_R of dt { GHC.Ptr.Ptr dt1 ->
                                      case Foreign.R.Internal.$wunsafeCast
                                             @ GHC.Prim.Any
                                             @ i1
                                             lvl48
                                               `cast`
                                             (Sub (Foreign.R.Type.D:R:DemoteRepSEXPTYPE[0]))
                                             (Foreign.R.Internal.SomeSEXP
                                                @ GHC.Prim.Any
                                                @ GHC.Prim.Any
                                                dt1) of ww { DEFAULT ->
                                      (GHC.Ptr.Ptr @ (Language.R.HExp.HExp GHC.Prim.Any i1) ww)
                                        `cast`
                                      (Sym (Foreign.R.Internal.N:SEXP[0]
                                                <GHC.Prim.Any>_P <i1>_P)) } }) of vx { DEFAULT ->
                              eta2 vx }
                          } in
                          \ (eta5 :: Foreign.R.SEXP0)
                            (eta6 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case Language.R.Instance.runRegion2
                                 @ a
                                 @ s
                                 $dNFData
                                 (case Language.R.Literal.fromSEXP
                                         @ a3
                                         @ i2
                                         $dLiteral2
                                         @ GHC.Prim.Any
                                         (case eta5
                                                 `cast`
                                               (GHC.Ptr.Ptr
                                                  <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                                 GHC.Prim.Any
                                                                                 GHC.Prim.Any>)_R of dt { GHC.Ptr.Ptr dt1 ->
                                          case Foreign.R.Internal.$wunsafeCast
                                                 @ GHC.Prim.Any
                                                 @ i2
                                                 lvl47
                                                   `cast`
                                                 (Sub (Foreign.R.Type.D:R:DemoteRepSEXPTYPE[0]))
                                                 (Foreign.R.Internal.SomeSEXP
                                                    @ GHC.Prim.Any
                                                    @ GHC.Prim.Any
                                                    dt1) of ww { DEFAULT ->
                                          (GHC.Ptr.Ptr @ (Language.R.HExp.HExp GHC.Prim.Any i2) ww)
                                            `cast`
                                          (Sym (Foreign.R.Internal.N:SEXP[0]
                                                    <GHC.Prim.Any>_P
                                                    <i2>_P)) } }) of vx { DEFAULT ->
                                  eta4 vx })
                                 eta6 of ds1 { (#,#) ipv ipv1 ->
                          case ipv1 of vx { DEFAULT ->
                          case (Language.R.Literal.mkSEXPIO @ a @ i3 $dLiteral3 vx)
                                 `cast`
                               (GHC.Types.N:IO[0]
                                    <Foreign.R.Internal.SEXP Control.Memory.Region.V i3>_R)
                                 ipv of ds { (#,#) ipv2 ipv3 ->
                          (# ipv2,
                             ipv3
                               `cast`
                             (Trans
                                  (Foreign.R.Internal.N:SEXP[0] <Control.Memory.Region.V>_P <i3>_P)
                                  (GHC.Ptr.Ptr
                                     <Language.R.HExp.HExp
                                        Control.Memory.Region.V
                                        i3, Foreign.R.Internal.SEXPREC>)_R) #) } } })
                           `cast`
                         (<Foreign.R.SEXP0>_R
                          ->_R <Foreign.R.SEXP0>_R
                          ->_R <Foreign.R.SEXP0>_R
                          ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.SEXP0>_R)))
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Ptr.FunPtr
                              (Foreign.R.SEXP0
                               -> Foreign.R.SEXP0
                               -> Foreign.R.SEXP0
                               -> GHC.Types.IO Foreign.R.SEXP0)>_R)
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ds { GHC.Ptr.FunPtr ds2 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs funPtrToSEXP GHC.Prim.Addr#
                                                                                          -> GHC.Prim.State#
                                                                                               GHC.Prim.RealWorld
                                                                                          -> (# GHC.Prim.State#
                                                                                                  GHC.Prim.RealWorld,
                                                                                                GHC.Prim.Addr# #)}
                        ds2
                        ipv of wild { (#,#) ds3 ds4 ->
                 (# ds3,
                    GHC.Ptr.Ptr
                      @ (Language.R.HExp.HExp
                           Control.Memory.Region.V 'Foreign.R.Type.ExtPtr)
                      ds4 #)
                   `cast`
                 ((#,#)
                    <'GHC.Types.VoidRep>_R
                    <'GHC.Types.PtrRepLifted>_R
                    <GHC.Prim.State# GHC.Prim.RealWorld>_R
                    (Sym (Foreign.R.Internal.N:SEXP[0]
                              <Control.Memory.Region.V `cast` <GHC.Types.*>_N>_P
                              <'Foreign.R.Type.ExtPtr>_P)))_R } } }) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr22 ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a i3) =>
    Data.Singletons.Sing 'Foreign.R.Type.ExtPtr
  {- Arity: 5, Strictness: <L,A><L,A><L,A><L,A><L,A>m21,
     Unfolding: InlineRule (5, True, True)
                (\ @ a
                   @ a1
                   @ (i :: Foreign.R.Type.SEXPTYPE)
                   @ a2
                   @ (i1 :: Foreign.R.Type.SEXPTYPE)
                   @ a3
                   @ (i2 :: Foreign.R.Type.SEXPTYPE)
                   @ (i3 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData a)
                   ($dLiteral :: Language.R.Literal.Literal a1 i)
                   ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                   ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                   ($dLiteral3 :: Language.R.Literal.Literal a i3) ->
                 Foreign.R.Type.$fSingISEXPTYPEExtPtr_$s$WSExtPtr) -}
b70870f609c077da8db3e5e77072076e
  $fLiteral(->)ExtPtr23 ::
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.ExtPtr
    -> a11
    -> a10
    -> a9
    -> a8
    -> a7
    -> a6
    -> a5
    -> a4
    -> a3
    -> a2
    -> a1
    -> Language.R.Instance.R s a
  {- Strictness: x -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr24 ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7, Language.R.Literal.Literal a9 i8,
     Language.R.Literal.Literal a10 i9,
     Language.R.Literal.Literal a11 i10,
     Language.R.Literal.Literal a i11) =>
    (a1
     -> a2
     -> a3
     -> a4
     -> a5
     -> a6
     -> a7
     -> a8
     -> a9
     -> a10
     -> a11
     -> Language.R.Instance.R s a)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.ExtPtr #)
  {- Arity: 15,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)><L,C(U)><S,U> -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr25 ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7, Language.R.Literal.Literal a9 i8,
     Language.R.Literal.Literal a10 i9,
     Language.R.Literal.Literal a11 i10,
     Language.R.Literal.Literal a i11) =>
    Data.Singletons.Sing 'Foreign.R.Type.ExtPtr
  {- Arity: 13,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A>m21,
     Unfolding: InlineRule (13, True, True)
                (\ @ a
                   @ a1
                   @ (i :: Foreign.R.Type.SEXPTYPE)
                   @ a2
                   @ (i1 :: Foreign.R.Type.SEXPTYPE)
                   @ a3
                   @ (i2 :: Foreign.R.Type.SEXPTYPE)
                   @ a4
                   @ (i3 :: Foreign.R.Type.SEXPTYPE)
                   @ a5
                   @ (i4 :: Foreign.R.Type.SEXPTYPE)
                   @ a6
                   @ (i5 :: Foreign.R.Type.SEXPTYPE)
                   @ a7
                   @ (i6 :: Foreign.R.Type.SEXPTYPE)
                   @ a8
                   @ (i7 :: Foreign.R.Type.SEXPTYPE)
                   @ a9
                   @ (i8 :: Foreign.R.Type.SEXPTYPE)
                   @ a10
                   @ (i9 :: Foreign.R.Type.SEXPTYPE)
                   @ a11
                   @ (i10 :: Foreign.R.Type.SEXPTYPE)
                   @ (i11 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData a)
                   ($dLiteral :: Language.R.Literal.Literal a1 i)
                   ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                   ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                   ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                   ($dLiteral4 :: Language.R.Literal.Literal a5 i4)
                   ($dLiteral5 :: Language.R.Literal.Literal a6 i5)
                   ($dLiteral6 :: Language.R.Literal.Literal a7 i6)
                   ($dLiteral7 :: Language.R.Literal.Literal a8 i7)
                   ($dLiteral8 :: Language.R.Literal.Literal a9 i8)
                   ($dLiteral9 :: Language.R.Literal.Literal a10 i9)
                   ($dLiteral10 :: Language.R.Literal.Literal a11 i10)
                   ($dLiteral11 :: Language.R.Literal.Literal a i11) ->
                 Foreign.R.Type.$fSingISEXPTYPEExtPtr_$s$WSExtPtr) -}
903c41e2e49145d8bbdb7fc998e720b3
  $fLiteral(->)ExtPtr26 ::
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.ExtPtr
    -> a10
    -> a9
    -> a8
    -> a7
    -> a6
    -> a5
    -> a4
    -> a3
    -> a2
    -> a1
    -> Language.R.Instance.R s a
  {- Strictness: x -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr27 ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7, Language.R.Literal.Literal a9 i8,
     Language.R.Literal.Literal a10 i9,
     Language.R.Literal.Literal a i10) =>
    (a1
     -> a2
     -> a3
     -> a4
     -> a5
     -> a6
     -> a7
     -> a8
     -> a9
     -> a10
     -> Language.R.Instance.R s a)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.ExtPtr #)
  {- Arity: 14,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)><L,C(U)><S,U> -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr28 ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7, Language.R.Literal.Literal a9 i8,
     Language.R.Literal.Literal a10 i9,
     Language.R.Literal.Literal a i10) =>
    Data.Singletons.Sing 'Foreign.R.Type.ExtPtr
  {- Arity: 12,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A>m21,
     Unfolding: InlineRule (12, True, True)
                (\ @ a
                   @ a1
                   @ (i :: Foreign.R.Type.SEXPTYPE)
                   @ a2
                   @ (i1 :: Foreign.R.Type.SEXPTYPE)
                   @ a3
                   @ (i2 :: Foreign.R.Type.SEXPTYPE)
                   @ a4
                   @ (i3 :: Foreign.R.Type.SEXPTYPE)
                   @ a5
                   @ (i4 :: Foreign.R.Type.SEXPTYPE)
                   @ a6
                   @ (i5 :: Foreign.R.Type.SEXPTYPE)
                   @ a7
                   @ (i6 :: Foreign.R.Type.SEXPTYPE)
                   @ a8
                   @ (i7 :: Foreign.R.Type.SEXPTYPE)
                   @ a9
                   @ (i8 :: Foreign.R.Type.SEXPTYPE)
                   @ a10
                   @ (i9 :: Foreign.R.Type.SEXPTYPE)
                   @ (i10 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData a)
                   ($dLiteral :: Language.R.Literal.Literal a1 i)
                   ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                   ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                   ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                   ($dLiteral4 :: Language.R.Literal.Literal a5 i4)
                   ($dLiteral5 :: Language.R.Literal.Literal a6 i5)
                   ($dLiteral6 :: Language.R.Literal.Literal a7 i6)
                   ($dLiteral7 :: Language.R.Literal.Literal a8 i7)
                   ($dLiteral8 :: Language.R.Literal.Literal a9 i8)
                   ($dLiteral9 :: Language.R.Literal.Literal a10 i9)
                   ($dLiteral10 :: Language.R.Literal.Literal a i10) ->
                 Foreign.R.Type.$fSingISEXPTYPEExtPtr_$s$WSExtPtr) -}
9c4947cfd0b07a4b21219b6731c5a3f6
  $fLiteral(->)ExtPtr29 ::
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.ExtPtr
    -> a9
    -> a8
    -> a7
    -> a6
    -> a5
    -> a4
    -> a3
    -> a2
    -> a1
    -> Language.R.Instance.R s a
  {- Strictness: x -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr2_$cfromSEXP ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7, Language.R.Literal.Literal a9 i8,
     Language.R.Literal.Literal a10 i9,
     Language.R.Literal.Literal a11 i10,
     Language.R.Literal.Literal a i11) =>
    forall s1.
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.ExtPtr
    -> a1
    -> a2
    -> a3
    -> a4
    -> a5
    -> a6
    -> a7
    -> a8
    -> a9
    -> a10
    -> a11
    -> Language.R.Instance.R s a
  {- Arity: 13,
     Strictness: <B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A>x,
     Unfolding: InlineRule (13, True, True)
                (\ @ a
                   @ a1
                   @ (i :: Foreign.R.Type.SEXPTYPE)
                   @ a2
                   @ (i1 :: Foreign.R.Type.SEXPTYPE)
                   @ a3
                   @ (i2 :: Foreign.R.Type.SEXPTYPE)
                   @ a4
                   @ (i3 :: Foreign.R.Type.SEXPTYPE)
                   @ a5
                   @ (i4 :: Foreign.R.Type.SEXPTYPE)
                   @ a6
                   @ (i5 :: Foreign.R.Type.SEXPTYPE)
                   @ a7
                   @ (i6 :: Foreign.R.Type.SEXPTYPE)
                   @ a8
                   @ (i7 :: Foreign.R.Type.SEXPTYPE)
                   @ a9
                   @ (i8 :: Foreign.R.Type.SEXPTYPE)
                   @ a10
                   @ (i9 :: Foreign.R.Type.SEXPTYPE)
                   @ a11
                   @ (i10 :: Foreign.R.Type.SEXPTYPE)
                   @ (i11 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData a)
                   ($dLiteral :: Language.R.Literal.Literal a1 i)
                   ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                   ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                   ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                   ($dLiteral4 :: Language.R.Literal.Literal a5 i4)
                   ($dLiteral5 :: Language.R.Literal.Literal a6 i5)
                   ($dLiteral6 :: Language.R.Literal.Literal a7 i6)
                   ($dLiteral7 :: Language.R.Literal.Literal a8 i7)
                   ($dLiteral8 :: Language.R.Literal.Literal a9 i8)
                   ($dLiteral9 :: Language.R.Literal.Literal a10 i9)
                   ($dLiteral10 :: Language.R.Literal.Literal a11 i10)
                   ($dLiteral11 :: Language.R.Literal.Literal a i11)
                   @ s1 ->
                 Language.R.Literal.$fLiteral(->)ExtPtr23
                   @ s
                   @ a
                   @ a11
                   @ a10
                   @ a9
                   @ a8
                   @ a7
                   @ a6
                   @ a5
                   @ a4
                   @ a3
                   @ a2
                   @ a1
                   @ s1) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr2_$cmkSEXPIO ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7, Language.R.Literal.Literal a9 i8,
     Language.R.Literal.Literal a10 i9,
     Language.R.Literal.Literal a11 i10,
     Language.R.Literal.Literal a i11) =>
    (a1
     -> a2
     -> a3
     -> a4
     -> a5
     -> a6
     -> a7
     -> a8
     -> a9
     -> a10
     -> a11
     -> Language.R.Instance.R s a)
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.ExtPtr)
  {- Arity: 15,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)><L,C(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral(->)ExtPtr24
                  `cast`
                (forall (a :: <*>_N) (a1 :: <*>_N) (i :: <Foreign.R.Type.SEXPTYPE>_N) (a2 :: <*>_N) (i1 :: <Foreign.R.Type.SEXPTYPE>_N) (a3 :: <*>_N) (i2 :: <Foreign.R.Type.SEXPTYPE>_N) (a4 :: <*>_N) (i3 :: <Foreign.R.Type.SEXPTYPE>_N) (a5 :: <*>_N) (i4 :: <Foreign.R.Type.SEXPTYPE>_N) (a6 :: <*>_N) (i5 :: <Foreign.R.Type.SEXPTYPE>_N) (a7 :: <*>_N) (i6 :: <Foreign.R.Type.SEXPTYPE>_N) (a8 :: <*>_N) (i7 :: <Foreign.R.Type.SEXPTYPE>_N) (a9 :: <*>_N) (i8 :: <Foreign.R.Type.SEXPTYPE>_N) (a10 :: <*>_N) (i9 :: <Foreign.R.Type.SEXPTYPE>_N) (a11 :: <*>_N) (i10 :: <Foreign.R.Type.SEXPTYPE>_N) (i11 :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R <Language.R.Literal.Literal a1 i>_R
                 ->_R <Language.R.Literal.Literal a2 i1>_R
                 ->_R <Language.R.Literal.Literal a3 i2>_R
                 ->_R <Language.R.Literal.Literal a4 i3>_R
                 ->_R <Language.R.Literal.Literal a5 i4>_R
                 ->_R <Language.R.Literal.Literal a6 i5>_R
                 ->_R <Language.R.Literal.Literal a7 i6>_R
                 ->_R <Language.R.Literal.Literal a8 i7>_R
                 ->_R <Language.R.Literal.Literal a9 i8>_R
                 ->_R <Language.R.Literal.Literal a10 i9>_R
                 ->_R <Language.R.Literal.Literal a11 i10>_R
                 ->_R <Language.R.Literal.Literal a i11>_R
                 ->_R <a1
                       -> a2
                       -> a3
                       -> a4
                       -> a5
                       -> a6
                       -> a7
                       -> a8
                       -> a9
                       -> a10
                       -> a11
                       -> Language.R.Instance.R s a>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.ExtPtr>_R)) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr2_$cp1Literal ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7, Language.R.Literal.Literal a9 i8,
     Language.R.Literal.Literal a10 i9,
     Language.R.Literal.Literal a11 i10,
     Language.R.Literal.Literal a i11) =>
    Data.Singletons.SingI 'Foreign.R.Type.ExtPtr
  {- Arity: 13,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A>m21,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral(->)ExtPtr25
                  `cast`
                (forall (a :: <*>_N) (a1 :: <*>_N) (i :: <Foreign.R.Type.SEXPTYPE>_N) (a2 :: <*>_N) (i1 :: <Foreign.R.Type.SEXPTYPE>_N) (a3 :: <*>_N) (i2 :: <Foreign.R.Type.SEXPTYPE>_N) (a4 :: <*>_N) (i3 :: <Foreign.R.Type.SEXPTYPE>_N) (a5 :: <*>_N) (i4 :: <Foreign.R.Type.SEXPTYPE>_N) (a6 :: <*>_N) (i5 :: <Foreign.R.Type.SEXPTYPE>_N) (a7 :: <*>_N) (i6 :: <Foreign.R.Type.SEXPTYPE>_N) (a8 :: <*>_N) (i7 :: <Foreign.R.Type.SEXPTYPE>_N) (a9 :: <*>_N) (i8 :: <Foreign.R.Type.SEXPTYPE>_N) (a10 :: <*>_N) (i9 :: <Foreign.R.Type.SEXPTYPE>_N) (a11 :: <*>_N) (i10 :: <Foreign.R.Type.SEXPTYPE>_N) (i11 :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R <Language.R.Literal.Literal a1 i>_R
                 ->_R <Language.R.Literal.Literal a2 i1>_R
                 ->_R <Language.R.Literal.Literal a3 i2>_R
                 ->_R <Language.R.Literal.Literal a4 i3>_R
                 ->_R <Language.R.Literal.Literal a5 i4>_R
                 ->_R <Language.R.Literal.Literal a6 i5>_R
                 ->_R <Language.R.Literal.Literal a7 i6>_R
                 ->_R <Language.R.Literal.Literal a8 i7>_R
                 ->_R <Language.R.Literal.Literal a9 i8>_R
                 ->_R <Language.R.Literal.Literal a10 i9>_R
                 ->_R <Language.R.Literal.Literal a11 i10>_R
                 ->_R <Language.R.Literal.Literal a i11>_R
                 ->_R Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.ExtPtr>_N) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr3 ::
    (Control.DeepSeq.NFData a0, Language.R.Literal.Literal a1 i0,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7, Language.R.Literal.Literal a9 i8,
     Language.R.Literal.Literal a10 i9,
     Language.R.Literal.Literal a0 i10) =>
    Language.R.Literal.Literal
      (a1
       -> a2
       -> a3
       -> a4
       -> a5
       -> a6
       -> a7
       -> a8
       -> a9
       -> a10
       -> Language.R.Instance.R s0 a0)
      'Foreign.R.Type.ExtPtr
  DFunId
  {- Arity: 12,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      @ a1
                      @ (i :: Foreign.R.Type.SEXPTYPE)
                      @ a2
                      @ (i1 :: Foreign.R.Type.SEXPTYPE)
                      @ a3
                      @ (i2 :: Foreign.R.Type.SEXPTYPE)
                      @ a4
                      @ (i3 :: Foreign.R.Type.SEXPTYPE)
                      @ a5
                      @ (i4 :: Foreign.R.Type.SEXPTYPE)
                      @ a6
                      @ (i5 :: Foreign.R.Type.SEXPTYPE)
                      @ a7
                      @ (i6 :: Foreign.R.Type.SEXPTYPE)
                      @ a8
                      @ (i7 :: Foreign.R.Type.SEXPTYPE)
                      @ a9
                      @ (i8 :: Foreign.R.Type.SEXPTYPE)
                      @ a10
                      @ (i9 :: Foreign.R.Type.SEXPTYPE)
                      @ (i10 :: Foreign.R.Type.SEXPTYPE)
                      @ s
                      ($dNFData :: Control.DeepSeq.NFData a)
                      ($dLiteral :: Language.R.Literal.Literal a1 i)
                      ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                      ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                      ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                      ($dLiteral4 :: Language.R.Literal.Literal a5 i4)
                      ($dLiteral5 :: Language.R.Literal.Literal a6 i5)
                      ($dLiteral6 :: Language.R.Literal.Literal a7 i6)
                      ($dLiteral7 :: Language.R.Literal.Literal a8 i7)
                      ($dLiteral8 :: Language.R.Literal.Literal a9 i8)
                      ($dLiteral9 :: Language.R.Literal.Literal a10 i9)
                      ($dLiteral10 :: Language.R.Literal.Literal a i10).
                  @ (a1
                     -> a2
                     -> a3
                     -> a4
                     -> a5
                     -> a6
                     -> a7
                     -> a8
                     -> a9
                     -> a10
                     -> Language.R.Instance.R s a)
                  @ 'Foreign.R.Type.ExtPtr
                  (Language.R.Literal.$fLiteral(->)ExtPtr3_$cp1Literal
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ a5
                     @ i4
                     @ a6
                     @ i5
                     @ a7
                     @ i6
                     @ a8
                     @ i7
                     @ a9
                     @ i8
                     @ a10
                     @ i9
                     @ i10
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4
                     $dLiteral5
                     $dLiteral6
                     $dLiteral7
                     $dLiteral8
                     $dLiteral9
                     $dLiteral10)
                  (Language.R.Literal.$fLiteral(->)ExtPtr3_$cmkSEXPIO
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ a5
                     @ i4
                     @ a6
                     @ i5
                     @ a7
                     @ i6
                     @ a8
                     @ i7
                     @ a9
                     @ i8
                     @ a10
                     @ i9
                     @ i10
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4
                     $dLiteral5
                     $dLiteral6
                     $dLiteral7
                     $dLiteral8
                     $dLiteral9
                     $dLiteral10)
                  (Language.R.Literal.$fLiteral(->)ExtPtr3_$cfromSEXP
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ a5
                     @ i4
                     @ a6
                     @ i5
                     @ a7
                     @ i6
                     @ a8
                     @ i7
                     @ a9
                     @ i8
                     @ a10
                     @ i9
                     @ i10
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4
                     $dLiteral5
                     $dLiteral6
                     $dLiteral7
                     $dLiteral8
                     $dLiteral9
                     $dLiteral10) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr30 ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7, Language.R.Literal.Literal a9 i8,
     Language.R.Literal.Literal a i9) =>
    (a1
     -> a2
     -> a3
     -> a4
     -> a5
     -> a6
     -> a7
     -> a8
     -> a9
     -> Language.R.Instance.R s a)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.ExtPtr #)
  {- Arity: 13,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)><L,C(U)><S,U> -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr31 ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7, Language.R.Literal.Literal a9 i8,
     Language.R.Literal.Literal a i9) =>
    Data.Singletons.Sing 'Foreign.R.Type.ExtPtr
  {- Arity: 11,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A>m21,
     Unfolding: InlineRule (11, True, True)
                (\ @ a
                   @ a1
                   @ (i :: Foreign.R.Type.SEXPTYPE)
                   @ a2
                   @ (i1 :: Foreign.R.Type.SEXPTYPE)
                   @ a3
                   @ (i2 :: Foreign.R.Type.SEXPTYPE)
                   @ a4
                   @ (i3 :: Foreign.R.Type.SEXPTYPE)
                   @ a5
                   @ (i4 :: Foreign.R.Type.SEXPTYPE)
                   @ a6
                   @ (i5 :: Foreign.R.Type.SEXPTYPE)
                   @ a7
                   @ (i6 :: Foreign.R.Type.SEXPTYPE)
                   @ a8
                   @ (i7 :: Foreign.R.Type.SEXPTYPE)
                   @ a9
                   @ (i8 :: Foreign.R.Type.SEXPTYPE)
                   @ (i9 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData a)
                   ($dLiteral :: Language.R.Literal.Literal a1 i)
                   ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                   ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                   ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                   ($dLiteral4 :: Language.R.Literal.Literal a5 i4)
                   ($dLiteral5 :: Language.R.Literal.Literal a6 i5)
                   ($dLiteral6 :: Language.R.Literal.Literal a7 i6)
                   ($dLiteral7 :: Language.R.Literal.Literal a8 i7)
                   ($dLiteral8 :: Language.R.Literal.Literal a9 i8)
                   ($dLiteral9 :: Language.R.Literal.Literal a i9) ->
                 Foreign.R.Type.$fSingISEXPTYPEExtPtr_$s$WSExtPtr) -}
9e43b78bf1633b0de8dca93cc7f5599d
  $fLiteral(->)ExtPtr32 ::
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.ExtPtr
    -> a8
    -> a7
    -> a6
    -> a5
    -> a4
    -> a3
    -> a2
    -> a1
    -> Language.R.Instance.R s a
  {- Strictness: x -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr33 ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7,
     Language.R.Literal.Literal a i8) =>
    (a1
     -> a2
     -> a3
     -> a4
     -> a5
     -> a6
     -> a7
     -> a8
     -> Language.R.Instance.R s a)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.ExtPtr #)
  {- Arity: 12,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)><L,C(U)><S,U> -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr34 ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7,
     Language.R.Literal.Literal a i8) =>
    Data.Singletons.Sing 'Foreign.R.Type.ExtPtr
  {- Arity: 10,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A>m21,
     Unfolding: InlineRule (10, True, True)
                (\ @ a
                   @ a1
                   @ (i :: Foreign.R.Type.SEXPTYPE)
                   @ a2
                   @ (i1 :: Foreign.R.Type.SEXPTYPE)
                   @ a3
                   @ (i2 :: Foreign.R.Type.SEXPTYPE)
                   @ a4
                   @ (i3 :: Foreign.R.Type.SEXPTYPE)
                   @ a5
                   @ (i4 :: Foreign.R.Type.SEXPTYPE)
                   @ a6
                   @ (i5 :: Foreign.R.Type.SEXPTYPE)
                   @ a7
                   @ (i6 :: Foreign.R.Type.SEXPTYPE)
                   @ a8
                   @ (i7 :: Foreign.R.Type.SEXPTYPE)
                   @ (i8 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData a)
                   ($dLiteral :: Language.R.Literal.Literal a1 i)
                   ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                   ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                   ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                   ($dLiteral4 :: Language.R.Literal.Literal a5 i4)
                   ($dLiteral5 :: Language.R.Literal.Literal a6 i5)
                   ($dLiteral6 :: Language.R.Literal.Literal a7 i6)
                   ($dLiteral7 :: Language.R.Literal.Literal a8 i7)
                   ($dLiteral8 :: Language.R.Literal.Literal a i8) ->
                 Foreign.R.Type.$fSingISEXPTYPEExtPtr_$s$WSExtPtr) -}
69df017f8ff799fe30a4ebed0ae41c04
  $fLiteral(->)ExtPtr35 ::
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.ExtPtr
    -> a7
    -> a6
    -> a5
    -> a4
    -> a3
    -> a2
    -> a1
    -> Language.R.Instance.R s a
  {- Strictness: x -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr36 ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a i7) =>
    (a1
     -> a2 -> a3 -> a4 -> a5 -> a6 -> a7 -> Language.R.Instance.R s a)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.ExtPtr #)
  {- Arity: 11,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)><L,C(U)><S,U> -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr37 ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a i7) =>
    Data.Singletons.Sing 'Foreign.R.Type.ExtPtr
  {- Arity: 9,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A>m21,
     Unfolding: InlineRule (9, True, True)
                (\ @ a
                   @ a1
                   @ (i :: Foreign.R.Type.SEXPTYPE)
                   @ a2
                   @ (i1 :: Foreign.R.Type.SEXPTYPE)
                   @ a3
                   @ (i2 :: Foreign.R.Type.SEXPTYPE)
                   @ a4
                   @ (i3 :: Foreign.R.Type.SEXPTYPE)
                   @ a5
                   @ (i4 :: Foreign.R.Type.SEXPTYPE)
                   @ a6
                   @ (i5 :: Foreign.R.Type.SEXPTYPE)
                   @ a7
                   @ (i6 :: Foreign.R.Type.SEXPTYPE)
                   @ (i7 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData a)
                   ($dLiteral :: Language.R.Literal.Literal a1 i)
                   ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                   ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                   ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                   ($dLiteral4 :: Language.R.Literal.Literal a5 i4)
                   ($dLiteral5 :: Language.R.Literal.Literal a6 i5)
                   ($dLiteral6 :: Language.R.Literal.Literal a7 i6)
                   ($dLiteral7 :: Language.R.Literal.Literal a i7) ->
                 Foreign.R.Type.$fSingISEXPTYPEExtPtr_$s$WSExtPtr) -}
05b94d0e290da0761544c82f24d074ec
  $fLiteral(->)ExtPtr38 ::
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.ExtPtr
    -> a6 -> a5 -> a4 -> a3 -> a2 -> a1 -> Language.R.Instance.R s a
  {- Strictness: x -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr39 ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5,
     Language.R.Literal.Literal a i6) =>
    (a1 -> a2 -> a3 -> a4 -> a5 -> a6 -> Language.R.Instance.R s a)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.ExtPtr #)
  {- Arity: 10,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)><L,C(U)><S,U> -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr3_$cfromSEXP ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7, Language.R.Literal.Literal a9 i8,
     Language.R.Literal.Literal a10 i9,
     Language.R.Literal.Literal a i10) =>
    forall s1.
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.ExtPtr
    -> a1
    -> a2
    -> a3
    -> a4
    -> a5
    -> a6
    -> a7
    -> a8
    -> a9
    -> a10
    -> Language.R.Instance.R s a
  {- Arity: 12,
     Strictness: <B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A>x,
     Unfolding: InlineRule (12, True, True)
                (\ @ a
                   @ a1
                   @ (i :: Foreign.R.Type.SEXPTYPE)
                   @ a2
                   @ (i1 :: Foreign.R.Type.SEXPTYPE)
                   @ a3
                   @ (i2 :: Foreign.R.Type.SEXPTYPE)
                   @ a4
                   @ (i3 :: Foreign.R.Type.SEXPTYPE)
                   @ a5
                   @ (i4 :: Foreign.R.Type.SEXPTYPE)
                   @ a6
                   @ (i5 :: Foreign.R.Type.SEXPTYPE)
                   @ a7
                   @ (i6 :: Foreign.R.Type.SEXPTYPE)
                   @ a8
                   @ (i7 :: Foreign.R.Type.SEXPTYPE)
                   @ a9
                   @ (i8 :: Foreign.R.Type.SEXPTYPE)
                   @ a10
                   @ (i9 :: Foreign.R.Type.SEXPTYPE)
                   @ (i10 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData a)
                   ($dLiteral :: Language.R.Literal.Literal a1 i)
                   ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                   ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                   ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                   ($dLiteral4 :: Language.R.Literal.Literal a5 i4)
                   ($dLiteral5 :: Language.R.Literal.Literal a6 i5)
                   ($dLiteral6 :: Language.R.Literal.Literal a7 i6)
                   ($dLiteral7 :: Language.R.Literal.Literal a8 i7)
                   ($dLiteral8 :: Language.R.Literal.Literal a9 i8)
                   ($dLiteral9 :: Language.R.Literal.Literal a10 i9)
                   ($dLiteral10 :: Language.R.Literal.Literal a i10)
                   @ s1 ->
                 Language.R.Literal.$fLiteral(->)ExtPtr26
                   @ s
                   @ a
                   @ a10
                   @ a9
                   @ a8
                   @ a7
                   @ a6
                   @ a5
                   @ a4
                   @ a3
                   @ a2
                   @ a1
                   @ s1) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr3_$cmkSEXPIO ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7, Language.R.Literal.Literal a9 i8,
     Language.R.Literal.Literal a10 i9,
     Language.R.Literal.Literal a i10) =>
    (a1
     -> a2
     -> a3
     -> a4
     -> a5
     -> a6
     -> a7
     -> a8
     -> a9
     -> a10
     -> Language.R.Instance.R s a)
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.ExtPtr)
  {- Arity: 14,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)><L,C(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral(->)ExtPtr27
                  `cast`
                (forall (a :: <*>_N) (a1 :: <*>_N) (i :: <Foreign.R.Type.SEXPTYPE>_N) (a2 :: <*>_N) (i1 :: <Foreign.R.Type.SEXPTYPE>_N) (a3 :: <*>_N) (i2 :: <Foreign.R.Type.SEXPTYPE>_N) (a4 :: <*>_N) (i3 :: <Foreign.R.Type.SEXPTYPE>_N) (a5 :: <*>_N) (i4 :: <Foreign.R.Type.SEXPTYPE>_N) (a6 :: <*>_N) (i5 :: <Foreign.R.Type.SEXPTYPE>_N) (a7 :: <*>_N) (i6 :: <Foreign.R.Type.SEXPTYPE>_N) (a8 :: <*>_N) (i7 :: <Foreign.R.Type.SEXPTYPE>_N) (a9 :: <*>_N) (i8 :: <Foreign.R.Type.SEXPTYPE>_N) (a10 :: <*>_N) (i9 :: <Foreign.R.Type.SEXPTYPE>_N) (i10 :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R <Language.R.Literal.Literal a1 i>_R
                 ->_R <Language.R.Literal.Literal a2 i1>_R
                 ->_R <Language.R.Literal.Literal a3 i2>_R
                 ->_R <Language.R.Literal.Literal a4 i3>_R
                 ->_R <Language.R.Literal.Literal a5 i4>_R
                 ->_R <Language.R.Literal.Literal a6 i5>_R
                 ->_R <Language.R.Literal.Literal a7 i6>_R
                 ->_R <Language.R.Literal.Literal a8 i7>_R
                 ->_R <Language.R.Literal.Literal a9 i8>_R
                 ->_R <Language.R.Literal.Literal a10 i9>_R
                 ->_R <Language.R.Literal.Literal a i10>_R
                 ->_R <a1
                       -> a2
                       -> a3
                       -> a4
                       -> a5
                       -> a6
                       -> a7
                       -> a8
                       -> a9
                       -> a10
                       -> Language.R.Instance.R s a>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.ExtPtr>_R)) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr3_$cp1Literal ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7, Language.R.Literal.Literal a9 i8,
     Language.R.Literal.Literal a10 i9,
     Language.R.Literal.Literal a i10) =>
    Data.Singletons.SingI 'Foreign.R.Type.ExtPtr
  {- Arity: 12,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A>m21,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral(->)ExtPtr28
                  `cast`
                (forall (a :: <*>_N) (a1 :: <*>_N) (i :: <Foreign.R.Type.SEXPTYPE>_N) (a2 :: <*>_N) (i1 :: <Foreign.R.Type.SEXPTYPE>_N) (a3 :: <*>_N) (i2 :: <Foreign.R.Type.SEXPTYPE>_N) (a4 :: <*>_N) (i3 :: <Foreign.R.Type.SEXPTYPE>_N) (a5 :: <*>_N) (i4 :: <Foreign.R.Type.SEXPTYPE>_N) (a6 :: <*>_N) (i5 :: <Foreign.R.Type.SEXPTYPE>_N) (a7 :: <*>_N) (i6 :: <Foreign.R.Type.SEXPTYPE>_N) (a8 :: <*>_N) (i7 :: <Foreign.R.Type.SEXPTYPE>_N) (a9 :: <*>_N) (i8 :: <Foreign.R.Type.SEXPTYPE>_N) (a10 :: <*>_N) (i9 :: <Foreign.R.Type.SEXPTYPE>_N) (i10 :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R <Language.R.Literal.Literal a1 i>_R
                 ->_R <Language.R.Literal.Literal a2 i1>_R
                 ->_R <Language.R.Literal.Literal a3 i2>_R
                 ->_R <Language.R.Literal.Literal a4 i3>_R
                 ->_R <Language.R.Literal.Literal a5 i4>_R
                 ->_R <Language.R.Literal.Literal a6 i5>_R
                 ->_R <Language.R.Literal.Literal a7 i6>_R
                 ->_R <Language.R.Literal.Literal a8 i7>_R
                 ->_R <Language.R.Literal.Literal a9 i8>_R
                 ->_R <Language.R.Literal.Literal a10 i9>_R
                 ->_R <Language.R.Literal.Literal a i10>_R
                 ->_R Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.ExtPtr>_N) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr4 ::
    (Control.DeepSeq.NFData a0, Language.R.Literal.Literal a1 i0,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7, Language.R.Literal.Literal a9 i8,
     Language.R.Literal.Literal a0 i9) =>
    Language.R.Literal.Literal
      (a1
       -> a2
       -> a3
       -> a4
       -> a5
       -> a6
       -> a7
       -> a8
       -> a9
       -> Language.R.Instance.R s0 a0)
      'Foreign.R.Type.ExtPtr
  DFunId
  {- Arity: 11,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      @ a1
                      @ (i :: Foreign.R.Type.SEXPTYPE)
                      @ a2
                      @ (i1 :: Foreign.R.Type.SEXPTYPE)
                      @ a3
                      @ (i2 :: Foreign.R.Type.SEXPTYPE)
                      @ a4
                      @ (i3 :: Foreign.R.Type.SEXPTYPE)
                      @ a5
                      @ (i4 :: Foreign.R.Type.SEXPTYPE)
                      @ a6
                      @ (i5 :: Foreign.R.Type.SEXPTYPE)
                      @ a7
                      @ (i6 :: Foreign.R.Type.SEXPTYPE)
                      @ a8
                      @ (i7 :: Foreign.R.Type.SEXPTYPE)
                      @ a9
                      @ (i8 :: Foreign.R.Type.SEXPTYPE)
                      @ (i9 :: Foreign.R.Type.SEXPTYPE)
                      @ s
                      ($dNFData :: Control.DeepSeq.NFData a)
                      ($dLiteral :: Language.R.Literal.Literal a1 i)
                      ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                      ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                      ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                      ($dLiteral4 :: Language.R.Literal.Literal a5 i4)
                      ($dLiteral5 :: Language.R.Literal.Literal a6 i5)
                      ($dLiteral6 :: Language.R.Literal.Literal a7 i6)
                      ($dLiteral7 :: Language.R.Literal.Literal a8 i7)
                      ($dLiteral8 :: Language.R.Literal.Literal a9 i8)
                      ($dLiteral9 :: Language.R.Literal.Literal a i9).
                  @ (a1
                     -> a2
                     -> a3
                     -> a4
                     -> a5
                     -> a6
                     -> a7
                     -> a8
                     -> a9
                     -> Language.R.Instance.R s a)
                  @ 'Foreign.R.Type.ExtPtr
                  (Language.R.Literal.$fLiteral(->)ExtPtr4_$cp1Literal
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ a5
                     @ i4
                     @ a6
                     @ i5
                     @ a7
                     @ i6
                     @ a8
                     @ i7
                     @ a9
                     @ i8
                     @ i9
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4
                     $dLiteral5
                     $dLiteral6
                     $dLiteral7
                     $dLiteral8
                     $dLiteral9)
                  (Language.R.Literal.$fLiteral(->)ExtPtr4_$cmkSEXPIO
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ a5
                     @ i4
                     @ a6
                     @ i5
                     @ a7
                     @ i6
                     @ a8
                     @ i7
                     @ a9
                     @ i8
                     @ i9
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4
                     $dLiteral5
                     $dLiteral6
                     $dLiteral7
                     $dLiteral8
                     $dLiteral9)
                  (Language.R.Literal.$fLiteral(->)ExtPtr4_$cfromSEXP
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ a5
                     @ i4
                     @ a6
                     @ i5
                     @ a7
                     @ i6
                     @ a8
                     @ i7
                     @ a9
                     @ i8
                     @ i9
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4
                     $dLiteral5
                     $dLiteral6
                     $dLiteral7
                     $dLiteral8
                     $dLiteral9) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr40 ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5,
     Language.R.Literal.Literal a i6) =>
    Data.Singletons.Sing 'Foreign.R.Type.ExtPtr
  {- Arity: 8,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A>m21,
     Unfolding: InlineRule (8, True, True)
                (\ @ a
                   @ a1
                   @ (i :: Foreign.R.Type.SEXPTYPE)
                   @ a2
                   @ (i1 :: Foreign.R.Type.SEXPTYPE)
                   @ a3
                   @ (i2 :: Foreign.R.Type.SEXPTYPE)
                   @ a4
                   @ (i3 :: Foreign.R.Type.SEXPTYPE)
                   @ a5
                   @ (i4 :: Foreign.R.Type.SEXPTYPE)
                   @ a6
                   @ (i5 :: Foreign.R.Type.SEXPTYPE)
                   @ (i6 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData a)
                   ($dLiteral :: Language.R.Literal.Literal a1 i)
                   ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                   ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                   ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                   ($dLiteral4 :: Language.R.Literal.Literal a5 i4)
                   ($dLiteral5 :: Language.R.Literal.Literal a6 i5)
                   ($dLiteral6 :: Language.R.Literal.Literal a i6) ->
                 Foreign.R.Type.$fSingISEXPTYPEExtPtr_$s$WSExtPtr) -}
fd0cc9fd6ac2b839e8460e7a8e3590d4
  $fLiteral(->)ExtPtr41 ::
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.ExtPtr
    -> a5 -> a4 -> a3 -> a2 -> a1 -> Language.R.Instance.R s a
  {- Strictness: x -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr42 ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a i5) =>
    (a1 -> a2 -> a3 -> a4 -> a5 -> Language.R.Instance.R s a)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.ExtPtr #)
  {- Arity: 9,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)><L,C(U)><S,U> -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr43 ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a i5) =>
    Data.Singletons.Sing 'Foreign.R.Type.ExtPtr
  {- Arity: 7, Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A>m21,
     Unfolding: InlineRule (7, True, True)
                (\ @ a
                   @ a1
                   @ (i :: Foreign.R.Type.SEXPTYPE)
                   @ a2
                   @ (i1 :: Foreign.R.Type.SEXPTYPE)
                   @ a3
                   @ (i2 :: Foreign.R.Type.SEXPTYPE)
                   @ a4
                   @ (i3 :: Foreign.R.Type.SEXPTYPE)
                   @ a5
                   @ (i4 :: Foreign.R.Type.SEXPTYPE)
                   @ (i5 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData a)
                   ($dLiteral :: Language.R.Literal.Literal a1 i)
                   ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                   ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                   ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                   ($dLiteral4 :: Language.R.Literal.Literal a5 i4)
                   ($dLiteral5 :: Language.R.Literal.Literal a i5) ->
                 Foreign.R.Type.$fSingISEXPTYPEExtPtr_$s$WSExtPtr) -}
35becafb803c54dfcbaabe09f28713f1
  $fLiteral(->)ExtPtr44 ::
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.ExtPtr
    -> a4 -> a3 -> a2 -> a1 -> Language.R.Instance.R s a
  {- Strictness: x -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr45 ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3,
     Language.R.Literal.Literal a i4) =>
    (a1 -> a2 -> a3 -> a4 -> Language.R.Instance.R s a)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.ExtPtr #)
  {- Arity: 8,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)><L,C(U)><S,U> -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr46 ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3,
     Language.R.Literal.Literal a i4) =>
    Data.Singletons.Sing 'Foreign.R.Type.ExtPtr
  {- Arity: 6, Strictness: <L,A><L,A><L,A><L,A><L,A><L,A>m21,
     Unfolding: InlineRule (6, True, True)
                (\ @ a
                   @ a1
                   @ (i :: Foreign.R.Type.SEXPTYPE)
                   @ a2
                   @ (i1 :: Foreign.R.Type.SEXPTYPE)
                   @ a3
                   @ (i2 :: Foreign.R.Type.SEXPTYPE)
                   @ a4
                   @ (i3 :: Foreign.R.Type.SEXPTYPE)
                   @ (i4 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData a)
                   ($dLiteral :: Language.R.Literal.Literal a1 i)
                   ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                   ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                   ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                   ($dLiteral4 :: Language.R.Literal.Literal a i4) ->
                 Foreign.R.Type.$fSingISEXPTYPEExtPtr_$s$WSExtPtr) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr4_$cfromSEXP ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7, Language.R.Literal.Literal a9 i8,
     Language.R.Literal.Literal a i9) =>
    forall s1.
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.ExtPtr
    -> a1
    -> a2
    -> a3
    -> a4
    -> a5
    -> a6
    -> a7
    -> a8
    -> a9
    -> Language.R.Instance.R s a
  {- Arity: 11,
     Strictness: <B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A>x,
     Unfolding: InlineRule (11, True, True)
                (\ @ a
                   @ a1
                   @ (i :: Foreign.R.Type.SEXPTYPE)
                   @ a2
                   @ (i1 :: Foreign.R.Type.SEXPTYPE)
                   @ a3
                   @ (i2 :: Foreign.R.Type.SEXPTYPE)
                   @ a4
                   @ (i3 :: Foreign.R.Type.SEXPTYPE)
                   @ a5
                   @ (i4 :: Foreign.R.Type.SEXPTYPE)
                   @ a6
                   @ (i5 :: Foreign.R.Type.SEXPTYPE)
                   @ a7
                   @ (i6 :: Foreign.R.Type.SEXPTYPE)
                   @ a8
                   @ (i7 :: Foreign.R.Type.SEXPTYPE)
                   @ a9
                   @ (i8 :: Foreign.R.Type.SEXPTYPE)
                   @ (i9 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData a)
                   ($dLiteral :: Language.R.Literal.Literal a1 i)
                   ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                   ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                   ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                   ($dLiteral4 :: Language.R.Literal.Literal a5 i4)
                   ($dLiteral5 :: Language.R.Literal.Literal a6 i5)
                   ($dLiteral6 :: Language.R.Literal.Literal a7 i6)
                   ($dLiteral7 :: Language.R.Literal.Literal a8 i7)
                   ($dLiteral8 :: Language.R.Literal.Literal a9 i8)
                   ($dLiteral9 :: Language.R.Literal.Literal a i9)
                   @ s1 ->
                 Language.R.Literal.$fLiteral(->)ExtPtr29
                   @ s
                   @ a
                   @ a9
                   @ a8
                   @ a7
                   @ a6
                   @ a5
                   @ a4
                   @ a3
                   @ a2
                   @ a1
                   @ s1) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr4_$cmkSEXPIO ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7, Language.R.Literal.Literal a9 i8,
     Language.R.Literal.Literal a i9) =>
    (a1
     -> a2
     -> a3
     -> a4
     -> a5
     -> a6
     -> a7
     -> a8
     -> a9
     -> Language.R.Instance.R s a)
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.ExtPtr)
  {- Arity: 13,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)><L,C(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral(->)ExtPtr30
                  `cast`
                (forall (a :: <*>_N) (a1 :: <*>_N) (i :: <Foreign.R.Type.SEXPTYPE>_N) (a2 :: <*>_N) (i1 :: <Foreign.R.Type.SEXPTYPE>_N) (a3 :: <*>_N) (i2 :: <Foreign.R.Type.SEXPTYPE>_N) (a4 :: <*>_N) (i3 :: <Foreign.R.Type.SEXPTYPE>_N) (a5 :: <*>_N) (i4 :: <Foreign.R.Type.SEXPTYPE>_N) (a6 :: <*>_N) (i5 :: <Foreign.R.Type.SEXPTYPE>_N) (a7 :: <*>_N) (i6 :: <Foreign.R.Type.SEXPTYPE>_N) (a8 :: <*>_N) (i7 :: <Foreign.R.Type.SEXPTYPE>_N) (a9 :: <*>_N) (i8 :: <Foreign.R.Type.SEXPTYPE>_N) (i9 :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R <Language.R.Literal.Literal a1 i>_R
                 ->_R <Language.R.Literal.Literal a2 i1>_R
                 ->_R <Language.R.Literal.Literal a3 i2>_R
                 ->_R <Language.R.Literal.Literal a4 i3>_R
                 ->_R <Language.R.Literal.Literal a5 i4>_R
                 ->_R <Language.R.Literal.Literal a6 i5>_R
                 ->_R <Language.R.Literal.Literal a7 i6>_R
                 ->_R <Language.R.Literal.Literal a8 i7>_R
                 ->_R <Language.R.Literal.Literal a9 i8>_R
                 ->_R <Language.R.Literal.Literal a i9>_R
                 ->_R <a1
                       -> a2
                       -> a3
                       -> a4
                       -> a5
                       -> a6
                       -> a7
                       -> a8
                       -> a9
                       -> Language.R.Instance.R s a>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.ExtPtr>_R)) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr4_$cp1Literal ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7, Language.R.Literal.Literal a9 i8,
     Language.R.Literal.Literal a i9) =>
    Data.Singletons.SingI 'Foreign.R.Type.ExtPtr
  {- Arity: 11,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A>m21,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral(->)ExtPtr31
                  `cast`
                (forall (a :: <*>_N) (a1 :: <*>_N) (i :: <Foreign.R.Type.SEXPTYPE>_N) (a2 :: <*>_N) (i1 :: <Foreign.R.Type.SEXPTYPE>_N) (a3 :: <*>_N) (i2 :: <Foreign.R.Type.SEXPTYPE>_N) (a4 :: <*>_N) (i3 :: <Foreign.R.Type.SEXPTYPE>_N) (a5 :: <*>_N) (i4 :: <Foreign.R.Type.SEXPTYPE>_N) (a6 :: <*>_N) (i5 :: <Foreign.R.Type.SEXPTYPE>_N) (a7 :: <*>_N) (i6 :: <Foreign.R.Type.SEXPTYPE>_N) (a8 :: <*>_N) (i7 :: <Foreign.R.Type.SEXPTYPE>_N) (a9 :: <*>_N) (i8 :: <Foreign.R.Type.SEXPTYPE>_N) (i9 :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R <Language.R.Literal.Literal a1 i>_R
                 ->_R <Language.R.Literal.Literal a2 i1>_R
                 ->_R <Language.R.Literal.Literal a3 i2>_R
                 ->_R <Language.R.Literal.Literal a4 i3>_R
                 ->_R <Language.R.Literal.Literal a5 i4>_R
                 ->_R <Language.R.Literal.Literal a6 i5>_R
                 ->_R <Language.R.Literal.Literal a7 i6>_R
                 ->_R <Language.R.Literal.Literal a8 i7>_R
                 ->_R <Language.R.Literal.Literal a9 i8>_R
                 ->_R <Language.R.Literal.Literal a i9>_R
                 ->_R Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.ExtPtr>_N) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr5 ::
    (Control.DeepSeq.NFData a0, Language.R.Literal.Literal a1 i0,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7,
     Language.R.Literal.Literal a0 i8) =>
    Language.R.Literal.Literal
      (a1
       -> a2
       -> a3
       -> a4
       -> a5
       -> a6
       -> a7
       -> a8
       -> Language.R.Instance.R s0 a0)
      'Foreign.R.Type.ExtPtr
  DFunId
  {- Arity: 10,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      @ a1
                      @ (i :: Foreign.R.Type.SEXPTYPE)
                      @ a2
                      @ (i1 :: Foreign.R.Type.SEXPTYPE)
                      @ a3
                      @ (i2 :: Foreign.R.Type.SEXPTYPE)
                      @ a4
                      @ (i3 :: Foreign.R.Type.SEXPTYPE)
                      @ a5
                      @ (i4 :: Foreign.R.Type.SEXPTYPE)
                      @ a6
                      @ (i5 :: Foreign.R.Type.SEXPTYPE)
                      @ a7
                      @ (i6 :: Foreign.R.Type.SEXPTYPE)
                      @ a8
                      @ (i7 :: Foreign.R.Type.SEXPTYPE)
                      @ (i8 :: Foreign.R.Type.SEXPTYPE)
                      @ s
                      ($dNFData :: Control.DeepSeq.NFData a)
                      ($dLiteral :: Language.R.Literal.Literal a1 i)
                      ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                      ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                      ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                      ($dLiteral4 :: Language.R.Literal.Literal a5 i4)
                      ($dLiteral5 :: Language.R.Literal.Literal a6 i5)
                      ($dLiteral6 :: Language.R.Literal.Literal a7 i6)
                      ($dLiteral7 :: Language.R.Literal.Literal a8 i7)
                      ($dLiteral8 :: Language.R.Literal.Literal a i8).
                  @ (a1
                     -> a2
                     -> a3
                     -> a4
                     -> a5
                     -> a6
                     -> a7
                     -> a8
                     -> Language.R.Instance.R s a)
                  @ 'Foreign.R.Type.ExtPtr
                  (Language.R.Literal.$fLiteral(->)ExtPtr5_$cp1Literal
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ a5
                     @ i4
                     @ a6
                     @ i5
                     @ a7
                     @ i6
                     @ a8
                     @ i7
                     @ i8
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4
                     $dLiteral5
                     $dLiteral6
                     $dLiteral7
                     $dLiteral8)
                  (Language.R.Literal.$fLiteral(->)ExtPtr5_$cmkSEXPIO
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ a5
                     @ i4
                     @ a6
                     @ i5
                     @ a7
                     @ i6
                     @ a8
                     @ i7
                     @ i8
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4
                     $dLiteral5
                     $dLiteral6
                     $dLiteral7
                     $dLiteral8)
                  (Language.R.Literal.$fLiteral(->)ExtPtr5_$cfromSEXP
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ a5
                     @ i4
                     @ a6
                     @ i5
                     @ a7
                     @ i6
                     @ a8
                     @ i7
                     @ i8
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4
                     $dLiteral5
                     $dLiteral6
                     $dLiteral7
                     $dLiteral8) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr5_$cfromSEXP ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7,
     Language.R.Literal.Literal a i8) =>
    forall s1.
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.ExtPtr
    -> a1
    -> a2
    -> a3
    -> a4
    -> a5
    -> a6
    -> a7
    -> a8
    -> Language.R.Instance.R s a
  {- Arity: 10,
     Strictness: <B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A>x,
     Unfolding: InlineRule (10, True, True)
                (\ @ a
                   @ a1
                   @ (i :: Foreign.R.Type.SEXPTYPE)
                   @ a2
                   @ (i1 :: Foreign.R.Type.SEXPTYPE)
                   @ a3
                   @ (i2 :: Foreign.R.Type.SEXPTYPE)
                   @ a4
                   @ (i3 :: Foreign.R.Type.SEXPTYPE)
                   @ a5
                   @ (i4 :: Foreign.R.Type.SEXPTYPE)
                   @ a6
                   @ (i5 :: Foreign.R.Type.SEXPTYPE)
                   @ a7
                   @ (i6 :: Foreign.R.Type.SEXPTYPE)
                   @ a8
                   @ (i7 :: Foreign.R.Type.SEXPTYPE)
                   @ (i8 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData a)
                   ($dLiteral :: Language.R.Literal.Literal a1 i)
                   ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                   ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                   ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                   ($dLiteral4 :: Language.R.Literal.Literal a5 i4)
                   ($dLiteral5 :: Language.R.Literal.Literal a6 i5)
                   ($dLiteral6 :: Language.R.Literal.Literal a7 i6)
                   ($dLiteral7 :: Language.R.Literal.Literal a8 i7)
                   ($dLiteral8 :: Language.R.Literal.Literal a i8)
                   @ s1 ->
                 Language.R.Literal.$fLiteral(->)ExtPtr32
                   @ s
                   @ a
                   @ a8
                   @ a7
                   @ a6
                   @ a5
                   @ a4
                   @ a3
                   @ a2
                   @ a1
                   @ s1) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr5_$cmkSEXPIO ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7,
     Language.R.Literal.Literal a i8) =>
    (a1
     -> a2
     -> a3
     -> a4
     -> a5
     -> a6
     -> a7
     -> a8
     -> Language.R.Instance.R s a)
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.ExtPtr)
  {- Arity: 12,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)><L,C(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral(->)ExtPtr33
                  `cast`
                (forall (a :: <*>_N) (a1 :: <*>_N) (i :: <Foreign.R.Type.SEXPTYPE>_N) (a2 :: <*>_N) (i1 :: <Foreign.R.Type.SEXPTYPE>_N) (a3 :: <*>_N) (i2 :: <Foreign.R.Type.SEXPTYPE>_N) (a4 :: <*>_N) (i3 :: <Foreign.R.Type.SEXPTYPE>_N) (a5 :: <*>_N) (i4 :: <Foreign.R.Type.SEXPTYPE>_N) (a6 :: <*>_N) (i5 :: <Foreign.R.Type.SEXPTYPE>_N) (a7 :: <*>_N) (i6 :: <Foreign.R.Type.SEXPTYPE>_N) (a8 :: <*>_N) (i7 :: <Foreign.R.Type.SEXPTYPE>_N) (i8 :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R <Language.R.Literal.Literal a1 i>_R
                 ->_R <Language.R.Literal.Literal a2 i1>_R
                 ->_R <Language.R.Literal.Literal a3 i2>_R
                 ->_R <Language.R.Literal.Literal a4 i3>_R
                 ->_R <Language.R.Literal.Literal a5 i4>_R
                 ->_R <Language.R.Literal.Literal a6 i5>_R
                 ->_R <Language.R.Literal.Literal a7 i6>_R
                 ->_R <Language.R.Literal.Literal a8 i7>_R
                 ->_R <Language.R.Literal.Literal a i8>_R
                 ->_R <a1
                       -> a2
                       -> a3
                       -> a4
                       -> a5
                       -> a6
                       -> a7
                       -> a8
                       -> Language.R.Instance.R s a>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.ExtPtr>_R)) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr5_$cp1Literal ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a8 i7,
     Language.R.Literal.Literal a i8) =>
    Data.Singletons.SingI 'Foreign.R.Type.ExtPtr
  {- Arity: 10,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A>m21,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral(->)ExtPtr34
                  `cast`
                (forall (a :: <*>_N) (a1 :: <*>_N) (i :: <Foreign.R.Type.SEXPTYPE>_N) (a2 :: <*>_N) (i1 :: <Foreign.R.Type.SEXPTYPE>_N) (a3 :: <*>_N) (i2 :: <Foreign.R.Type.SEXPTYPE>_N) (a4 :: <*>_N) (i3 :: <Foreign.R.Type.SEXPTYPE>_N) (a5 :: <*>_N) (i4 :: <Foreign.R.Type.SEXPTYPE>_N) (a6 :: <*>_N) (i5 :: <Foreign.R.Type.SEXPTYPE>_N) (a7 :: <*>_N) (i6 :: <Foreign.R.Type.SEXPTYPE>_N) (a8 :: <*>_N) (i7 :: <Foreign.R.Type.SEXPTYPE>_N) (i8 :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R <Language.R.Literal.Literal a1 i>_R
                 ->_R <Language.R.Literal.Literal a2 i1>_R
                 ->_R <Language.R.Literal.Literal a3 i2>_R
                 ->_R <Language.R.Literal.Literal a4 i3>_R
                 ->_R <Language.R.Literal.Literal a5 i4>_R
                 ->_R <Language.R.Literal.Literal a6 i5>_R
                 ->_R <Language.R.Literal.Literal a7 i6>_R
                 ->_R <Language.R.Literal.Literal a8 i7>_R
                 ->_R <Language.R.Literal.Literal a i8>_R
                 ->_R Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.ExtPtr>_N) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr6 ::
    (Control.DeepSeq.NFData a0, Language.R.Literal.Literal a1 i0,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a0 i7) =>
    Language.R.Literal.Literal
      (a1
       -> a2 -> a3 -> a4 -> a5 -> a6 -> a7 -> Language.R.Instance.R s0 a0)
      'Foreign.R.Type.ExtPtr
  DFunId
  {- Arity: 9,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      @ a1
                      @ (i :: Foreign.R.Type.SEXPTYPE)
                      @ a2
                      @ (i1 :: Foreign.R.Type.SEXPTYPE)
                      @ a3
                      @ (i2 :: Foreign.R.Type.SEXPTYPE)
                      @ a4
                      @ (i3 :: Foreign.R.Type.SEXPTYPE)
                      @ a5
                      @ (i4 :: Foreign.R.Type.SEXPTYPE)
                      @ a6
                      @ (i5 :: Foreign.R.Type.SEXPTYPE)
                      @ a7
                      @ (i6 :: Foreign.R.Type.SEXPTYPE)
                      @ (i7 :: Foreign.R.Type.SEXPTYPE)
                      @ s
                      ($dNFData :: Control.DeepSeq.NFData a)
                      ($dLiteral :: Language.R.Literal.Literal a1 i)
                      ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                      ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                      ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                      ($dLiteral4 :: Language.R.Literal.Literal a5 i4)
                      ($dLiteral5 :: Language.R.Literal.Literal a6 i5)
                      ($dLiteral6 :: Language.R.Literal.Literal a7 i6)
                      ($dLiteral7 :: Language.R.Literal.Literal a i7).
                  @ (a1
                     -> a2 -> a3 -> a4 -> a5 -> a6 -> a7 -> Language.R.Instance.R s a)
                  @ 'Foreign.R.Type.ExtPtr
                  (Language.R.Literal.$fLiteral(->)ExtPtr6_$cp1Literal
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ a5
                     @ i4
                     @ a6
                     @ i5
                     @ a7
                     @ i6
                     @ i7
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4
                     $dLiteral5
                     $dLiteral6
                     $dLiteral7)
                  (Language.R.Literal.$fLiteral(->)ExtPtr6_$cmkSEXPIO
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ a5
                     @ i4
                     @ a6
                     @ i5
                     @ a7
                     @ i6
                     @ i7
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4
                     $dLiteral5
                     $dLiteral6
                     $dLiteral7)
                  (Language.R.Literal.$fLiteral(->)ExtPtr6_$cfromSEXP
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ a5
                     @ i4
                     @ a6
                     @ i5
                     @ a7
                     @ i6
                     @ i7
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4
                     $dLiteral5
                     $dLiteral6
                     $dLiteral7) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr6_$cfromSEXP ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a i7) =>
    forall s1.
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.ExtPtr
    -> a1
    -> a2
    -> a3
    -> a4
    -> a5
    -> a6
    -> a7
    -> Language.R.Instance.R s a
  {- Arity: 9,
     Strictness: <B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A>x,
     Unfolding: InlineRule (9, True, True)
                (\ @ a
                   @ a1
                   @ (i :: Foreign.R.Type.SEXPTYPE)
                   @ a2
                   @ (i1 :: Foreign.R.Type.SEXPTYPE)
                   @ a3
                   @ (i2 :: Foreign.R.Type.SEXPTYPE)
                   @ a4
                   @ (i3 :: Foreign.R.Type.SEXPTYPE)
                   @ a5
                   @ (i4 :: Foreign.R.Type.SEXPTYPE)
                   @ a6
                   @ (i5 :: Foreign.R.Type.SEXPTYPE)
                   @ a7
                   @ (i6 :: Foreign.R.Type.SEXPTYPE)
                   @ (i7 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData a)
                   ($dLiteral :: Language.R.Literal.Literal a1 i)
                   ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                   ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                   ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                   ($dLiteral4 :: Language.R.Literal.Literal a5 i4)
                   ($dLiteral5 :: Language.R.Literal.Literal a6 i5)
                   ($dLiteral6 :: Language.R.Literal.Literal a7 i6)
                   ($dLiteral7 :: Language.R.Literal.Literal a i7)
                   @ s1 ->
                 Language.R.Literal.$fLiteral(->)ExtPtr35
                   @ s
                   @ a
                   @ a7
                   @ a6
                   @ a5
                   @ a4
                   @ a3
                   @ a2
                   @ a1
                   @ s1) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr6_$cmkSEXPIO ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a i7) =>
    (a1
     -> a2 -> a3 -> a4 -> a5 -> a6 -> a7 -> Language.R.Instance.R s a)
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.ExtPtr)
  {- Arity: 11,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)><L,C(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral(->)ExtPtr36
                  `cast`
                (forall (a :: <*>_N) (a1 :: <*>_N) (i :: <Foreign.R.Type.SEXPTYPE>_N) (a2 :: <*>_N) (i1 :: <Foreign.R.Type.SEXPTYPE>_N) (a3 :: <*>_N) (i2 :: <Foreign.R.Type.SEXPTYPE>_N) (a4 :: <*>_N) (i3 :: <Foreign.R.Type.SEXPTYPE>_N) (a5 :: <*>_N) (i4 :: <Foreign.R.Type.SEXPTYPE>_N) (a6 :: <*>_N) (i5 :: <Foreign.R.Type.SEXPTYPE>_N) (a7 :: <*>_N) (i6 :: <Foreign.R.Type.SEXPTYPE>_N) (i7 :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R <Language.R.Literal.Literal a1 i>_R
                 ->_R <Language.R.Literal.Literal a2 i1>_R
                 ->_R <Language.R.Literal.Literal a3 i2>_R
                 ->_R <Language.R.Literal.Literal a4 i3>_R
                 ->_R <Language.R.Literal.Literal a5 i4>_R
                 ->_R <Language.R.Literal.Literal a6 i5>_R
                 ->_R <Language.R.Literal.Literal a7 i6>_R
                 ->_R <Language.R.Literal.Literal a i7>_R
                 ->_R <a1
                       -> a2 -> a3 -> a4 -> a5 -> a6 -> a7 -> Language.R.Instance.R s a>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.ExtPtr>_R)) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr6_$cp1Literal ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5, Language.R.Literal.Literal a7 i6,
     Language.R.Literal.Literal a i7) =>
    Data.Singletons.SingI 'Foreign.R.Type.ExtPtr
  {- Arity: 9,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A>m21,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral(->)ExtPtr37
                  `cast`
                (forall (a :: <*>_N) (a1 :: <*>_N) (i :: <Foreign.R.Type.SEXPTYPE>_N) (a2 :: <*>_N) (i1 :: <Foreign.R.Type.SEXPTYPE>_N) (a3 :: <*>_N) (i2 :: <Foreign.R.Type.SEXPTYPE>_N) (a4 :: <*>_N) (i3 :: <Foreign.R.Type.SEXPTYPE>_N) (a5 :: <*>_N) (i4 :: <Foreign.R.Type.SEXPTYPE>_N) (a6 :: <*>_N) (i5 :: <Foreign.R.Type.SEXPTYPE>_N) (a7 :: <*>_N) (i6 :: <Foreign.R.Type.SEXPTYPE>_N) (i7 :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R <Language.R.Literal.Literal a1 i>_R
                 ->_R <Language.R.Literal.Literal a2 i1>_R
                 ->_R <Language.R.Literal.Literal a3 i2>_R
                 ->_R <Language.R.Literal.Literal a4 i3>_R
                 ->_R <Language.R.Literal.Literal a5 i4>_R
                 ->_R <Language.R.Literal.Literal a6 i5>_R
                 ->_R <Language.R.Literal.Literal a7 i6>_R
                 ->_R <Language.R.Literal.Literal a i7>_R
                 ->_R Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.ExtPtr>_N) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr7 ::
    (Control.DeepSeq.NFData a0, Language.R.Literal.Literal a1 i0,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5,
     Language.R.Literal.Literal a0 i6) =>
    Language.R.Literal.Literal
      (a1 -> a2 -> a3 -> a4 -> a5 -> a6 -> Language.R.Instance.R s0 a0)
      'Foreign.R.Type.ExtPtr
  DFunId
  {- Arity: 8,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      @ a1
                      @ (i :: Foreign.R.Type.SEXPTYPE)
                      @ a2
                      @ (i1 :: Foreign.R.Type.SEXPTYPE)
                      @ a3
                      @ (i2 :: Foreign.R.Type.SEXPTYPE)
                      @ a4
                      @ (i3 :: Foreign.R.Type.SEXPTYPE)
                      @ a5
                      @ (i4 :: Foreign.R.Type.SEXPTYPE)
                      @ a6
                      @ (i5 :: Foreign.R.Type.SEXPTYPE)
                      @ (i6 :: Foreign.R.Type.SEXPTYPE)
                      @ s
                      ($dNFData :: Control.DeepSeq.NFData a)
                      ($dLiteral :: Language.R.Literal.Literal a1 i)
                      ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                      ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                      ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                      ($dLiteral4 :: Language.R.Literal.Literal a5 i4)
                      ($dLiteral5 :: Language.R.Literal.Literal a6 i5)
                      ($dLiteral6 :: Language.R.Literal.Literal a i6).
                  @ (a1 -> a2 -> a3 -> a4 -> a5 -> a6 -> Language.R.Instance.R s a)
                  @ 'Foreign.R.Type.ExtPtr
                  (Language.R.Literal.$fLiteral(->)ExtPtr7_$cp1Literal
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ a5
                     @ i4
                     @ a6
                     @ i5
                     @ i6
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4
                     $dLiteral5
                     $dLiteral6)
                  (Language.R.Literal.$fLiteral(->)ExtPtr7_$cmkSEXPIO
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ a5
                     @ i4
                     @ a6
                     @ i5
                     @ i6
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4
                     $dLiteral5
                     $dLiteral6)
                  (Language.R.Literal.$fLiteral(->)ExtPtr7_$cfromSEXP
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ a5
                     @ i4
                     @ a6
                     @ i5
                     @ i6
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4
                     $dLiteral5
                     $dLiteral6) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr7_$cfromSEXP ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5,
     Language.R.Literal.Literal a i6) =>
    forall s1.
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.ExtPtr
    -> a1 -> a2 -> a3 -> a4 -> a5 -> a6 -> Language.R.Instance.R s a
  {- Arity: 8, Strictness: <B,A><B,A><B,A><B,A><B,A><B,A><B,A><B,A>x,
     Unfolding: InlineRule (8, True, True)
                (\ @ a
                   @ a1
                   @ (i :: Foreign.R.Type.SEXPTYPE)
                   @ a2
                   @ (i1 :: Foreign.R.Type.SEXPTYPE)
                   @ a3
                   @ (i2 :: Foreign.R.Type.SEXPTYPE)
                   @ a4
                   @ (i3 :: Foreign.R.Type.SEXPTYPE)
                   @ a5
                   @ (i4 :: Foreign.R.Type.SEXPTYPE)
                   @ a6
                   @ (i5 :: Foreign.R.Type.SEXPTYPE)
                   @ (i6 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData a)
                   ($dLiteral :: Language.R.Literal.Literal a1 i)
                   ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                   ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                   ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                   ($dLiteral4 :: Language.R.Literal.Literal a5 i4)
                   ($dLiteral5 :: Language.R.Literal.Literal a6 i5)
                   ($dLiteral6 :: Language.R.Literal.Literal a i6)
                   @ s1 ->
                 Language.R.Literal.$fLiteral(->)ExtPtr38
                   @ s
                   @ a
                   @ a6
                   @ a5
                   @ a4
                   @ a3
                   @ a2
                   @ a1
                   @ s1) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr7_$cmkSEXPIO ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5,
     Language.R.Literal.Literal a i6) =>
    (a1 -> a2 -> a3 -> a4 -> a5 -> a6 -> Language.R.Instance.R s a)
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.ExtPtr)
  {- Arity: 10,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)><L,C(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral(->)ExtPtr39
                  `cast`
                (forall (a :: <*>_N) (a1 :: <*>_N) (i :: <Foreign.R.Type.SEXPTYPE>_N) (a2 :: <*>_N) (i1 :: <Foreign.R.Type.SEXPTYPE>_N) (a3 :: <*>_N) (i2 :: <Foreign.R.Type.SEXPTYPE>_N) (a4 :: <*>_N) (i3 :: <Foreign.R.Type.SEXPTYPE>_N) (a5 :: <*>_N) (i4 :: <Foreign.R.Type.SEXPTYPE>_N) (a6 :: <*>_N) (i5 :: <Foreign.R.Type.SEXPTYPE>_N) (i6 :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R <Language.R.Literal.Literal a1 i>_R
                 ->_R <Language.R.Literal.Literal a2 i1>_R
                 ->_R <Language.R.Literal.Literal a3 i2>_R
                 ->_R <Language.R.Literal.Literal a4 i3>_R
                 ->_R <Language.R.Literal.Literal a5 i4>_R
                 ->_R <Language.R.Literal.Literal a6 i5>_R
                 ->_R <Language.R.Literal.Literal a i6>_R
                 ->_R <a1
                       -> a2 -> a3 -> a4 -> a5 -> a6 -> Language.R.Instance.R s a>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.ExtPtr>_R)) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr7_$cp1Literal ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a6 i5,
     Language.R.Literal.Literal a i6) =>
    Data.Singletons.SingI 'Foreign.R.Type.ExtPtr
  {- Arity: 8,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A><L,A>m21,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral(->)ExtPtr40
                  `cast`
                (forall (a :: <*>_N) (a1 :: <*>_N) (i :: <Foreign.R.Type.SEXPTYPE>_N) (a2 :: <*>_N) (i1 :: <Foreign.R.Type.SEXPTYPE>_N) (a3 :: <*>_N) (i2 :: <Foreign.R.Type.SEXPTYPE>_N) (a4 :: <*>_N) (i3 :: <Foreign.R.Type.SEXPTYPE>_N) (a5 :: <*>_N) (i4 :: <Foreign.R.Type.SEXPTYPE>_N) (a6 :: <*>_N) (i5 :: <Foreign.R.Type.SEXPTYPE>_N) (i6 :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R <Language.R.Literal.Literal a1 i>_R
                 ->_R <Language.R.Literal.Literal a2 i1>_R
                 ->_R <Language.R.Literal.Literal a3 i2>_R
                 ->_R <Language.R.Literal.Literal a4 i3>_R
                 ->_R <Language.R.Literal.Literal a5 i4>_R
                 ->_R <Language.R.Literal.Literal a6 i5>_R
                 ->_R <Language.R.Literal.Literal a i6>_R
                 ->_R Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.ExtPtr>_N) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr8 ::
    (Control.DeepSeq.NFData a0, Language.R.Literal.Literal a1 i0,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a0 i5) =>
    Language.R.Literal.Literal
      (a1 -> a2 -> a3 -> a4 -> a5 -> Language.R.Instance.R s0 a0)
      'Foreign.R.Type.ExtPtr
  DFunId
  {- Arity: 7,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      @ a1
                      @ (i :: Foreign.R.Type.SEXPTYPE)
                      @ a2
                      @ (i1 :: Foreign.R.Type.SEXPTYPE)
                      @ a3
                      @ (i2 :: Foreign.R.Type.SEXPTYPE)
                      @ a4
                      @ (i3 :: Foreign.R.Type.SEXPTYPE)
                      @ a5
                      @ (i4 :: Foreign.R.Type.SEXPTYPE)
                      @ (i5 :: Foreign.R.Type.SEXPTYPE)
                      @ s
                      ($dNFData :: Control.DeepSeq.NFData a)
                      ($dLiteral :: Language.R.Literal.Literal a1 i)
                      ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                      ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                      ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                      ($dLiteral4 :: Language.R.Literal.Literal a5 i4)
                      ($dLiteral5 :: Language.R.Literal.Literal a i5).
                  @ (a1 -> a2 -> a3 -> a4 -> a5 -> Language.R.Instance.R s a)
                  @ 'Foreign.R.Type.ExtPtr
                  (Language.R.Literal.$fLiteral(->)ExtPtr8_$cp1Literal
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ a5
                     @ i4
                     @ i5
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4
                     $dLiteral5)
                  (Language.R.Literal.$fLiteral(->)ExtPtr8_$cmkSEXPIO
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ a5
                     @ i4
                     @ i5
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4
                     $dLiteral5)
                  (Language.R.Literal.$fLiteral(->)ExtPtr8_$cfromSEXP
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ a5
                     @ i4
                     @ i5
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4
                     $dLiteral5) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr8_$cfromSEXP ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a i5) =>
    forall s1.
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.ExtPtr
    -> a1 -> a2 -> a3 -> a4 -> a5 -> Language.R.Instance.R s a
  {- Arity: 7, Strictness: <B,A><B,A><B,A><B,A><B,A><B,A><B,A>x,
     Unfolding: InlineRule (7, True, True)
                (\ @ a
                   @ a1
                   @ (i :: Foreign.R.Type.SEXPTYPE)
                   @ a2
                   @ (i1 :: Foreign.R.Type.SEXPTYPE)
                   @ a3
                   @ (i2 :: Foreign.R.Type.SEXPTYPE)
                   @ a4
                   @ (i3 :: Foreign.R.Type.SEXPTYPE)
                   @ a5
                   @ (i4 :: Foreign.R.Type.SEXPTYPE)
                   @ (i5 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData a)
                   ($dLiteral :: Language.R.Literal.Literal a1 i)
                   ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                   ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                   ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                   ($dLiteral4 :: Language.R.Literal.Literal a5 i4)
                   ($dLiteral5 :: Language.R.Literal.Literal a i5)
                   @ s1 ->
                 Language.R.Literal.$fLiteral(->)ExtPtr41
                   @ s
                   @ a
                   @ a5
                   @ a4
                   @ a3
                   @ a2
                   @ a1
                   @ s1) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr8_$cmkSEXPIO ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a i5) =>
    (a1 -> a2 -> a3 -> a4 -> a5 -> Language.R.Instance.R s a)
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.ExtPtr)
  {- Arity: 9,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)><L,C(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral(->)ExtPtr42
                  `cast`
                (forall (a :: <*>_N) (a1 :: <*>_N) (i :: <Foreign.R.Type.SEXPTYPE>_N) (a2 :: <*>_N) (i1 :: <Foreign.R.Type.SEXPTYPE>_N) (a3 :: <*>_N) (i2 :: <Foreign.R.Type.SEXPTYPE>_N) (a4 :: <*>_N) (i3 :: <Foreign.R.Type.SEXPTYPE>_N) (a5 :: <*>_N) (i4 :: <Foreign.R.Type.SEXPTYPE>_N) (i5 :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R <Language.R.Literal.Literal a1 i>_R
                 ->_R <Language.R.Literal.Literal a2 i1>_R
                 ->_R <Language.R.Literal.Literal a3 i2>_R
                 ->_R <Language.R.Literal.Literal a4 i3>_R
                 ->_R <Language.R.Literal.Literal a5 i4>_R
                 ->_R <Language.R.Literal.Literal a i5>_R
                 ->_R <a1 -> a2 -> a3 -> a4 -> a5 -> Language.R.Instance.R s a>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.ExtPtr>_R)) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr8_$cp1Literal ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3, Language.R.Literal.Literal a5 i4,
     Language.R.Literal.Literal a i5) =>
    Data.Singletons.SingI 'Foreign.R.Type.ExtPtr
  {- Arity: 7, Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><L,A>m21,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral(->)ExtPtr43
                  `cast`
                (forall (a :: <*>_N) (a1 :: <*>_N) (i :: <Foreign.R.Type.SEXPTYPE>_N) (a2 :: <*>_N) (i1 :: <Foreign.R.Type.SEXPTYPE>_N) (a3 :: <*>_N) (i2 :: <Foreign.R.Type.SEXPTYPE>_N) (a4 :: <*>_N) (i3 :: <Foreign.R.Type.SEXPTYPE>_N) (a5 :: <*>_N) (i4 :: <Foreign.R.Type.SEXPTYPE>_N) (i5 :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R <Language.R.Literal.Literal a1 i>_R
                 ->_R <Language.R.Literal.Literal a2 i1>_R
                 ->_R <Language.R.Literal.Literal a3 i2>_R
                 ->_R <Language.R.Literal.Literal a4 i3>_R
                 ->_R <Language.R.Literal.Literal a5 i4>_R
                 ->_R <Language.R.Literal.Literal a i5>_R
                 ->_R Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.ExtPtr>_N) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr9 ::
    (Control.DeepSeq.NFData a0, Language.R.Literal.Literal a1 i0,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3,
     Language.R.Literal.Literal a0 i4) =>
    Language.R.Literal.Literal
      (a1 -> a2 -> a3 -> a4 -> Language.R.Instance.R s0 a0)
      'Foreign.R.Type.ExtPtr
  DFunId
  {- Arity: 6,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      @ a1
                      @ (i :: Foreign.R.Type.SEXPTYPE)
                      @ a2
                      @ (i1 :: Foreign.R.Type.SEXPTYPE)
                      @ a3
                      @ (i2 :: Foreign.R.Type.SEXPTYPE)
                      @ a4
                      @ (i3 :: Foreign.R.Type.SEXPTYPE)
                      @ (i4 :: Foreign.R.Type.SEXPTYPE)
                      @ s
                      ($dNFData :: Control.DeepSeq.NFData a)
                      ($dLiteral :: Language.R.Literal.Literal a1 i)
                      ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                      ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                      ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                      ($dLiteral4 :: Language.R.Literal.Literal a i4).
                  @ (a1 -> a2 -> a3 -> a4 -> Language.R.Instance.R s a)
                  @ 'Foreign.R.Type.ExtPtr
                  (Language.R.Literal.$fLiteral(->)ExtPtr9_$cp1Literal
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ i4
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4)
                  (Language.R.Literal.$fLiteral(->)ExtPtr9_$cmkSEXPIO
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ i4
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4)
                  (Language.R.Literal.$fLiteral(->)ExtPtr9_$cfromSEXP
                     @ a
                     @ a1
                     @ i
                     @ a2
                     @ i1
                     @ a3
                     @ i2
                     @ a4
                     @ i3
                     @ i4
                     @ s
                     $dNFData
                     $dLiteral
                     $dLiteral1
                     $dLiteral2
                     $dLiteral3
                     $dLiteral4) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr9_$cfromSEXP ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3,
     Language.R.Literal.Literal a i4) =>
    forall s1.
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.ExtPtr
    -> a1 -> a2 -> a3 -> a4 -> Language.R.Instance.R s a
  {- Arity: 6, Strictness: <B,A><B,A><B,A><B,A><B,A><B,A>x,
     Unfolding: InlineRule (6, True, True)
                (\ @ a
                   @ a1
                   @ (i :: Foreign.R.Type.SEXPTYPE)
                   @ a2
                   @ (i1 :: Foreign.R.Type.SEXPTYPE)
                   @ a3
                   @ (i2 :: Foreign.R.Type.SEXPTYPE)
                   @ a4
                   @ (i3 :: Foreign.R.Type.SEXPTYPE)
                   @ (i4 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData a)
                   ($dLiteral :: Language.R.Literal.Literal a1 i)
                   ($dLiteral1 :: Language.R.Literal.Literal a2 i1)
                   ($dLiteral2 :: Language.R.Literal.Literal a3 i2)
                   ($dLiteral3 :: Language.R.Literal.Literal a4 i3)
                   ($dLiteral4 :: Language.R.Literal.Literal a i4)
                   @ s1 ->
                 Language.R.Literal.$fLiteral(->)ExtPtr44
                   @ s
                   @ a
                   @ a4
                   @ a3
                   @ a2
                   @ a1
                   @ s1) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr9_$cmkSEXPIO ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3,
     Language.R.Literal.Literal a i4) =>
    (a1 -> a2 -> a3 -> a4 -> Language.R.Instance.R s a)
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.ExtPtr)
  {- Arity: 8,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)><L,C(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral(->)ExtPtr45
                  `cast`
                (forall (a :: <*>_N) (a1 :: <*>_N) (i :: <Foreign.R.Type.SEXPTYPE>_N) (a2 :: <*>_N) (i1 :: <Foreign.R.Type.SEXPTYPE>_N) (a3 :: <*>_N) (i2 :: <Foreign.R.Type.SEXPTYPE>_N) (a4 :: <*>_N) (i3 :: <Foreign.R.Type.SEXPTYPE>_N) (i4 :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R <Language.R.Literal.Literal a1 i>_R
                 ->_R <Language.R.Literal.Literal a2 i1>_R
                 ->_R <Language.R.Literal.Literal a3 i2>_R
                 ->_R <Language.R.Literal.Literal a4 i3>_R
                 ->_R <Language.R.Literal.Literal a i4>_R
                 ->_R <a1 -> a2 -> a3 -> a4 -> Language.R.Instance.R s a>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.ExtPtr>_R)) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr9_$cp1Literal ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a1 i,
     Language.R.Literal.Literal a2 i1, Language.R.Literal.Literal a3 i2,
     Language.R.Literal.Literal a4 i3,
     Language.R.Literal.Literal a i4) =>
    Data.Singletons.SingI 'Foreign.R.Type.ExtPtr
  {- Arity: 6, Strictness: <L,A><L,A><L,A><L,A><L,A><L,A>m21,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral(->)ExtPtr46
                  `cast`
                (forall (a :: <*>_N) (a1 :: <*>_N) (i :: <Foreign.R.Type.SEXPTYPE>_N) (a2 :: <*>_N) (i1 :: <Foreign.R.Type.SEXPTYPE>_N) (a3 :: <*>_N) (i2 :: <Foreign.R.Type.SEXPTYPE>_N) (a4 :: <*>_N) (i3 :: <Foreign.R.Type.SEXPTYPE>_N) (i4 :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R <Language.R.Literal.Literal a1 i>_R
                 ->_R <Language.R.Literal.Literal a2 i1>_R
                 ->_R <Language.R.Literal.Literal a3 i2>_R
                 ->_R <Language.R.Literal.Literal a4 i3>_R
                 ->_R <Language.R.Literal.Literal a i4>_R
                 ->_R Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.ExtPtr>_N) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr_$cfromSEXP ::
    (Control.DeepSeq.NFData c, Language.R.Literal.Literal a a0,
     Language.R.Literal.Literal b b0,
     Language.R.Literal.Literal c c0) =>
    forall s1.
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.ExtPtr
    -> a -> b -> Language.R.Instance.R s c
  {- Arity: 4, Strictness: <B,A><B,A><B,A><B,A>x,
     Unfolding: InlineRule (4, True, True)
                (\ @ c
                   @ a
                   @ (a0 :: Foreign.R.Type.SEXPTYPE)
                   @ b
                   @ (b0 :: Foreign.R.Type.SEXPTYPE)
                   @ (c0 :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData c)
                   ($dLiteral :: Language.R.Literal.Literal a a0)
                   ($dLiteral1 :: Language.R.Literal.Literal b b0)
                   ($dLiteral2 :: Language.R.Literal.Literal c c0)
                   @ s1 ->
                 Language.R.Literal.$fLiteral(->)ExtPtr11 @ s @ c @ b @ a @ s1) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr_$cmkSEXPIO ::
    (Control.DeepSeq.NFData c, Language.R.Literal.Literal a a0,
     Language.R.Literal.Literal b b0,
     Language.R.Literal.Literal c c0) =>
    (a -> b -> Language.R.Instance.R s c)
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.ExtPtr)
  {- Arity: 6,
     Strictness: <L,C(H)><L,U(U,A,C(U))><L,U(U,A,C(U))><L,U(A,C(C1(U(U,U))),A)><L,C(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral(->)ExtPtr12
                  `cast`
                (forall (c :: <*>_N) (a :: <*>_N) (a0 :: <Foreign.R.Type.SEXPTYPE>_N) (b :: <*>_N) (b0 :: <Foreign.R.Type.SEXPTYPE>_N) (c0 :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData c>_R
                 ->_R <Language.R.Literal.Literal a a0>_R
                 ->_R <Language.R.Literal.Literal b b0>_R
                 ->_R <Language.R.Literal.Literal c c0>_R
                 ->_R <a -> b -> Language.R.Instance.R s c>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.ExtPtr>_R)) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral(->)ExtPtr_$cp1Literal ::
    (Control.DeepSeq.NFData c, Language.R.Literal.Literal a a0,
     Language.R.Literal.Literal b b0,
     Language.R.Literal.Literal c c0) =>
    Data.Singletons.SingI 'Foreign.R.Type.ExtPtr
  {- Arity: 4, Strictness: <L,A><L,A><L,A><L,A>m21,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral(->)ExtPtr13
                  `cast`
                (forall (c :: <*>_N) (a :: <*>_N) (a0 :: <Foreign.R.Type.SEXPTYPE>_N) (b :: <*>_N) (b0 :: <Foreign.R.Type.SEXPTYPE>_N) (c0 :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData c>_R
                 ->_R <Language.R.Literal.Literal a a0>_R
                 ->_R <Language.R.Literal.Literal b b0>_R
                 ->_R <Language.R.Literal.Literal c c0>_R
                 ->_R Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.ExtPtr>_N) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteralComplexComplex ::
    Language.R.Literal.Literal
      (Data.Complex.Complex GHC.Types.Double) 'Foreign.R.Type.Complex
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Complex.Complex GHC.Types.Double)
                  @ 'Foreign.R.Type.Complex
                  Foreign.R.Type.$fSingISEXPTYPEComplex_$s$WSComplex
                    `cast`
                  (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Complex>_N)
                  Language.R.Literal.$fLiteralComplexComplex_$cmkSEXPIO
                  Language.R.Literal.$fLiteralComplexComplex_$cfromSEXP -}
d2a9ed671ac873b183da9dcb89b1a85c
  $fLiteralComplexComplex1 :: Data.Complex.Complex GHC.Types.Double
  {- Strictness: x -}
d1b4e0d9332f1df17f29cdcff77ba0c0
  $fLiteralComplexComplex2 ::
    Data.Complex.Complex GHC.Types.Double
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Complex #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Data.Complex.Complex GHC.Types.Double)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Language.R.Literal.$fLiteralComplexComplex4
                   @ Control.Memory.Region.V
                   @ 'Foreign.R.Type.Complex
                   Language.R.Literal.$fLiteralComplexComplex_$s$fStorableComplex
                     `cast`
                   (Foreign.Storable.Storable
                      (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[4]
                                <Control.Memory.Region.Void>_N)))_R
                   Language.R.Literal.$fLiteralComplexComplex3
                     `cast`
                   (GHC.Classes.(%,%)
                      <Data.Singletons.SingI 'Foreign.R.Type.Complex>_N
                      (Trans
                           (Sym (Foreign.R.Constraints.D:R::∈[1]
                                     <'['Foreign.R.Type.String, 'Foreign.R.Type.Vector,
                                        'Foreign.R.Type.Expr, 'Foreign.R.Type.WeakRef,
                                        'Foreign.R.Type.Raw]>_N
                                     <'Foreign.R.Type.Complex>_N))
                           (Trans
                                (Sym (Foreign.R.Constraints.D:R::∈[2]
                                          <'['Foreign.R.Type.Complex, 'Foreign.R.Type.String,
                                             'Foreign.R.Type.Vector, 'Foreign.R.Type.Expr,
                                             'Foreign.R.Type.WeakRef, 'Foreign.R.Type.Raw]>_N
                                          <'Foreign.R.Type.Real>_N
                                          <'Foreign.R.Type.Complex>_N))
                                (Trans
                                     (Sym (Foreign.R.Constraints.D:R::∈[2]
                                               <'['Foreign.R.Type.Real, 'Foreign.R.Type.Complex,
                                                  'Foreign.R.Type.String, 'Foreign.R.Type.Vector,
                                                  'Foreign.R.Type.Expr, 'Foreign.R.Type.WeakRef,
                                                  'Foreign.R.Type.Raw]>_N
                                               <'Foreign.R.Type.Int>_N
                                               <'Foreign.R.Type.Complex>_N))
                                     (Trans
                                          (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                    <'['Foreign.R.Type.Int, 'Foreign.R.Type.Real,
                                                       'Foreign.R.Type.Complex,
                                                       'Foreign.R.Type.String,
                                                       'Foreign.R.Type.Vector, 'Foreign.R.Type.Expr,
                                                       'Foreign.R.Type.WeakRef,
                                                       'Foreign.R.Type.Raw]>_N
                                                    <'Foreign.R.Type.Logical>_N
                                                    <'Foreign.R.Type.Complex>_N))
                                          (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                    <'['Foreign.R.Type.Logical, 'Foreign.R.Type.Int,
                                                       'Foreign.R.Type.Real,
                                                       'Foreign.R.Type.Complex,
                                                       'Foreign.R.Type.String,
                                                       'Foreign.R.Type.Vector, 'Foreign.R.Type.Expr,
                                                       'Foreign.R.Type.WeakRef,
                                                       'Foreign.R.Type.Raw]>_N
                                                    <'Foreign.R.Type.Char>_N
                                                    <'Foreign.R.Type.Complex>_N)))))))_R
                   Foreign.R.Type.$fSingISEXPTYPEComplex_$s$WSComplex
                   (GHC.Base.build
                      @ (GHC.Types.IO (Data.Complex.Complex GHC.Types.Double))
                      (\ @ b1
                         (c :: GHC.Types.IO (Data.Complex.Complex GHC.Types.Double)
                               -> b1 -> b1)[OneShot]
                         (n :: b1)[OneShot] ->
                       GHC.Base.mapFB
                         @ (GHC.Types.IO (Data.Complex.Complex GHC.Types.Double))
                         @ b1
                         @ (Data.Complex.Complex GHC.Types.Double)
                         c
                         (GHC.Base.returnIO1 @ (Data.Complex.Complex GHC.Types.Double))
                           `cast`
                         (<Data.Complex.Complex GHC.Types.Double>_R
                          ->_R Sym (GHC.Types.N:IO[0]
                                        <Data.Complex.Complex GHC.Types.Double>_R))
                         x
                         n))
                     `cast`
                   ([(GHC.Types.IO
                        (Sub (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[4]
                                       <Control.Memory.Region.Void>_N))))_R])_R
                   eta) -}
5b99fbf6aff6a20b816b83bbb3ec36e7
  $fLiteralComplexComplex3 ::
    (Data.Singletons.SingI 'Foreign.R.Type.Complex, ())
  {- Strictness: m,
     Unfolding: ((Foreign.R.Type.$fSingISEXPTYPEComplex_$s$WSComplex
                    `cast`
                  (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Complex>_N),
                  GHC.Classes.C:(%%))) -}
d44bf93db6710524c14f2ce671767d53
  $fLiteralComplexComplex4 ::
    (Foreign.Storable.Storable (Data.Vector.SEXP.Base.ElemRep s a),
     Foreign.R.Type.IsVector a) =>
    Foreign.R.Type.SSEXPTYPE a
    -> [GHC.Types.IO (Data.Vector.SEXP.Base.ElemRep s a)]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s a #)
  {- Arity: 5,
     Strictness: <L,U(A,A,A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><L,A><S,1*U><S,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (w :: Foreign.Storable.Storable
                           (Data.Vector.SEXP.Base.ElemRep s a))
                   (w1 :: Foreign.R.Type.IsVector a)
                   (w2 :: Foreign.R.Type.SSEXPTYPE a)
                   (w3 :: [GHC.Types.IO (Data.Vector.SEXP.Base.ElemRep s a)])
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Language.R.Literal.$wmkSEXPVectorIO @ s @ a w w2 w3 w4) -}
43526b1f8cee0277c7aa8eb39af1ca15
  $fLiteralComplexComplex5 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 0# 9223372036854775807#) -}
d12179d35e0b1e207f6f5ca48875b72b
  $fLiteralComplexComplex_$cfromSEXP ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Complex
    -> Data.Complex.Complex GHC.Types.Double
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ s (ds :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Complex) ->
                 case Language.R.Literal.$fLiteralComplexComplex_$cfromSEXP1
                        @ s
                        ds of wild {
                   [] -> Language.R.Literal.$fLiteralComplexComplex1
                   : x ds1
                   -> case ds1 of wild1 {
                        [] -> x
                        : ipv ipv1 -> Language.R.Literal.$fLiteralComplexComplex1 } }) -}
54eca777cc62056e7a6d97fc5853f65c
  $fLiteralComplexComplex_$cfromSEXP1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Complex
    -> [Data.Complex.Complex GHC.Types.Double]
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ @ s (w :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Complex) ->
                 case w `cast`
                      (Foreign.R.Internal.N:SEXP[0]
                           <s>_P <'Foreign.R.Type.Complex>_P) of ww { GHC.Ptr.Ptr ww1 ->
                 Language.R.Literal.$w$cfromSEXP @ s ww1 }) -}
4ec6a198c0cd0f2b29b91fa9b9c68a1d
  $fLiteralComplexComplex_$cmkSEXPIO ::
    Data.Complex.Complex GHC.Types.Double
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Complex)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteralComplexComplex2
                  `cast`
                (<Data.Complex.Complex GHC.Types.Double>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.Complex>_R)) -}
e4c12e276e49d59e9213792c995cdac2
  $fLiteralComplexComplex_$s$fStorableComplex ::
    Foreign.Storable.Storable (Data.Complex.Complex GHC.Types.Double)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Complex.Complex GHC.Types.Double)
                  Language.R.Literal.$fLiteralComplexComplex_$s$fStorableComplex_$csizeOf
                  Language.R.Literal.$fLiteralComplexComplex_$s$fStorableComplex_$calignment
                  (Data.Complex.$fStorableComplex_$cpeekElemOff
                     @ GHC.Types.Double
                     Foreign.Storable.$fStorableDouble)
                  (Data.Complex.$fStorableComplex_$cpokeElemOff
                     @ GHC.Types.Double
                     Foreign.Storable.$fStorableDouble)
                  (Data.Complex.$fStorableComplex_$cpeekByteOff
                     @ GHC.Types.Double
                     Foreign.Storable.$fStorableDouble)
                  (Data.Complex.$fStorableComplex_$cpokeByteOff
                     @ GHC.Types.Double
                     Foreign.Storable.$fStorableDouble)
                  (Data.Complex.$fStorableComplex_$cpeek
                     @ GHC.Types.Double
                     Foreign.Storable.$fStorableDouble)
                  (Data.Complex.$fStorableComplex_$cpoke
                     @ GHC.Types.Double
                     Foreign.Storable.$fStorableDouble) -}
3247e7efe1b175e0986846d21567e4da
  $fLiteralComplexComplex_$s$fStorableComplex_$calignment ::
    Data.Complex.Complex GHC.Types.Double -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a1 :: Data.Complex.Complex GHC.Types.Double) ->
                 Foreign.Storable.$fStorableDouble_$calignment
                   (case a1 of wild { Data.Complex.:+ x ds -> x })) -}
bd627cbe459c1c56a749f151d4487d6d
  $fLiteralComplexComplex_$s$fStorableComplex_$csizeOf ::
    Data.Complex.Complex GHC.Types.Double -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a1 :: Data.Complex.Complex GHC.Types.Double) ->
                 case Foreign.Storable.$fStorableDouble_$calignment
                        (case a1 of wild { Data.Complex.:+ x ds ->
                         x }) of wild1 { GHC.Types.I# y ->
                 GHC.Types.I# (GHC.Prim.*# 2# y) }) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteralDoubleReal ::
    Language.R.Literal.Literal GHC.Types.Double 'Foreign.R.Type.Real
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.Double
                  @ 'Foreign.R.Type.Real
                  Foreign.R.Type.$fSingISEXPTYPEReal_$s$WSReal
                    `cast`
                  (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Real>_N)
                  Language.R.Literal.$fLiteralDoubleReal_$cmkSEXPIO
                  Language.R.Literal.$fLiteralDoubleReal_$cfromSEXP -}
226ee430f32323a46a5554efb9423218
  $fLiteralDoubleReal1 :: GHC.Types.Double
  {- Strictness: x -}
a8b243bf89fd2bcbf60c196c0ac6fc50
  $fLiteralDoubleReal2 ::
    GHC.Types.Double
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Real #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Double)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Language.R.Literal.$fLiteralComplexComplex4
                   @ Control.Memory.Region.V
                   @ 'Foreign.R.Type.Real
                   Foreign.Storable.$fStorableDouble
                     `cast`
                   (Foreign.Storable.Storable
                      (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[3]
                                <Control.Memory.Region.Void>_N)))_R
                   Language.R.Literal.$fLiteralDoubleReal3
                     `cast`
                   (GHC.Classes.(%,%)
                      <Data.Singletons.SingI 'Foreign.R.Type.Real>_N
                      (Trans
                           (Sym (Foreign.R.Constraints.D:R::∈[1]
                                     <'['Foreign.R.Type.Complex, 'Foreign.R.Type.String,
                                        'Foreign.R.Type.Vector, 'Foreign.R.Type.Expr,
                                        'Foreign.R.Type.WeakRef, 'Foreign.R.Type.Raw]>_N
                                     <'Foreign.R.Type.Real>_N))
                           (Trans
                                (Sym (Foreign.R.Constraints.D:R::∈[2]
                                          <'['Foreign.R.Type.Real, 'Foreign.R.Type.Complex,
                                             'Foreign.R.Type.String, 'Foreign.R.Type.Vector,
                                             'Foreign.R.Type.Expr, 'Foreign.R.Type.WeakRef,
                                             'Foreign.R.Type.Raw]>_N
                                          <'Foreign.R.Type.Int>_N
                                          <'Foreign.R.Type.Real>_N))
                                (Trans
                                     (Sym (Foreign.R.Constraints.D:R::∈[2]
                                               <'['Foreign.R.Type.Int, 'Foreign.R.Type.Real,
                                                  'Foreign.R.Type.Complex, 'Foreign.R.Type.String,
                                                  'Foreign.R.Type.Vector, 'Foreign.R.Type.Expr,
                                                  'Foreign.R.Type.WeakRef, 'Foreign.R.Type.Raw]>_N
                                               <'Foreign.R.Type.Logical>_N
                                               <'Foreign.R.Type.Real>_N))
                                     (Sym (Foreign.R.Constraints.D:R::∈[2]
                                               <'['Foreign.R.Type.Logical, 'Foreign.R.Type.Int,
                                                  'Foreign.R.Type.Real, 'Foreign.R.Type.Complex,
                                                  'Foreign.R.Type.String, 'Foreign.R.Type.Vector,
                                                  'Foreign.R.Type.Expr, 'Foreign.R.Type.WeakRef,
                                                  'Foreign.R.Type.Raw]>_N
                                               <'Foreign.R.Type.Char>_N
                                               <'Foreign.R.Type.Real>_N))))))_R
                   Foreign.R.Type.$fSingISEXPTYPEReal_$s$WSReal
                   (GHC.Base.build
                      @ (GHC.Types.IO GHC.Types.Double)
                      (\ @ b1
                         (c :: GHC.Types.IO GHC.Types.Double -> b1 -> b1)[OneShot]
                         (n :: b1)[OneShot] ->
                       GHC.Base.mapFB
                         @ (GHC.Types.IO GHC.Types.Double)
                         @ b1
                         @ GHC.Types.Double
                         c
                         (GHC.Base.returnIO1 @ GHC.Types.Double)
                           `cast`
                         (<GHC.Types.Double>_R
                          ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Double>_R))
                         x
                         n))
                     `cast`
                   ([(GHC.Types.IO
                        (Sub (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[3]
                                       <Control.Memory.Region.Void>_N))))_R])_R
                   eta) -}
dc6b6eba88316c9d398a360608f6b323
  $fLiteralDoubleReal3 ::
    (Data.Singletons.SingI 'Foreign.R.Type.Real, ())
  {- Strictness: m,
     Unfolding: ((Foreign.R.Type.$fSingISEXPTYPEReal_$s$WSReal
                    `cast`
                  (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Real>_N),
                  GHC.Classes.C:(%%))) -}
702e39e06cbd850bc678b17c7429f42c
  $fLiteralDoubleReal_$cfromSEXP ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Real -> GHC.Types.Double
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ s (ds :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Real) ->
                 case Language.R.Literal.$fLiteralDoubleReal_$cfromSEXP1
                        @ s
                        ds of wild {
                   [] -> Language.R.Literal.$fLiteralDoubleReal1
                   : x ds1
                   -> case ds1 of wild1 {
                        [] -> x
                        : ipv ipv1 -> Language.R.Literal.$fLiteralDoubleReal1 } }) -}
1f59ea08776847118e91fce349a557e7
  $fLiteralDoubleReal_$cfromSEXP1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Real
    -> [GHC.Types.Double]
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ @ s (w :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Real) ->
                 case w `cast`
                      (Foreign.R.Internal.N:SEXP[0]
                           <s>_P <'Foreign.R.Type.Real>_P) of ww { GHC.Ptr.Ptr ww1 ->
                 Language.R.Literal.$w$cfromSEXP1 @ s ww1 }) -}
95e6806b65a26adbf53006bab4cd66bd
  $fLiteralDoubleReal_$cmkSEXPIO ::
    GHC.Types.Double
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Real)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteralDoubleReal2
                  `cast`
                (<GHC.Types.Double>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.Real>_R)) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteralInt32Int ::
    Language.R.Literal.Literal GHC.Int.Int32 'Foreign.R.Type.Int
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Int.Int32
                  @ 'Foreign.R.Type.Int
                  Foreign.R.Type.$fSingISEXPTYPEInt_$s$WSInt
                    `cast`
                  (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Int>_N)
                  Language.R.Literal.$fLiteralInt32Int_$cmkSEXPIO
                  Language.R.Literal.$fLiteralInt32Int_$cfromSEXP -}
c3ecee768914b9b71933e686e16be77d
  $fLiteralInt32Int1 :: GHC.Int.Int32
  {- Strictness: x -}
e8ab907df3805d0dc48c54d9a92083b6
  $fLiteralInt32Int2 ::
    GHC.Int.Int32
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Int #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Int.Int32)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Language.R.Literal.$fLiteralComplexComplex4
                   @ Control.Memory.Region.V
                   @ 'Foreign.R.Type.Int
                   Foreign.Storable.$fStorableInt32
                     `cast`
                   (Foreign.Storable.Storable
                      (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[2]
                                <Control.Memory.Region.Void>_N)))_R
                   Language.R.Literal.$fLiteralInt32Int3
                     `cast`
                   (GHC.Classes.(%,%)
                      <Data.Singletons.SingI 'Foreign.R.Type.Int>_N
                      (Trans
                           (Sym (Foreign.R.Constraints.D:R::∈[1]
                                     <'['Foreign.R.Type.Real, 'Foreign.R.Type.Complex,
                                        'Foreign.R.Type.String, 'Foreign.R.Type.Vector,
                                        'Foreign.R.Type.Expr, 'Foreign.R.Type.WeakRef,
                                        'Foreign.R.Type.Raw]>_N
                                     <'Foreign.R.Type.Int>_N))
                           (Trans
                                (Sym (Foreign.R.Constraints.D:R::∈[2]
                                          <'['Foreign.R.Type.Int, 'Foreign.R.Type.Real,
                                             'Foreign.R.Type.Complex, 'Foreign.R.Type.String,
                                             'Foreign.R.Type.Vector, 'Foreign.R.Type.Expr,
                                             'Foreign.R.Type.WeakRef, 'Foreign.R.Type.Raw]>_N
                                          <'Foreign.R.Type.Logical>_N
                                          <'Foreign.R.Type.Int>_N))
                                (Sym (Foreign.R.Constraints.D:R::∈[2]
                                          <'['Foreign.R.Type.Logical, 'Foreign.R.Type.Int,
                                             'Foreign.R.Type.Real, 'Foreign.R.Type.Complex,
                                             'Foreign.R.Type.String, 'Foreign.R.Type.Vector,
                                             'Foreign.R.Type.Expr, 'Foreign.R.Type.WeakRef,
                                             'Foreign.R.Type.Raw]>_N
                                          <'Foreign.R.Type.Char>_N
                                          <'Foreign.R.Type.Int>_N)))))_R
                   Foreign.R.Type.$fSingISEXPTYPEInt_$s$WSInt
                   (GHC.Base.build
                      @ (GHC.Types.IO GHC.Int.Int32)
                      (\ @ b1
                         (c :: GHC.Types.IO GHC.Int.Int32 -> b1 -> b1)[OneShot]
                         (n :: b1)[OneShot] ->
                       GHC.Base.mapFB
                         @ (GHC.Types.IO GHC.Int.Int32)
                         @ b1
                         @ GHC.Int.Int32
                         c
                         (GHC.Base.returnIO1 @ GHC.Int.Int32)
                           `cast`
                         (<GHC.Int.Int32>_R ->_R Sym (GHC.Types.N:IO[0] <GHC.Int.Int32>_R))
                         x
                         n))
                     `cast`
                   ([(GHC.Types.IO
                        (Sub (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[2]
                                       <Control.Memory.Region.Void>_N))))_R])_R
                   eta) -}
79e904a9503de9a9d61ad47c5c837c74
  $fLiteralInt32Int3 ::
    (Data.Singletons.SingI 'Foreign.R.Type.Int, ())
  {- Strictness: m,
     Unfolding: ((Foreign.R.Type.$fSingISEXPTYPEInt_$s$WSInt
                    `cast`
                  (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Int>_N),
                  GHC.Classes.C:(%%))) -}
eaac6d4478d0bf271ea29660fbc93601
  $fLiteralInt32Int_$cfromSEXP ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Int -> GHC.Int.Int32
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ s (ds :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Int) ->
                 case Language.R.Literal.$fLiteralInt32Int_$cfromSEXP1
                        @ s
                        ds of wild {
                   [] -> Language.R.Literal.$fLiteralInt32Int1
                   : x ds1
                   -> case ds1 of wild1 {
                        [] -> x : ipv ipv1 -> Language.R.Literal.$fLiteralInt32Int1 } }) -}
a37f28106148d6801ceeabac7ce297ab
  $fLiteralInt32Int_$cfromSEXP1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Int -> [GHC.Int.Int32]
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ @ s (w :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Int) ->
                 case w `cast`
                      (Foreign.R.Internal.N:SEXP[0]
                           <s>_P <'Foreign.R.Type.Int>_P) of ww { GHC.Ptr.Ptr ww1 ->
                 Language.R.Literal.$w$cfromSEXP2 @ s ww1 }) -}
00677e212a19bf7f13cc1aa389951bdd
  $fLiteralInt32Int_$cmkSEXPIO ::
    GHC.Int.Int32
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Int)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteralInt32Int2
                  `cast`
                (<GHC.Int.Int32>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.Int>_R)) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteralLogicalLogical ::
    Language.R.Literal.Literal
      Foreign.R.Type.Logical 'Foreign.R.Type.Logical
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.R.Type.Logical
                  @ 'Foreign.R.Type.Logical
                  Foreign.R.Type.$fSingISEXPTYPELogical_$s$WSLogical
                    `cast`
                  (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Logical>_N)
                  Language.R.Literal.$fLiteralLogicalLogical_$cmkSEXPIO
                  Language.R.Literal.$fLiteralLogicalLogical_$cfromSEXP -}
2323cbe007686de9a45fe70f4ed3aa43
  $fLiteralLogicalLogical1 :: Foreign.R.Type.Logical
  {- Strictness: x -}
ae8af85904bfc5b243c7ad162eb441e7
  $fLiteralLogicalLogical2 ::
    Foreign.R.Type.Logical
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Logical #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Foreign.R.Type.Logical)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Language.R.Literal.$fLiteralComplexComplex4
                   @ Control.Memory.Region.V
                   @ 'Foreign.R.Type.Logical
                   Foreign.R.Type.$fStorableLogical
                     `cast`
                   (Foreign.Storable.Storable
                      (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[1]
                                <Control.Memory.Region.Void>_N)))_R
                   Language.R.Literal.$fLiteralLogicalLogical3
                     `cast`
                   (GHC.Classes.(%,%)
                      <Data.Singletons.SingI 'Foreign.R.Type.Logical>_N
                      (Trans
                           (Sym (Foreign.R.Constraints.D:R::∈[1]
                                     <'['Foreign.R.Type.Int, 'Foreign.R.Type.Real,
                                        'Foreign.R.Type.Complex, 'Foreign.R.Type.String,
                                        'Foreign.R.Type.Vector, 'Foreign.R.Type.Expr,
                                        'Foreign.R.Type.WeakRef, 'Foreign.R.Type.Raw]>_N
                                     <'Foreign.R.Type.Logical>_N))
                           (Sym (Foreign.R.Constraints.D:R::∈[2]
                                     <'['Foreign.R.Type.Logical, 'Foreign.R.Type.Int,
                                        'Foreign.R.Type.Real, 'Foreign.R.Type.Complex,
                                        'Foreign.R.Type.String, 'Foreign.R.Type.Vector,
                                        'Foreign.R.Type.Expr, 'Foreign.R.Type.WeakRef,
                                        'Foreign.R.Type.Raw]>_N
                                     <'Foreign.R.Type.Char>_N
                                     <'Foreign.R.Type.Logical>_N))))_R
                   Foreign.R.Type.$fSingISEXPTYPELogical_$s$WSLogical
                   (GHC.Base.build
                      @ (GHC.Types.IO Foreign.R.Type.Logical)
                      (\ @ b1
                         (c :: GHC.Types.IO Foreign.R.Type.Logical -> b1 -> b1)[OneShot]
                         (n :: b1)[OneShot] ->
                       GHC.Base.mapFB
                         @ (GHC.Types.IO Foreign.R.Type.Logical)
                         @ b1
                         @ Foreign.R.Type.Logical
                         c
                         (GHC.Base.returnIO1 @ Foreign.R.Type.Logical)
                           `cast`
                         (<Foreign.R.Type.Logical>_R
                          ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Type.Logical>_R))
                         x
                         n))
                     `cast`
                   ([(GHC.Types.IO
                        (Sub (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[1]
                                       <Control.Memory.Region.Void>_N))))_R])_R
                   eta) -}
0f0b786690be33c98ca3bb9a2e837997
  $fLiteralLogicalLogical3 ::
    (Data.Singletons.SingI 'Foreign.R.Type.Logical, ())
  {- Strictness: m,
     Unfolding: ((Foreign.R.Type.$fSingISEXPTYPELogical_$s$WSLogical
                    `cast`
                  (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Logical>_N),
                  GHC.Classes.C:(%%))) -}
02538d0e4cb91b87def6bf921f748329
  $fLiteralLogicalLogical_$cfromSEXP ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Logical
    -> Foreign.R.Type.Logical
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ s (ds :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Logical) ->
                 case Language.R.Literal.$fLiteralLogicalLogical_$cfromSEXP1
                        @ s
                        ds of wild {
                   [] -> Language.R.Literal.$fLiteralLogicalLogical1
                   : x ds1
                   -> case ds1 of wild1 {
                        [] -> x
                        : ipv ipv1 -> Language.R.Literal.$fLiteralLogicalLogical1 } }) -}
3d415a6d424b9f2c24c7da757bd16271
  $fLiteralLogicalLogical_$cfromSEXP1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Logical
    -> [Foreign.R.Type.Logical]
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ @ s (w :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Logical) ->
                 case w `cast`
                      (Foreign.R.Internal.N:SEXP[0]
                           <s>_P <'Foreign.R.Type.Logical>_P) of ww { GHC.Ptr.Ptr ww1 ->
                 Language.R.Literal.$w$cfromSEXP3 @ s ww1 }) -}
593527e7edc7fc58c4ab431cc1fa4ba3
  $fLiteralLogicalLogical_$cmkSEXPIO ::
    Foreign.R.Type.Logical
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Logical)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteralLogicalLogical2
                  `cast`
                (<Foreign.R.Type.Logical>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.Logical>_R)) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteralMVectorty ::
    Data.Vector.SEXP.Base.VECTOR Control.Memory.Region.V ty a =>
    Language.R.Literal.Literal
      (Data.Vector.SEXP.Mutable.Internal.MVector
         Control.Memory.Region.V ty a)
      ty
  DFunId
  {- Arity: 1, Strictness: <L,U(U,U(U,U),A,U(U))>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (ty :: Foreign.R.Type.SEXPTYPE)
                      @ a
                      ($d(%,,,%) :: Data.Vector.SEXP.Base.VECTOR
                                      Control.Memory.Region.V ty a).
                  @ (Data.Vector.SEXP.Mutable.Internal.MVector
                       Control.Memory.Region.V ty a)
                  @ ty
                  (Language.R.Literal.$fLiteralMVectorty_$cp1Literal
                     @ ty
                     @ a
                     $d(%,,,%))
                  (Language.R.Literal.$fLiteralMVectorty_$cmkSEXPIO
                     @ ty
                     @ a
                     $d(%,,,%))
                  (Language.R.Literal.$fLiteralMVectorty_$cfromSEXP
                     @ ty
                     @ a
                     $d(%,,,%)) -}
c1869c50eb69f5ac5cf5f79a52a30916
  $fLiteralMVectorty1 ::
    Data.Vector.SEXP.Base.VECTOR Control.Memory.Region.V ty a =>
    Data.Vector.SEXP.Mutable.Internal.MVector
      Control.Memory.Region.V ty a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP Control.Memory.Region.V ty #)
  {- Arity: 3,
     Strictness: <S(LLLS(S)),U(U,U,A,U(U))><L,1*U(U,U,U)><S,U>,
     Unfolding: (\ @ (ty :: Foreign.R.Type.SEXPTYPE)
                   @ a
                   ($d(%,,,%) :: Data.Vector.SEXP.Base.VECTOR
                                   Control.Memory.Region.V ty a)
                   (eta :: Data.Vector.SEXP.Mutable.Internal.MVector
                             Control.Memory.Region.V ty a)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Types.HEq_sc
                        @ *
                        @ *
                        @ (Data.Vector.SEXP.Base.ElemRep Control.Memory.Region.V ty)
                        @ a
                        (GHC.Classes.$p4(%,,,%)
                           @ (Foreign.Storable.Storable a)
                           @ (Foreign.R.Type.IsVector ty)
                           @ (Data.Singletons.SingI ty)
                           @ (Data.Vector.SEXP.Base.ElemRep Control.Memory.Region.V ty
                              Data.Type.Equality.~ a)
                           $d(%,,,%))
                          `cast`
                        (Data.Type.Equality.N:~[0] <*>_N <Data.Vector.SEXP.Base.ElemRep
                                                            Control.Memory.Region.V
                                                            ty>_N <a>_N) of cobox0 { DEFAULT ->
                 (Language.R.Instance.runRegion2
                    @ (Foreign.R.Internal.SEXP
                         (Control.Monad.R.Class.Region
                            (Language.R.Instance.R Control.Memory.Region.Void))
                         ty)
                    @ Control.Memory.Region.Void
                    (Foreign.R.Internal.$fNFDataSEXP_$crnf
                       @ Control.Memory.Region.Void
                       @ ty)
                      `cast`
                    (Sym (Control.DeepSeq.N:NFData[0]
                              (Foreign.R.Internal.SEXP
                                 (Language.R.Instance.D:R:PrimStateR[0]
                                      <Control.Memory.Region.Void>_N)
                                 <ty>_N)_N))
                    (case eta
                            `cast`
                          (Data.Vector.SEXP.Mutable.Internal.MVector
                             <Control.Memory.Region.Void, Control.Monad.Primitive.PrimState
                                                            (Language.R.Instance.R
                                                               Control.Memory.Region.Void)>
                             <ty>_P
                             <a>_P)_R of ww { Data.Vector.SEXP.Mutable.Internal.MVector ww1 ww2 ww3 ->
                     Data.Vector.SEXP.Mutable.$wtoSEXP
                       @ (Language.R.Instance.R Control.Memory.Region.Void)
                       @ ty
                       @ a
                       (Language.R.Instance.$fMonadRR @ Control.Memory.Region.Void)
                       $d(%,,,%)
                         `cast`
                       (GHC.Classes.(%,,,%)
                          <Foreign.Storable.Storable a>_N
                          <(Data.Singletons.SingI ty,
                            ty
                            Foreign.R.Constraints.:∈ '['Foreign.R.Type.Char,
                                                       'Foreign.R.Type.Logical, 'Foreign.R.Type.Int,
                                                       'Foreign.R.Type.Real,
                                                       'Foreign.R.Type.Complex,
                                                       'Foreign.R.Type.String,
                                                       'Foreign.R.Type.Vector, 'Foreign.R.Type.Expr,
                                                       'Foreign.R.Type.WeakRef,
                                                       'Foreign.R.Type.Raw])>_N
                          <Data.Singletons.SingI ty>_N
                          ((Data.Type.Equality.~)
                             <*>_N
                             (Data.Vector.SEXP.Base.ElemRep
                                (Sym (Language.R.Instance.D:R:PrimStateR[0]
                                          <Control.Memory.Region.Void>_N))
                                <ty>_N)_N
                             <a>_N)_N)_R
                       ww1
                       ww2
                       ww3 })
                    eta1)
                   `cast`
                 ((#,#)
                    <'GHC.Types.VoidRep>_R
                    <'GHC.Types.PtrRepLifted>_R
                    <GHC.Prim.State# GHC.Prim.RealWorld>_R
                    (Foreign.R.Internal.SEXP
                       <Control.Monad.Primitive.PrimState
                          (Language.R.Instance.R
                             Control.Memory.Region.Void), Control.Memory.Region.Void>
                       <ty>_P)_R)_R }) -}
d9ba7c3ef5f9a7332a9448f3ca625d84
  $fLiteralMVectorty_$cfromSEXP ::
    Data.Vector.SEXP.Base.VECTOR Control.Memory.Region.V ty a =>
    forall s.
    Foreign.R.Internal.SEXP s ty
    -> Data.Vector.SEXP.Mutable.Internal.MVector
         Control.Memory.Region.V ty a
  {- Arity: 2,
     Strictness: <S(LS(SL)LS(S)),U(A,1*U(1*U,A),A,U(U))><S(S),1*U(U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ (ty :: Foreign.R.Type.SEXPTYPE)
                   @ a
                   (w :: Data.Vector.SEXP.Base.VECTOR Control.Memory.Region.V ty a)
                   @ s
                   (w1 :: Foreign.R.Internal.SEXP s ty) ->
                 case w1
                        `cast`
                      (Foreign.R.Internal.N:SEXP[0]
                           <s>_P <ty>_P) of ww { GHC.Ptr.Ptr ww1 ->
                 case Language.R.Literal.$w$cfromSEXP4
                        @ ty
                        @ a
                        w
                        @ s
                        ww1 of ww2 { (#,,#) ww3 ww4 ww5 ->
                 Data.Vector.SEXP.Mutable.Internal.MVector
                   @ Control.Memory.Region.V
                   @ ty
                   @ a
                   ww3
                   ww4
                   ww5 } }) -}
3f2ccb2010bf16720867c79bc43bc37f
  $fLiteralMVectorty_$cmkSEXPIO ::
    Data.Vector.SEXP.Base.VECTOR Control.Memory.Region.V ty a =>
    Data.Vector.SEXP.Mutable.Internal.MVector
      Control.Memory.Region.V ty a
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP Control.Memory.Region.V ty)
  {- Arity: 3,
     Strictness: <S(LLLS(S)),U(U,U,A,U(U))><L,1*U(U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteralMVectorty1
                  `cast`
                (forall (ty :: <Foreign.R.Type.SEXPTYPE>_N) (a :: <*>_N).
                 <Data.Vector.SEXP.Base.VECTOR Control.Memory.Region.V ty a>_R
                 ->_R <Data.Vector.SEXP.Mutable.Internal.MVector
                         Control.Memory.Region.V ty a>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP Control.Memory.Region.V ty>_R)) -}
e92f8cc57bc54a770208a854d71dbae8
  $fLiteralMVectorty_$cp1Literal ::
    Data.Vector.SEXP.Base.VECTOR Control.Memory.Region.V ty a =>
    Data.Singletons.SingI ty
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LS(SL)LS(S)),U(A,1*U(1*U,A),A,1*U(1*U))>,
     Unfolding: (\ @ (ty :: Foreign.R.Type.SEXPTYPE)
                   @ a
                   ($d(%,,,%) :: Data.Vector.SEXP.Base.VECTOR
                                   Control.Memory.Region.V ty a) ->
                 case GHC.Types.HEq_sc
                        @ *
                        @ *
                        @ (Data.Vector.SEXP.Base.ElemRep Control.Memory.Region.V ty)
                        @ a
                        (GHC.Classes.$p4(%,,,%)
                           @ (Foreign.Storable.Storable a)
                           @ (Foreign.R.Type.IsVector ty)
                           @ (Data.Singletons.SingI ty)
                           @ (Data.Vector.SEXP.Base.ElemRep Control.Memory.Region.V ty
                              Data.Type.Equality.~ a)
                           $d(%,,,%))
                          `cast`
                        (Data.Type.Equality.N:~[0] <*>_N <Data.Vector.SEXP.Base.ElemRep
                                                            Control.Memory.Region.V
                                                            ty>_N <a>_N) of cobox0 { DEFAULT ->
                 GHC.Classes.$p1(%,%)
                   @ (Data.Singletons.SingI ty)
                   @ (ty
                      Foreign.R.Constraints.:∈ '['Foreign.R.Type.Char,
                                                 'Foreign.R.Type.Logical, 'Foreign.R.Type.Int,
                                                 'Foreign.R.Type.Real, 'Foreign.R.Type.Complex,
                                                 'Foreign.R.Type.String, 'Foreign.R.Type.Vector,
                                                 'Foreign.R.Type.Expr, 'Foreign.R.Type.WeakRef,
                                                 'Foreign.R.Type.Raw])
                   (GHC.Classes.$p2(%,,,%)
                      @ (Foreign.Storable.Storable a)
                      @ (Foreign.R.Type.IsVector ty)
                      @ (Data.Singletons.SingI ty)
                      @ (Data.Vector.SEXP.Base.ElemRep Control.Memory.Region.V ty
                         Data.Type.Equality.~ a)
                      $d(%,,,%)) }) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteralRExtPtr ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a b) =>
    Language.R.Literal.Literal
      (Language.R.Instance.R s a) 'Foreign.R.Type.ExtPtr
  DFunId
  {- Arity: 2, Strictness: <L,C(H)><L,U(A,C(C1(U(U,U))),A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a
                      @ (b :: Foreign.R.Type.SEXPTYPE)
                      @ s
                      ($dNFData :: Control.DeepSeq.NFData a)
                      ($dLiteral :: Language.R.Literal.Literal a b).
                  @ (Language.R.Instance.R s a)
                  @ 'Foreign.R.Type.ExtPtr
                  (Language.R.Literal.$fLiteralRExtPtr_$cp1Literal
                     @ a
                     @ b
                     @ s
                     $dNFData
                     $dLiteral)
                  (Language.R.Literal.$fLiteralRExtPtr_$cmkSEXPIO
                     @ a
                     @ b
                     @ s
                     $dNFData
                     $dLiteral)
                  (Language.R.Literal.$fLiteralRExtPtr_$cfromSEXP
                     @ a
                     @ b
                     @ s
                     $dNFData
                     $dLiteral) -}
fb9902993c59d89333d0c79be97bcc3e
  $fLiteralRExtPtr1 ::
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.ExtPtr
    -> Language.R.Instance.R s a
  {- Strictness: x -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteralRExtPtr2 ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a b) =>
    Language.R.Instance.R s a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.ExtPtr #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,C(H)><L,U(A,C(C1(U(U,U))),A)><L,C(C1(U(U,U)))><S,U>,
     Unfolding: (\ @ a
                   @ (b :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData a)
                   ($dLiteral :: Language.R.Literal.Literal a b)
                   (eta :: Language.R.Instance.R s a)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Language.R.Internal.FunWrappers.wrap0
                         (Language.R.Literal.$fHFunWrapRIO1
                            @ a
                            @ b
                            @ s
                            $dNFData
                            $dLiteral
                            eta)
                           `cast`
                         (Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SEXP0>_R)))
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Ptr.FunPtr (GHC.Types.IO Foreign.R.SEXP0)>_R)
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ds { GHC.Ptr.FunPtr ds2 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs funPtrToSEXP GHC.Prim.Addr#
                                                                                          -> GHC.Prim.State#
                                                                                               GHC.Prim.RealWorld
                                                                                          -> (# GHC.Prim.State#
                                                                                                  GHC.Prim.RealWorld,
                                                                                                GHC.Prim.Addr# #)}
                        ds2
                        ipv of wild { (#,#) ds3 ds4 ->
                 (# ds3,
                    GHC.Ptr.Ptr
                      @ (Language.R.HExp.HExp
                           Control.Memory.Region.V 'Foreign.R.Type.ExtPtr)
                      ds4 #)
                   `cast`
                 ((#,#)
                    <'GHC.Types.VoidRep>_R
                    <'GHC.Types.PtrRepLifted>_R
                    <GHC.Prim.State# GHC.Prim.RealWorld>_R
                    (Sym (Foreign.R.Internal.N:SEXP[0]
                              <Control.Memory.Region.V `cast` <GHC.Types.*>_N>_P
                              <'Foreign.R.Type.ExtPtr>_P)))_R } } }) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteralRExtPtr3 ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a b) =>
    Data.Singletons.Sing 'Foreign.R.Type.ExtPtr
  {- Arity: 2, Strictness: <L,A><L,A>m21,
     Unfolding: InlineRule (2, True, True)
                (\ @ a
                   @ (b :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData a)
                   ($dLiteral :: Language.R.Literal.Literal a b) ->
                 Foreign.R.Type.$fSingISEXPTYPEExtPtr_$s$WSExtPtr) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteralRExtPtr_$cfromSEXP ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a b) =>
    forall s1.
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.ExtPtr
    -> Language.R.Instance.R s a
  {- Arity: 2, Strictness: <B,A><B,A>x,
     Unfolding: InlineRule (2, True, True)
                (\ @ a
                   @ (b :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dNFData :: Control.DeepSeq.NFData a)
                   ($dLiteral :: Language.R.Literal.Literal a b)
                   @ s1 ->
                 Language.R.Literal.$fLiteralRExtPtr1 @ s @ a @ s1) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteralRExtPtr_$cmkSEXPIO ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a b) =>
    Language.R.Instance.R s a
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.ExtPtr)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,C(H)><L,U(A,C(C1(U(U,U))),A)><L,C(C1(U(U,U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteralRExtPtr2
                  `cast`
                (forall (a :: <*>_N) (b :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R <Language.R.Literal.Literal a b>_R
                 ->_R <Language.R.Instance.R s a>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.ExtPtr>_R)) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteralRExtPtr_$cp1Literal ::
    (Control.DeepSeq.NFData a, Language.R.Literal.Literal a b) =>
    Data.Singletons.SingI 'Foreign.R.Type.ExtPtr
  {- Arity: 2, Strictness: <L,A><L,A>m21,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteralRExtPtr3
                  `cast`
                (forall (a :: <*>_N) (b :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Control.DeepSeq.NFData a>_R
                 ->_R <Language.R.Literal.Literal a b>_R
                 ->_R Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.ExtPtr>_N) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteralSEXPa ::
    Data.Singletons.SingI a =>
    Language.R.Literal.Literal (Foreign.R.Internal.SEXP s a) a
  DFunId
  {- Arity: 1, Strictness: <L,U>m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (a :: Foreign.R.Type.SEXPTYPE)
                      @ s
                      ($dSingI :: Data.Singletons.SingI a).
                  @ (Foreign.R.Internal.SEXP s a)
                  @ a
                  (Language.R.Literal.$fLiteralSEXPa_$cp1Literal @ a @ s $dSingI)
                  (Language.R.Literal.$fLiteralSEXPa_$cmkSEXPIO @ a @ s $dSingI)
                  (Language.R.Literal.$fLiteralSEXPa_$cfromSEXP @ a @ s $dSingI) -}
867f250f7485d946cf27be2b62bf12c3
  $fLiteralSEXPa1 ::
    Data.Singletons.SingI a =>
    Foreign.R.Internal.SEXP s a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP Control.Memory.Region.V a #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,U><S,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ (a :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dSingI :: Data.Singletons.SingI a)
                   (eta :: Foreign.R.Internal.SEXP s a)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta1,
                    eta
                      `cast`
                    (Trans
                         (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                         (Trans
                              (GHC.Ptr.Ptr
                                 <Language.R.HExp.HExp s a, Language.R.HExp.HExp
                                                              Control.Memory.Region.V a>)_R
                              (Sym (Foreign.R.Internal.N:SEXP[0]
                                        <Control.Memory.Region.V>_P <a>_P)))) #)) -}
eb88cdfa966ce2a5cfb91c6170091c72
  $fLiteralSEXPa_$cfromSEXP ::
    Data.Singletons.SingI a =>
    forall s1.
    Foreign.R.Internal.SEXP s1 a -> Foreign.R.Internal.SEXP s a
  {- Arity: 2, Strictness: <S,1*U><S(S),1*U(U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ (a :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dSingI :: Data.Singletons.SingI a)
                   @ s1
                   (eta :: Foreign.R.Internal.SEXP s1 a) ->
                 case eta
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s1>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp s1 a, Language.R.HExp.HExp
                                                            s a>)_R) of dt { GHC.Ptr.Ptr dt1 ->
                 case Foreign.R.Internal.$wunsafeCast
                        @ s
                        @ a
                        (Foreign.R.Type.$fSingKindSEXPTYPE_$cfromSing
                           @ a
                           $dSingI
                             `cast`
                           (Data.Singletons.N:SingI[0] <Foreign.R.Type.SEXPTYPE>_N <a>_N))
                          `cast`
                        (Sub (Foreign.R.Type.D:R:DemoteRepSEXPTYPE[0]))
                        (Foreign.R.Internal.SomeSEXP @ s @ a dt1) of ww { DEFAULT ->
                 (GHC.Ptr.Ptr @ (Language.R.HExp.HExp s a) ww)
                   `cast`
                 (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)) } }) -}
355911a5dc71a06882d3d0784b4ca5dc
  $fLiteralSEXPa_$cmkSEXPIO ::
    Data.Singletons.SingI a =>
    Foreign.R.Internal.SEXP s a
    -> GHC.Types.IO (Foreign.R.Internal.SEXP Control.Memory.Region.V a)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteralSEXPa1
                  `cast`
                (forall (a :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <GHC.Types.*>_N).
                 <Data.Singletons.SingI a>_R
                 ->_R <Foreign.R.Internal.SEXP s a>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP Control.Memory.Region.V a>_R)) -}
cb753f4006805a943d6e8cac148543e9
  $fLiteralSEXPa_$cp1Literal ::
    Data.Singletons.SingI a => Data.Singletons.SingI a
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ (a :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   ($dSingI :: Data.Singletons.SingI a) ->
                 $dSingI) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteralSomeSEXPAny ::
    Language.R.Literal.Literal
      (Foreign.R.Internal.SomeSEXP s) 'Foreign.R.Type.Any
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ s.
                  @ (Foreign.R.Internal.SomeSEXP s)
                  @ 'Foreign.R.Type.Any
                  Foreign.R.Type.$fSingISEXPTYPEAny_$s$WSAny
                    `cast`
                  (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Any>_N)
                  (Language.R.Literal.$fLiteralSomeSEXPAny_$cmkSEXPIO @ s)
                  (Language.R.Literal.$fLiteralSomeSEXPAny_$cfromSEXP @ s) -}
b5ff1b46c875d8a595eb770473a50270
  $fLiteralSomeSEXPAny1 ::
    Foreign.R.Internal.SomeSEXP s
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Any #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (ds :: Foreign.R.Internal.SomeSEXP s)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of wild { Foreign.R.Internal.SomeSEXP a dt ->
                 (# eta,
                    (GHC.Ptr.Ptr @ (Language.R.HExp.HExp s a) dt)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Language.R.HExp.HExp s a, Language.R.HExp.HExp
                                                         Control.Memory.Region.V
                                                         'Foreign.R.Type.Any>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <Control.Memory.Region.V>_P <'Foreign.R.Type.Any>_P))) #) }) -}
cf8eaf4105235a208a06c43a793b72b2
  $fLiteralSomeSEXPAny_$cfromSEXP ::
    Foreign.R.Internal.SEXP s1 'Foreign.R.Type.Any
    -> Foreign.R.Internal.SomeSEXP s
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ s
                   @ s1
                   (x :: Foreign.R.Internal.SEXP s1 'Foreign.R.Type.Any) ->
                 case x `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s1>_P <'Foreign.R.Type.Any>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp s1 'Foreign.R.Type.Any, Language.R.HExp.HExp
                                                                              s
                                                                              'Foreign.R.Type.Any>)_R) of dt { GHC.Ptr.Ptr dt1 ->
                 Foreign.R.Internal.SomeSEXP @ s @ 'Foreign.R.Type.Any dt1 }) -}
edb31d4cff4da928a976fe7f46def169
  $fLiteralSomeSEXPAny_$cmkSEXPIO ::
    Foreign.R.Internal.SomeSEXP s
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Any)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteralSomeSEXPAny1
                  `cast`
                (forall (s :: <GHC.Types.*>_N).
                 <Foreign.R.Internal.SomeSEXP s>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.Any>_R)) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteralVectorty ::
    Data.Vector.SEXP.Base.VECTOR Control.Memory.Region.V ty a =>
    Language.R.Literal.Literal
      (Data.Vector.SEXP.Vector Control.Memory.Region.V ty a) ty
  DFunId
  {- Arity: 1, Strictness: <L,U(U,U(U,U),A,U(U))>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (ty :: Foreign.R.Type.SEXPTYPE)
                      @ a
                      ($d(%,,,%) :: Data.Vector.SEXP.Base.VECTOR
                                      Control.Memory.Region.V ty a).
                  @ (Data.Vector.SEXP.Vector Control.Memory.Region.V ty a)
                  @ ty
                  (Language.R.Literal.$fLiteralMVectorty_$cp1Literal
                     @ ty
                     @ a
                     $d(%,,,%))
                  (Language.R.Literal.$fLiteralVectorty_$cmkSEXPIO
                     @ ty
                     @ a
                     $d(%,,,%))
                  (Language.R.Literal.$fLiteralVectorty_$cfromSEXP
                     @ ty
                     @ a
                     $d(%,,,%)) -}
f925af9d9f46b4e3395f83551e76037c
  $fLiteralVectorty1 ::
    Data.Vector.SEXP.Base.VECTOR Control.Memory.Region.V ty a =>
    Data.Vector.SEXP.Vector Control.Memory.Region.V ty a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP Control.Memory.Region.V ty #)
  {- Arity: 3,
     Strictness: <S(LLLS(S)),U(U,U,A,U(U))><L,1*U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (ty :: Foreign.R.Type.SEXPTYPE)
                   @ a
                   ($d(%,,,%) :: Data.Vector.SEXP.Base.VECTOR
                                   Control.Memory.Region.V ty a)
                   (eta :: Data.Vector.SEXP.Vector Control.Memory.Region.V ty a)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Types.HEq_sc
                        @ *
                        @ *
                        @ (Data.Vector.SEXP.Base.ElemRep Control.Memory.Region.V ty)
                        @ a
                        (GHC.Classes.$p4(%,,,%)
                           @ (Foreign.Storable.Storable a)
                           @ (Foreign.R.Type.IsVector ty)
                           @ (Data.Singletons.SingI ty)
                           @ (Data.Vector.SEXP.Base.ElemRep Control.Memory.Region.V ty
                              Data.Type.Equality.~ a)
                           $d(%,,,%))
                          `cast`
                        (Data.Type.Equality.N:~[0] <*>_N <Data.Vector.SEXP.Base.ElemRep
                                                            Control.Memory.Region.V
                                                            ty>_N <a>_N) of cobox0 { DEFAULT ->
                 (# eta1,
                    Data.Vector.SEXP.toSEXP
                      @ Control.Memory.Region.V
                      @ ty
                      @ a
                      $d(%,,,%)
                      eta #) }) -}
12570239faa88016ae4147ceaea9456d
  $fLiteralVectorty_$cfromSEXP ::
    Data.Vector.SEXP.Base.VECTOR Control.Memory.Region.V ty a =>
    forall s.
    Foreign.R.Internal.SEXP s ty
    -> Data.Vector.SEXP.Vector Control.Memory.Region.V ty a
  {- Arity: 2,
     Strictness: <S(LS(SL)LS(S)),U(U,U(U,U),A,U(U))><S(S),1*U(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ (ty :: Foreign.R.Type.SEXPTYPE)
                   @ a
                   (w :: Data.Vector.SEXP.Base.VECTOR Control.Memory.Region.V ty a)
                   @ s
                   (w1 :: Foreign.R.Internal.SEXP s ty) ->
                 case w1
                        `cast`
                      (Foreign.R.Internal.N:SEXP[0]
                           <s>_P <ty>_P) of ww { GHC.Ptr.Ptr ww1 ->
                 Language.R.Literal.$w$cfromSEXP5 @ ty @ a w @ s ww1 }) -}
d86580838c346834dc81838d8717d29c
  $fLiteralVectorty_$cmkSEXPIO ::
    Data.Vector.SEXP.Base.VECTOR Control.Memory.Region.V ty a =>
    Data.Vector.SEXP.Vector Control.Memory.Region.V ty a
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP Control.Memory.Region.V ty)
  {- Arity: 3,
     Strictness: <S(LLLS(S)),U(U,U,A,U(U))><L,1*U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteralVectorty1
                  `cast`
                (forall (ty :: <Foreign.R.Type.SEXPTYPE>_N) (a :: <*>_N).
                 <Data.Vector.SEXP.Base.VECTOR Control.Memory.Region.V ty a>_R
                 ->_R <Data.Vector.SEXP.Vector Control.Memory.Region.V ty a>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP Control.Memory.Region.V ty>_R)) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral[]Complex ::
    Language.R.Literal.Literal
      [Data.Complex.Complex GHC.Types.Double] 'Foreign.R.Type.Complex
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Data.Complex.Complex GHC.Types.Double]
                  @ 'Foreign.R.Type.Complex
                  Foreign.R.Type.$fSingISEXPTYPEComplex_$s$WSComplex
                    `cast`
                  (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Complex>_N)
                  Language.R.Literal.$fLiteral[]Complex_$cmkSEXPIO
                  Language.R.Literal.$fLiteralComplexComplex_$cfromSEXP1 -}
9d36c7de3fee3207bcd4ed231cfaaf12
  $fLiteral[]Complex1 ::
    [Data.Complex.Complex GHC.Types.Double]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Complex #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: [Data.Complex.Complex GHC.Types.Double])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Language.R.Literal.$fLiteralComplexComplex4
                   @ Control.Memory.Region.V
                   @ 'Foreign.R.Type.Complex
                   Language.R.Literal.$fLiteralComplexComplex_$s$fStorableComplex
                     `cast`
                   (Foreign.Storable.Storable
                      (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[4]
                                <Control.Memory.Region.Void>_N)))_R
                   Language.R.Literal.$fLiteralComplexComplex3
                     `cast`
                   (GHC.Classes.(%,%)
                      <Data.Singletons.SingI 'Foreign.R.Type.Complex>_N
                      (Trans
                           (Sym (Foreign.R.Constraints.D:R::∈[1]
                                     <'['Foreign.R.Type.String, 'Foreign.R.Type.Vector,
                                        'Foreign.R.Type.Expr, 'Foreign.R.Type.WeakRef,
                                        'Foreign.R.Type.Raw]>_N
                                     <'Foreign.R.Type.Complex>_N))
                           (Trans
                                (Sym (Foreign.R.Constraints.D:R::∈[2]
                                          <'['Foreign.R.Type.Complex, 'Foreign.R.Type.String,
                                             'Foreign.R.Type.Vector, 'Foreign.R.Type.Expr,
                                             'Foreign.R.Type.WeakRef, 'Foreign.R.Type.Raw]>_N
                                          <'Foreign.R.Type.Real>_N
                                          <'Foreign.R.Type.Complex>_N))
                                (Trans
                                     (Sym (Foreign.R.Constraints.D:R::∈[2]
                                               <'['Foreign.R.Type.Real, 'Foreign.R.Type.Complex,
                                                  'Foreign.R.Type.String, 'Foreign.R.Type.Vector,
                                                  'Foreign.R.Type.Expr, 'Foreign.R.Type.WeakRef,
                                                  'Foreign.R.Type.Raw]>_N
                                               <'Foreign.R.Type.Int>_N
                                               <'Foreign.R.Type.Complex>_N))
                                     (Trans
                                          (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                    <'['Foreign.R.Type.Int, 'Foreign.R.Type.Real,
                                                       'Foreign.R.Type.Complex,
                                                       'Foreign.R.Type.String,
                                                       'Foreign.R.Type.Vector, 'Foreign.R.Type.Expr,
                                                       'Foreign.R.Type.WeakRef,
                                                       'Foreign.R.Type.Raw]>_N
                                                    <'Foreign.R.Type.Logical>_N
                                                    <'Foreign.R.Type.Complex>_N))
                                          (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                    <'['Foreign.R.Type.Logical, 'Foreign.R.Type.Int,
                                                       'Foreign.R.Type.Real,
                                                       'Foreign.R.Type.Complex,
                                                       'Foreign.R.Type.String,
                                                       'Foreign.R.Type.Vector, 'Foreign.R.Type.Expr,
                                                       'Foreign.R.Type.WeakRef,
                                                       'Foreign.R.Type.Raw]>_N
                                                    <'Foreign.R.Type.Char>_N
                                                    <'Foreign.R.Type.Complex>_N)))))))_R
                   Foreign.R.Type.$fSingISEXPTYPEComplex_$s$WSComplex
                   (GHC.Base.build
                      @ (GHC.Types.IO (Data.Complex.Complex GHC.Types.Double))
                      (\ @ b1
                         (c :: GHC.Types.IO (Data.Complex.Complex GHC.Types.Double)
                               -> b1 -> b1)[OneShot]
                         (n :: b1)[OneShot] ->
                       GHC.Base.foldr
                         @ (Data.Complex.Complex GHC.Types.Double)
                         @ b1
                         (GHC.Base.mapFB
                            @ (GHC.Types.IO (Data.Complex.Complex GHC.Types.Double))
                            @ b1
                            @ (Data.Complex.Complex GHC.Types.Double)
                            c
                            (GHC.Base.returnIO1 @ (Data.Complex.Complex GHC.Types.Double))
                              `cast`
                            (<Data.Complex.Complex GHC.Types.Double>_R
                             ->_R Sym (GHC.Types.N:IO[0]
                                           <Data.Complex.Complex GHC.Types.Double>_R)))
                         n
                         x))
                     `cast`
                   ([(GHC.Types.IO
                        (Sub (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[4]
                                       <Control.Memory.Region.Void>_N))))_R])_R
                   eta) -}
f94718a40fe19bcee6a92fe0aa640b6e
  $fLiteral[]Complex_$cmkSEXPIO ::
    [Data.Complex.Complex GHC.Types.Double]
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Complex)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral[]Complex1
                  `cast`
                (<[Data.Complex.Complex GHC.Types.Double]>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.Complex>_R)) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral[]Int ::
    Language.R.Literal.Literal [GHC.Int.Int32] 'Foreign.R.Type.Int
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Int.Int32]
                  @ 'Foreign.R.Type.Int
                  Foreign.R.Type.$fSingISEXPTYPEInt_$s$WSInt
                    `cast`
                  (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Int>_N)
                  Language.R.Literal.$fLiteral[]Int_$cmkSEXPIO
                  Language.R.Literal.$fLiteralInt32Int_$cfromSEXP1 -}
73d8172175c4ac2dbec97580c91c2f61
  $fLiteral[]Int1 ::
    [GHC.Int.Int32]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Int #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: [GHC.Int.Int32])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Language.R.Literal.$fLiteralComplexComplex4
                   @ Control.Memory.Region.V
                   @ 'Foreign.R.Type.Int
                   Foreign.Storable.$fStorableInt32
                     `cast`
                   (Foreign.Storable.Storable
                      (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[2]
                                <Control.Memory.Region.Void>_N)))_R
                   Language.R.Literal.$fLiteralInt32Int3
                     `cast`
                   (GHC.Classes.(%,%)
                      <Data.Singletons.SingI 'Foreign.R.Type.Int>_N
                      (Trans
                           (Sym (Foreign.R.Constraints.D:R::∈[1]
                                     <'['Foreign.R.Type.Real, 'Foreign.R.Type.Complex,
                                        'Foreign.R.Type.String, 'Foreign.R.Type.Vector,
                                        'Foreign.R.Type.Expr, 'Foreign.R.Type.WeakRef,
                                        'Foreign.R.Type.Raw]>_N
                                     <'Foreign.R.Type.Int>_N))
                           (Trans
                                (Sym (Foreign.R.Constraints.D:R::∈[2]
                                          <'['Foreign.R.Type.Int, 'Foreign.R.Type.Real,
                                             'Foreign.R.Type.Complex, 'Foreign.R.Type.String,
                                             'Foreign.R.Type.Vector, 'Foreign.R.Type.Expr,
                                             'Foreign.R.Type.WeakRef, 'Foreign.R.Type.Raw]>_N
                                          <'Foreign.R.Type.Logical>_N
                                          <'Foreign.R.Type.Int>_N))
                                (Sym (Foreign.R.Constraints.D:R::∈[2]
                                          <'['Foreign.R.Type.Logical, 'Foreign.R.Type.Int,
                                             'Foreign.R.Type.Real, 'Foreign.R.Type.Complex,
                                             'Foreign.R.Type.String, 'Foreign.R.Type.Vector,
                                             'Foreign.R.Type.Expr, 'Foreign.R.Type.WeakRef,
                                             'Foreign.R.Type.Raw]>_N
                                          <'Foreign.R.Type.Char>_N
                                          <'Foreign.R.Type.Int>_N)))))_R
                   Foreign.R.Type.$fSingISEXPTYPEInt_$s$WSInt
                   (GHC.Base.build
                      @ (GHC.Types.IO GHC.Int.Int32)
                      (\ @ b1
                         (c :: GHC.Types.IO GHC.Int.Int32 -> b1 -> b1)[OneShot]
                         (n :: b1)[OneShot] ->
                       GHC.Base.foldr
                         @ GHC.Int.Int32
                         @ b1
                         (GHC.Base.mapFB
                            @ (GHC.Types.IO GHC.Int.Int32)
                            @ b1
                            @ GHC.Int.Int32
                            c
                            (GHC.Base.returnIO1 @ GHC.Int.Int32)
                              `cast`
                            (<GHC.Int.Int32>_R ->_R Sym (GHC.Types.N:IO[0] <GHC.Int.Int32>_R)))
                         n
                         x))
                     `cast`
                   ([(GHC.Types.IO
                        (Sub (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[2]
                                       <Control.Memory.Region.Void>_N))))_R])_R
                   eta) -}
b0de260ff6525d4c8a90739c2724272f
  $fLiteral[]Int_$cmkSEXPIO ::
    [GHC.Int.Int32]
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Int)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral[]Int1
                  `cast`
                (<[GHC.Int.Int32]>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.Int>_R)) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral[]Logical ::
    Language.R.Literal.Literal
      [Foreign.R.Type.Logical] 'Foreign.R.Type.Logical
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Foreign.R.Type.Logical]
                  @ 'Foreign.R.Type.Logical
                  Foreign.R.Type.$fSingISEXPTYPELogical_$s$WSLogical
                    `cast`
                  (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Logical>_N)
                  Language.R.Literal.$fLiteral[]Logical_$cmkSEXPIO
                  Language.R.Literal.$fLiteralLogicalLogical_$cfromSEXP1 -}
8b1faf6a739c4b25c1499f7a3e0360fb
  $fLiteral[]Logical1 ::
    [Foreign.R.Type.Logical]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Logical #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: [Foreign.R.Type.Logical])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Language.R.Literal.$fLiteralComplexComplex4
                   @ Control.Memory.Region.V
                   @ 'Foreign.R.Type.Logical
                   Foreign.R.Type.$fStorableLogical
                     `cast`
                   (Foreign.Storable.Storable
                      (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[1]
                                <Control.Memory.Region.Void>_N)))_R
                   Language.R.Literal.$fLiteralLogicalLogical3
                     `cast`
                   (GHC.Classes.(%,%)
                      <Data.Singletons.SingI 'Foreign.R.Type.Logical>_N
                      (Trans
                           (Sym (Foreign.R.Constraints.D:R::∈[1]
                                     <'['Foreign.R.Type.Int, 'Foreign.R.Type.Real,
                                        'Foreign.R.Type.Complex, 'Foreign.R.Type.String,
                                        'Foreign.R.Type.Vector, 'Foreign.R.Type.Expr,
                                        'Foreign.R.Type.WeakRef, 'Foreign.R.Type.Raw]>_N
                                     <'Foreign.R.Type.Logical>_N))
                           (Sym (Foreign.R.Constraints.D:R::∈[2]
                                     <'['Foreign.R.Type.Logical, 'Foreign.R.Type.Int,
                                        'Foreign.R.Type.Real, 'Foreign.R.Type.Complex,
                                        'Foreign.R.Type.String, 'Foreign.R.Type.Vector,
                                        'Foreign.R.Type.Expr, 'Foreign.R.Type.WeakRef,
                                        'Foreign.R.Type.Raw]>_N
                                     <'Foreign.R.Type.Char>_N
                                     <'Foreign.R.Type.Logical>_N))))_R
                   Foreign.R.Type.$fSingISEXPTYPELogical_$s$WSLogical
                   (GHC.Base.build
                      @ (GHC.Types.IO Foreign.R.Type.Logical)
                      (\ @ b1
                         (c :: GHC.Types.IO Foreign.R.Type.Logical -> b1 -> b1)[OneShot]
                         (n :: b1)[OneShot] ->
                       GHC.Base.foldr
                         @ Foreign.R.Type.Logical
                         @ b1
                         (GHC.Base.mapFB
                            @ (GHC.Types.IO Foreign.R.Type.Logical)
                            @ b1
                            @ Foreign.R.Type.Logical
                            c
                            (GHC.Base.returnIO1 @ Foreign.R.Type.Logical)
                              `cast`
                            (<Foreign.R.Type.Logical>_R
                             ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Type.Logical>_R)))
                         n
                         x))
                     `cast`
                   ([(GHC.Types.IO
                        (Sub (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[1]
                                       <Control.Memory.Region.Void>_N))))_R])_R
                   eta) -}
0c5d0fc2b827f47d96a66a897a65b1be
  $fLiteral[]Logical_$cmkSEXPIO ::
    [Foreign.R.Type.Logical]
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Logical)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral[]Logical1
                  `cast`
                (<[Foreign.R.Type.Logical]>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.Logical>_R)) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral[]Real ::
    Language.R.Literal.Literal [GHC.Types.Double] 'Foreign.R.Type.Real
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Types.Double]
                  @ 'Foreign.R.Type.Real
                  Foreign.R.Type.$fSingISEXPTYPEReal_$s$WSReal
                    `cast`
                  (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.Real>_N)
                  Language.R.Literal.$fLiteral[]Real_$cmkSEXPIO
                  Language.R.Literal.$fLiteralDoubleReal_$cfromSEXP1 -}
61b8906ce7cea4a64fa501231d8c8f67
  $fLiteral[]Real1 ::
    [GHC.Types.Double]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Real #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: [GHC.Types.Double])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Language.R.Literal.$fLiteralComplexComplex4
                   @ Control.Memory.Region.V
                   @ 'Foreign.R.Type.Real
                   Foreign.Storable.$fStorableDouble
                     `cast`
                   (Foreign.Storable.Storable
                      (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[3]
                                <Control.Memory.Region.Void>_N)))_R
                   Language.R.Literal.$fLiteralDoubleReal3
                     `cast`
                   (GHC.Classes.(%,%)
                      <Data.Singletons.SingI 'Foreign.R.Type.Real>_N
                      (Trans
                           (Sym (Foreign.R.Constraints.D:R::∈[1]
                                     <'['Foreign.R.Type.Complex, 'Foreign.R.Type.String,
                                        'Foreign.R.Type.Vector, 'Foreign.R.Type.Expr,
                                        'Foreign.R.Type.WeakRef, 'Foreign.R.Type.Raw]>_N
                                     <'Foreign.R.Type.Real>_N))
                           (Trans
                                (Sym (Foreign.R.Constraints.D:R::∈[2]
                                          <'['Foreign.R.Type.Real, 'Foreign.R.Type.Complex,
                                             'Foreign.R.Type.String, 'Foreign.R.Type.Vector,
                                             'Foreign.R.Type.Expr, 'Foreign.R.Type.WeakRef,
                                             'Foreign.R.Type.Raw]>_N
                                          <'Foreign.R.Type.Int>_N
                                          <'Foreign.R.Type.Real>_N))
                                (Trans
                                     (Sym (Foreign.R.Constraints.D:R::∈[2]
                                               <'['Foreign.R.Type.Int, 'Foreign.R.Type.Real,
                                                  'Foreign.R.Type.Complex, 'Foreign.R.Type.String,
                                                  'Foreign.R.Type.Vector, 'Foreign.R.Type.Expr,
                                                  'Foreign.R.Type.WeakRef, 'Foreign.R.Type.Raw]>_N
                                               <'Foreign.R.Type.Logical>_N
                                               <'Foreign.R.Type.Real>_N))
                                     (Sym (Foreign.R.Constraints.D:R::∈[2]
                                               <'['Foreign.R.Type.Logical, 'Foreign.R.Type.Int,
                                                  'Foreign.R.Type.Real, 'Foreign.R.Type.Complex,
                                                  'Foreign.R.Type.String, 'Foreign.R.Type.Vector,
                                                  'Foreign.R.Type.Expr, 'Foreign.R.Type.WeakRef,
                                                  'Foreign.R.Type.Raw]>_N
                                               <'Foreign.R.Type.Char>_N
                                               <'Foreign.R.Type.Real>_N))))))_R
                   Foreign.R.Type.$fSingISEXPTYPEReal_$s$WSReal
                   (GHC.Base.build
                      @ (GHC.Types.IO GHC.Types.Double)
                      (\ @ b1
                         (c :: GHC.Types.IO GHC.Types.Double -> b1 -> b1)[OneShot]
                         (n :: b1)[OneShot] ->
                       GHC.Base.foldr
                         @ GHC.Types.Double
                         @ b1
                         (GHC.Base.mapFB
                            @ (GHC.Types.IO GHC.Types.Double)
                            @ b1
                            @ GHC.Types.Double
                            c
                            (GHC.Base.returnIO1 @ GHC.Types.Double)
                              `cast`
                            (<GHC.Types.Double>_R
                             ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Double>_R)))
                         n
                         x))
                     `cast`
                   ([(GHC.Types.IO
                        (Sub (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[3]
                                       <Control.Memory.Region.Void>_N))))_R])_R
                   eta) -}
3d9ef96f6855bfc8a4ff4838d4be0661
  $fLiteral[]Real_$cmkSEXPIO ::
    [GHC.Types.Double]
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Real)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral[]Real1
                  `cast`
                (<[GHC.Types.Double]>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.Real>_R)) -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral[]String ::
    Language.R.Literal.Literal GHC.Base.String 'Foreign.R.Type.String
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Base.String
                  @ 'Foreign.R.Type.String
                  Foreign.R.Type.$fSingISEXPTYPEString_$s$WSString
                    `cast`
                  (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.String>_N)
                  Language.R.Literal.$fLiteral[]String_$cmkSEXPIO
                  Language.R.Literal.$fLiteral[]String_$cfromSEXP -}
0fed9969eff309f154ca3fbeb21a0d94
  $fLiteral[]String0 ::
    Language.R.Literal.Literal [GHC.Base.String] 'Foreign.R.Type.String
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Base.String]
                  @ 'Foreign.R.Type.String
                  Foreign.R.Type.$fSingISEXPTYPEString_$s$WSString
                    `cast`
                  (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.String>_N)
                  Language.R.Literal.$fLiteral[]String0_$cmkSEXPIO
                  Language.R.Literal.$fLiteral[]String0_$cfromSEXP -}
be0bd87feb4c6e589aee50a75cf18aaf
  $fLiteral[]String0_$cfromSEXP ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.String
    -> [GHC.Base.String]
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ @ s (w :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.String) ->
                 case w `cast`
                      (Foreign.R.Internal.N:SEXP[0]
                           <s>_P <'Foreign.R.Type.String>_P) of ww { GHC.Ptr.Ptr ww1 ->
                 Language.R.Literal.$w$cfromSEXP7 @ s ww1 }) -}
b0279b4251bf1823ca313e7b4e27775a
  $fLiteral[]String0_$cmkSEXPIO ::
    [GHC.Base.String]
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.String)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral[]String5
                  `cast`
                (<[GHC.Base.String]>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.String>_R)) -}
10a5c342e7713a31ddfb9bb2a1d358a6
  $fLiteral[]String1 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.String #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Base.String)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Language.R.Literal.$fLiteralComplexComplex4
                   @ Control.Memory.Region.V
                   @ 'Foreign.R.Type.String
                   (Foreign.R.Internal.$fStorableSEXP
                      @ Control.Memory.Region.Void
                      @ 'Foreign.R.Type.Char)
                     `cast`
                   (Foreign.Storable.Storable
                      (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[5]
                                <Control.Memory.Region.Void>_N)))_R
                   Language.R.Literal.$fLiteral[]String4
                     `cast`
                   (GHC.Classes.(%,%)
                      <Data.Singletons.SingI 'Foreign.R.Type.String>_N
                      (Trans
                           (Sym (Foreign.R.Constraints.D:R::∈[1]
                                     <'['Foreign.R.Type.Vector, 'Foreign.R.Type.Expr,
                                        'Foreign.R.Type.WeakRef, 'Foreign.R.Type.Raw]>_N
                                     <'Foreign.R.Type.String>_N))
                           (Trans
                                (Sym (Foreign.R.Constraints.D:R::∈[2]
                                          <'['Foreign.R.Type.String, 'Foreign.R.Type.Vector,
                                             'Foreign.R.Type.Expr, 'Foreign.R.Type.WeakRef,
                                             'Foreign.R.Type.Raw]>_N
                                          <'Foreign.R.Type.Complex>_N
                                          <'Foreign.R.Type.String>_N))
                                (Trans
                                     (Sym (Foreign.R.Constraints.D:R::∈[2]
                                               <'['Foreign.R.Type.Complex, 'Foreign.R.Type.String,
                                                  'Foreign.R.Type.Vector, 'Foreign.R.Type.Expr,
                                                  'Foreign.R.Type.WeakRef, 'Foreign.R.Type.Raw]>_N
                                               <'Foreign.R.Type.Real>_N
                                               <'Foreign.R.Type.String>_N))
                                     (Trans
                                          (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                    <'['Foreign.R.Type.Real,
                                                       'Foreign.R.Type.Complex,
                                                       'Foreign.R.Type.String,
                                                       'Foreign.R.Type.Vector, 'Foreign.R.Type.Expr,
                                                       'Foreign.R.Type.WeakRef,
                                                       'Foreign.R.Type.Raw]>_N
                                                    <'Foreign.R.Type.Int>_N
                                                    <'Foreign.R.Type.String>_N))
                                          (Trans
                                               (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                         <'['Foreign.R.Type.Int,
                                                            'Foreign.R.Type.Real,
                                                            'Foreign.R.Type.Complex,
                                                            'Foreign.R.Type.String,
                                                            'Foreign.R.Type.Vector,
                                                            'Foreign.R.Type.Expr,
                                                            'Foreign.R.Type.WeakRef,
                                                            'Foreign.R.Type.Raw]>_N
                                                         <'Foreign.R.Type.Logical>_N
                                                         <'Foreign.R.Type.String>_N))
                                               (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                         <'['Foreign.R.Type.Logical,
                                                            'Foreign.R.Type.Int,
                                                            'Foreign.R.Type.Real,
                                                            'Foreign.R.Type.Complex,
                                                            'Foreign.R.Type.String,
                                                            'Foreign.R.Type.Vector,
                                                            'Foreign.R.Type.Expr,
                                                            'Foreign.R.Type.WeakRef,
                                                            'Foreign.R.Type.Raw]>_N
                                                         <'Foreign.R.Type.Char>_N
                                                         <'Foreign.R.Type.String>_N))))))))_R
                   Foreign.R.Type.$fSingISEXPTYPEString_$s$WSString
                   (GHC.Base.build
                      @ (GHC.Types.IO
                           (Foreign.R.Internal.SEXP
                              Control.Memory.Region.V 'Foreign.R.Type.Char))
                      (\ @ b1
                         (c :: GHC.Types.IO
                                 (Foreign.R.Internal.SEXP
                                    Control.Memory.Region.V 'Foreign.R.Type.Char)
                               -> b1 -> b1)[OneShot]
                         (n :: b1)[OneShot] ->
                       GHC.Base.mapFB
                         @ (GHC.Types.IO
                              (Foreign.R.Internal.SEXP
                                 Control.Memory.Region.V 'Foreign.R.Type.Char))
                         @ b1
                         @ [GHC.Types.Char]
                         c
                         Language.R.Literal.$fLiteral[]String2
                           `cast`
                         (<GHC.Base.String>_R
                          ->_R Sym (GHC.Types.N:IO[0]
                                        <Foreign.R.Internal.SEXP
                                           Control.Memory.Region.V 'Foreign.R.Type.Char>_R))
                         x
                         n))
                     `cast`
                   ([(GHC.Types.IO
                        (Sub (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[5]
                                       <Control.Memory.Region.Void>_N))))_R])_R
                   eta) -}
2ac17b124ac95a58802e00738692b31a
  $fLiteral[]String2 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Char #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (str :: GHC.Base.String)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Foreign.charIsRepresentable3
                   @ (Foreign.R.Internal.SEXP
                        Control.Memory.Region.V 'Foreign.R.Type.Char)
                   GHC.IO.Encoding.UTF8.utf8
                   str
                   Language.R.Literal.$fLiteral[]String3
                     `cast`
                   (<Foreign.C.String.CString>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Foreign.R.Internal.SEXP
                                     Control.Memory.Region.V 'Foreign.R.Type.Char>_R))
                   eta) -}
7ab7a5b4d59d297b3575e948a58f8766
  $fLiteral[]String3 ::
    Foreign.C.String.CString
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Char #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (w1 :: Foreign.C.String.CString)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { GHC.Ptr.Ptr ww1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs Rf_mkCharCE GHC.Prim.Addr#
                                                                                         -> GHC.Prim.Int#
                                                                                         -> GHC.Prim.State#
                                                                                              GHC.Prim.RealWorld
                                                                                         -> (# GHC.Prim.State#
                                                                                                 GHC.Prim.RealWorld,
                                                                                               GHC.Prim.Addr# #)}
                        ww1
                        1#
                        w2 of wild1 { (#,#) ds ds1 ->
                 (# ds,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds1)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           Control.Memory.Region.V
                                                           'Foreign.R.Type.Char>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <Control.Memory.Region.V>_P
                                   <'Foreign.R.Type.Char>_P))) #) } }) -}
20a902f303db6cb6459c569f0ae8e543
  $fLiteral[]String4 ::
    (Data.Singletons.SingI 'Foreign.R.Type.String, ())
  {- Strictness: m,
     Unfolding: ((Foreign.R.Type.$fSingISEXPTYPEString_$s$WSString
                    `cast`
                  (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N <'Foreign.R.Type.String>_N),
                  GHC.Classes.C:(%%))) -}
0651c94175985b363d980ade8cb7b6d9
  $fLiteral[]String5 ::
    [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: [GHC.Base.String])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Language.R.Literal.$fLiteralComplexComplex4
                   @ Control.Memory.Region.V
                   @ 'Foreign.R.Type.String
                   (Foreign.R.Internal.$fStorableSEXP
                      @ Control.Memory.Region.Void
                      @ 'Foreign.R.Type.Char)
                     `cast`
                   (Foreign.Storable.Storable
                      (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[5]
                                <Control.Memory.Region.Void>_N)))_R
                   Language.R.Literal.$fLiteral[]String4
                     `cast`
                   (GHC.Classes.(%,%)
                      <Data.Singletons.SingI 'Foreign.R.Type.String>_N
                      (Trans
                           (Sym (Foreign.R.Constraints.D:R::∈[1]
                                     <'['Foreign.R.Type.Vector, 'Foreign.R.Type.Expr,
                                        'Foreign.R.Type.WeakRef, 'Foreign.R.Type.Raw]>_N
                                     <'Foreign.R.Type.String>_N))
                           (Trans
                                (Sym (Foreign.R.Constraints.D:R::∈[2]
                                          <'['Foreign.R.Type.String, 'Foreign.R.Type.Vector,
                                             'Foreign.R.Type.Expr, 'Foreign.R.Type.WeakRef,
                                             'Foreign.R.Type.Raw]>_N
                                          <'Foreign.R.Type.Complex>_N
                                          <'Foreign.R.Type.String>_N))
                                (Trans
                                     (Sym (Foreign.R.Constraints.D:R::∈[2]
                                               <'['Foreign.R.Type.Complex, 'Foreign.R.Type.String,
                                                  'Foreign.R.Type.Vector, 'Foreign.R.Type.Expr,
                                                  'Foreign.R.Type.WeakRef, 'Foreign.R.Type.Raw]>_N
                                               <'Foreign.R.Type.Real>_N
                                               <'Foreign.R.Type.String>_N))
                                     (Trans
                                          (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                    <'['Foreign.R.Type.Real,
                                                       'Foreign.R.Type.Complex,
                                                       'Foreign.R.Type.String,
                                                       'Foreign.R.Type.Vector, 'Foreign.R.Type.Expr,
                                                       'Foreign.R.Type.WeakRef,
                                                       'Foreign.R.Type.Raw]>_N
                                                    <'Foreign.R.Type.Int>_N
                                                    <'Foreign.R.Type.String>_N))
                                          (Trans
                                               (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                         <'['Foreign.R.Type.Int,
                                                            'Foreign.R.Type.Real,
                                                            'Foreign.R.Type.Complex,
                                                            'Foreign.R.Type.String,
                                                            'Foreign.R.Type.Vector,
                                                            'Foreign.R.Type.Expr,
                                                            'Foreign.R.Type.WeakRef,
                                                            'Foreign.R.Type.Raw]>_N
                                                         <'Foreign.R.Type.Logical>_N
                                                         <'Foreign.R.Type.String>_N))
                                               (Sym (Foreign.R.Constraints.D:R::∈[2]
                                                         <'['Foreign.R.Type.Logical,
                                                            'Foreign.R.Type.Int,
                                                            'Foreign.R.Type.Real,
                                                            'Foreign.R.Type.Complex,
                                                            'Foreign.R.Type.String,
                                                            'Foreign.R.Type.Vector,
                                                            'Foreign.R.Type.Expr,
                                                            'Foreign.R.Type.WeakRef,
                                                            'Foreign.R.Type.Raw]>_N
                                                         <'Foreign.R.Type.Char>_N
                                                         <'Foreign.R.Type.String>_N))))))))_R
                   Foreign.R.Type.$fSingISEXPTYPEString_$s$WSString
                   (GHC.Base.build
                      @ (GHC.Types.IO
                           (Foreign.R.Internal.SEXP
                              Control.Memory.Region.V 'Foreign.R.Type.Char))
                      (\ @ b1
                         (c :: GHC.Types.IO
                                 (Foreign.R.Internal.SEXP
                                    Control.Memory.Region.V 'Foreign.R.Type.Char)
                               -> b1 -> b1)[OneShot]
                         (n :: b1)[OneShot] ->
                       GHC.Base.foldr
                         @ [GHC.Types.Char]
                         @ b1
                         (GHC.Base.mapFB
                            @ (GHC.Types.IO
                                 (Foreign.R.Internal.SEXP
                                    Control.Memory.Region.V 'Foreign.R.Type.Char))
                            @ b1
                            @ [GHC.Types.Char]
                            c
                            Language.R.Literal.$fLiteral[]String2
                              `cast`
                            (<GHC.Base.String>_R
                             ->_R Sym (GHC.Types.N:IO[0]
                                           <Foreign.R.Internal.SEXP
                                              Control.Memory.Region.V 'Foreign.R.Type.Char>_R)))
                         n
                         x))
                     `cast`
                   ([(GHC.Types.IO
                        (Sub (Sym (Data.Vector.SEXP.Base.D:R:ElemRep[5]
                                       <Control.Memory.Region.Void>_N))))_R])_R
                   eta) -}
1e8862fec3fc6f1594176babfdb3e039
  $fLiteral[]String_$cfromSEXP ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ @ s (w :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.String) ->
                 case w `cast`
                      (Foreign.R.Internal.N:SEXP[0]
                           <s>_P <'Foreign.R.Type.String>_P) of ww { GHC.Ptr.Ptr ww1 ->
                 Language.R.Literal.$w$cfromSEXP6 @ s ww1 }) -}
f4f7e476dd3122a36bc173ad0cecd757
  $fLiteral[]String_$cmkSEXPIO ::
    GHC.Base.String
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.String)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteral[]String1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.String>_R)) -}
d4e0ca7c3ad2ca7240b22c8efec1d6bf
  $tc'C:HFunWrap :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9823120499841393345##
                   8462473307703707857##
                   Language.R.Literal.$trModule
                   Language.R.Literal.$tc'C:HFunWrap1) -}
41f00c40a5af2ff861bc2f761aaaab99
  $tc'C:HFunWrap1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C:HFunWrap"#) -}
31be6842e5eb0d4fa8783853009c079b
  $tc'C:Literal :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18136837951112979302##
                   2349387162191510396##
                   Language.R.Literal.$trModule
                   Language.R.Literal.$tc'C:Literal1) -}
6f31bf0087a3f72070af414c42a6a457
  $tc'C:Literal1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'C:Literal"#) -}
da277542d12b563385e762e3f96f0a5d
  $tcHFunWrap :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1488463704280206812##
                   5289162508180673848##
                   Language.R.Literal.$trModule
                   Language.R.Literal.$tcHFunWrap1) -}
a21f95992fd6cb99b41a70d45b438df5
  $tcHFunWrap1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "HFunWrap"#) -}
df5b9ea7ceb4787fc707e8d9449c3018
  $tcLiteral :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11645631493740758747##
                   825562789813360267##
                   Language.R.Literal.$trModule
                   Language.R.Literal.$tcLiteral1) -}
e687a5fd217319cec27350ef87abddc7
  $tcLiteral1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Literal"#) -}
14257c1893c573eca2f28ca84c49ce1c
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Language.R.Literal.$trModule2
                   Language.R.Literal.$trModule1) -}
0799564f9a6f1b02579989d6a1758ca7
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Language.R.Literal"#) -}
9814efc0e83a74d6f061843e221a696c
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs"#) -}
705d8c5b4f72eed13c0a4c7f5f6cadf8
  $w$cfromSEXP ::
    GHC.Prim.Addr# -> [Data.Complex.Complex GHC.Types.Double]
  {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
420acc2268c7be08c5069fb9aa4a3f8e
  $w$cfromSEXP1 :: GHC.Prim.Addr# -> [GHC.Types.Double]
  {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
2c4f34e214c5c63012f22ce4fff74e1e
  $w$cfromSEXP2 :: GHC.Prim.Addr# -> [GHC.Int.Int32]
  {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
cdea508f36e6be7940b1279a64f8cfab
  $w$cfromSEXP3 :: GHC.Prim.Addr# -> [Foreign.R.Type.Logical]
  {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
1ffe9450677f8a7eb14c87b11bf6bc29
  $w$cfromSEXP4 ::
    Data.Vector.SEXP.Base.VECTOR Control.Memory.Region.V ty a =>
    forall s.
    GHC.Prim.Addr#
    -> (# GHC.Prim.Addr#, GHC.Prim.Int#, GHC.Prim.Int# #)
  {- Arity: 2,
     Strictness: <S(LS(SL)LS(S)),U(A,1*U(1*U,A),A,U(U))><S,U>,
     Inline: [0],
     Unfolding: (\ @ (ty :: Foreign.R.Type.SEXPTYPE)
                   @ a
                   (w :: Data.Vector.SEXP.Base.VECTOR Control.Memory.Region.V ty a)
                   @ s
                   (ww :: GHC.Prim.Addr#) ->
                 case GHC.Types.HEq_sc
                        @ *
                        @ *
                        @ (Data.Vector.SEXP.Base.ElemRep Control.Memory.Region.V ty)
                        @ a
                        (GHC.Classes.$p4(%,,,%)
                           @ (Foreign.Storable.Storable a)
                           @ (Foreign.R.Type.IsVector ty)
                           @ (Data.Singletons.SingI ty)
                           @ (Data.Vector.SEXP.Base.ElemRep Control.Memory.Region.V ty
                              Data.Type.Equality.~ a)
                           w)
                          `cast`
                        (Data.Type.Equality.N:~[0] <*>_N <Data.Vector.SEXP.Base.ElemRep
                                                            Control.Memory.Region.V
                                                            ty>_N <a>_N) of cobox0 { DEFAULT ->
                 case Foreign.R.Internal.$wunsafeCast
                        @ Control.Memory.Region.V
                        @ ty
                        (Foreign.R.Type.$fSingKindSEXPTYPE_$cfromSing
                           @ ty
                           (GHC.Classes.$p1(%,%)
                              @ (Data.Singletons.SingI ty)
                              @ (ty
                                 Foreign.R.Constraints.:∈ '['Foreign.R.Type.Char,
                                                            'Foreign.R.Type.Logical,
                                                            'Foreign.R.Type.Int,
                                                            'Foreign.R.Type.Real,
                                                            'Foreign.R.Type.Complex,
                                                            'Foreign.R.Type.String,
                                                            'Foreign.R.Type.Vector,
                                                            'Foreign.R.Type.Expr,
                                                            'Foreign.R.Type.WeakRef,
                                                            'Foreign.R.Type.Raw])
                              (GHC.Classes.$p2(%,,,%)
                                 @ (Foreign.Storable.Storable a)
                                 @ (Foreign.R.Type.IsVector ty)
                                 @ (Data.Singletons.SingI ty)
                                 @ (Data.Vector.SEXP.Base.ElemRep Control.Memory.Region.V ty
                                    Data.Type.Equality.~ a)
                                 w))
                             `cast`
                           (Data.Singletons.N:SingI[0] <Foreign.R.Type.SEXPTYPE>_N <ty>_N))
                          `cast`
                        (Sub (Foreign.R.Type.D:R:DemoteRepSEXPTYPE[0]))
                        (Foreign.R.Internal.SomeSEXP
                           @ Control.Memory.Region.V
                           @ ty
                           ww) of ww1 { DEFAULT ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ GHC.Int.Int32
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.noDuplicate# s1 of s' { DEFAULT ->
                         case GHC.Prim.readInt32OffAddr#
                                @ GHC.Prim.RealWorld
                                (GHC.Prim.plusAddr# ww1 32#)
                                0#
                                s' of ds2 { (#,#) ipv ipv1 ->
                         (# ipv,
                            GHC.Int.I32#
                              (GHC.Prim.narrow32Int# ipv1) #) } }) of ds { (#,#) ipv ipv1 ->
                 case ipv1 of dt { GHC.Int.I32# dt1 ->
                 (# ww1, 0#, dt1 #) } } } }) -}
03db8a9154d5231733e96e549a618458
  $w$cfromSEXP5 ::
    Data.Vector.SEXP.Base.VECTOR Control.Memory.Region.V ty a =>
    forall s.
    GHC.Prim.Addr#
    -> Data.Vector.SEXP.Vector Control.Memory.Region.V ty a
  {- Arity: 2, Strictness: <S(LS(SL)LS(S)),U(U,U(U,U),A,U(U))><S,U>,
     Inline: [0],
     Unfolding: (\ @ (ty :: Foreign.R.Type.SEXPTYPE)
                   @ a
                   (w :: Data.Vector.SEXP.Base.VECTOR Control.Memory.Region.V ty a)
                   @ s
                   (ww :: GHC.Prim.Addr#) ->
                 case GHC.Types.HEq_sc
                        @ *
                        @ *
                        @ (Data.Vector.SEXP.Base.ElemRep Control.Memory.Region.V ty)
                        @ a
                        (GHC.Classes.$p4(%,,,%)
                           @ (Foreign.Storable.Storable a)
                           @ (Foreign.R.Type.IsVector ty)
                           @ (Data.Singletons.SingI ty)
                           @ (Data.Vector.SEXP.Base.ElemRep Control.Memory.Region.V ty
                              Data.Type.Equality.~ a)
                           w)
                          `cast`
                        (Data.Type.Equality.N:~[0] <*>_N <Data.Vector.SEXP.Base.ElemRep
                                                            Control.Memory.Region.V
                                                            ty>_N <a>_N) of cobox0 { DEFAULT ->
                 case Foreign.R.Internal.$wunsafeCast
                        @ Control.Memory.Region.V
                        @ ty
                        (Foreign.R.Type.$fSingKindSEXPTYPE_$cfromSing
                           @ ty
                           (GHC.Classes.$p1(%,%)
                              @ (Data.Singletons.SingI ty)
                              @ (ty
                                 Foreign.R.Constraints.:∈ '['Foreign.R.Type.Char,
                                                            'Foreign.R.Type.Logical,
                                                            'Foreign.R.Type.Int,
                                                            'Foreign.R.Type.Real,
                                                            'Foreign.R.Type.Complex,
                                                            'Foreign.R.Type.String,
                                                            'Foreign.R.Type.Vector,
                                                            'Foreign.R.Type.Expr,
                                                            'Foreign.R.Type.WeakRef,
                                                            'Foreign.R.Type.Raw])
                              (GHC.Classes.$p2(%,,,%)
                                 @ (Foreign.Storable.Storable a)
                                 @ (Foreign.R.Type.IsVector ty)
                                 @ (Data.Singletons.SingI ty)
                                 @ (Data.Vector.SEXP.Base.ElemRep Control.Memory.Region.V ty
                                    Data.Type.Equality.~ a)
                                 w))
                             `cast`
                           (Data.Singletons.N:SingI[0] <Foreign.R.Type.SEXPTYPE>_N <ty>_N))
                          `cast`
                        (Sub (Foreign.R.Type.D:R:DemoteRepSEXPTYPE[0]))
                        (Foreign.R.Internal.SomeSEXP
                           @ Control.Memory.Region.V
                           @ ty
                           ww) of ww1 { DEFAULT ->
                 Data.Vector.SEXP.$wfromSEXP
                   @ Control.Memory.Region.V
                   @ ty
                   @ a
                   w
                   ww1 } }) -}
0b34718d8136dce7a6042d4f07bccde9
  $w$cfromSEXP6 :: GHC.Prim.Addr# -> GHC.Base.String
  {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
7afda5bf2b805342ea4190c7e71f4b2e
  $w$cfromSEXP7 :: GHC.Prim.Addr# -> [GHC.Base.String]
  {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
fff2c5b665bc70b53f1888bb98b89e90
  $wdynSEXP ::
    Language.R.Literal.Literal a ty =>
    Foreign.R.Internal.SomeSEXP s -> a
  {- Arity: 2, Strictness: <S(LLC(S)),U(U,A,1*C1(U))><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ s
                   @ (ty :: Foreign.R.Type.SEXPTYPE)
                   (w :: Language.R.Literal.Literal a ty)
                   (w1 :: Foreign.R.Internal.SomeSEXP s) ->
                 case w1 of wild { Foreign.R.Internal.SomeSEXP a1 dt ->
                 Language.R.Literal.fromSEXP
                   @ a
                   @ ty
                   w
                   @ Control.Memory.Region.V
                   (case GHC.Magic.runRW#
                           @ 'GHC.Types.PtrRepLifted
                           @ (Foreign.R.Internal.SomeSEXP Control.Memory.Region.V)
                           (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                            case GHC.Prim.noDuplicate# s1 of s' { DEFAULT ->
                            case (Foreign.R.Type.$fSingKindSEXPTYPE_$cfromSing
                                    @ ty
                                    (Language.R.Literal.$p1Literal @ a @ ty w)
                                      `cast`
                                    (Data.Singletons.N:SingI[0] <Foreign.R.Type.SEXPTYPE>_N <ty>_N))
                                   `cast`
                                 (Sub (Foreign.R.Type.D:R:DemoteRepSEXPTYPE[0])) of wild1 {
                              DEFAULT
                              -> (# s',
                                    Foreign.R.Internal.SomeSEXP @ Control.Memory.Region.V @ a1 dt #)
                              Foreign.R.Type.Char
                              -> (Language.R.Internal.r1
                                    @ s
                                    @ a1
                                    Language.R.Literal.dynSEXP6
                                    (GHC.Ptr.Ptr @ (Language.R.HExp.HExp s a1) dt)
                                      `cast`
                                    (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a1>_P)))
                                   `cast`
                                 (GHC.Types.N:IO[0]
                                      <Foreign.R.Internal.SomeSEXP Control.Memory.Region.V>_R)
                                   s'
                              Foreign.R.Type.Logical
                              -> (Language.R.Internal.r1
                                    @ s
                                    @ a1
                                    Language.R.Literal.dynSEXP5
                                    (GHC.Ptr.Ptr @ (Language.R.HExp.HExp s a1) dt)
                                      `cast`
                                    (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a1>_P)))
                                   `cast`
                                 (GHC.Types.N:IO[0]
                                      <Foreign.R.Internal.SomeSEXP Control.Memory.Region.V>_R)
                                   s'
                              Foreign.R.Type.Int
                              -> (Language.R.Internal.r1
                                    @ s
                                    @ a1
                                    Language.R.Literal.dynSEXP4
                                    (GHC.Ptr.Ptr @ (Language.R.HExp.HExp s a1) dt)
                                      `cast`
                                    (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a1>_P)))
                                   `cast`
                                 (GHC.Types.N:IO[0]
                                      <Foreign.R.Internal.SomeSEXP Control.Memory.Region.V>_R)
                                   s'
                              Foreign.R.Type.Real
                              -> (Language.R.Internal.r1
                                    @ s
                                    @ a1
                                    Language.R.Literal.dynSEXP3
                                    (GHC.Ptr.Ptr @ (Language.R.HExp.HExp s a1) dt)
                                      `cast`
                                    (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a1>_P)))
                                   `cast`
                                 (GHC.Types.N:IO[0]
                                      <Foreign.R.Internal.SomeSEXP Control.Memory.Region.V>_R)
                                   s'
                              Foreign.R.Type.Complex
                              -> (Language.R.Internal.r1
                                    @ s
                                    @ a1
                                    Language.R.Literal.dynSEXP2
                                    (GHC.Ptr.Ptr @ (Language.R.HExp.HExp s a1) dt)
                                      `cast`
                                    (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a1>_P)))
                                   `cast`
                                 (GHC.Types.N:IO[0]
                                      <Foreign.R.Internal.SomeSEXP Control.Memory.Region.V>_R)
                                   s'
                              Foreign.R.Type.Raw
                              -> (Language.R.Internal.r1
                                    @ s
                                    @ a1
                                    Language.R.Literal.dynSEXP1
                                    (GHC.Ptr.Ptr @ (Language.R.HExp.HExp s a1) dt)
                                      `cast`
                                    (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a1>_P)))
                                   `cast`
                                 (GHC.Types.N:IO[0]
                                      <Foreign.R.Internal.SomeSEXP Control.Memory.Region.V>_R)
                                   s' } }) of ds { (#,#) ipv ipv1 ->
                    case Foreign.R.Internal.$wunsafeCast
                           @ Control.Memory.Region.V
                           @ ty
                           (Foreign.R.Type.$fSingKindSEXPTYPE_$cfromSing
                              @ ty
                              (Language.R.Literal.$p1Literal @ a @ ty w)
                                `cast`
                              (Data.Singletons.N:SingI[0] <Foreign.R.Type.SEXPTYPE>_N <ty>_N))
                             `cast`
                           (Sub (Foreign.R.Type.D:R:DemoteRepSEXPTYPE[0]))
                           ipv1 of ww { DEFAULT ->
                    (GHC.Ptr.Ptr
                       @ (Language.R.HExp.HExp Control.Memory.Region.V ty)
                       ww)
                      `cast`
                    (Sym (Foreign.R.Internal.N:SEXP[0]
                              <Control.Memory.Region.V>_P <ty>_P)) } }) }) -}
28eef91ba3bfee6837eba3d63c7047b5
  $wfromSomeSEXP ::
    Language.R.Literal.Literal a form =>
    Foreign.R.Internal.SomeSEXP s -> a
  {- Arity: 2, Strictness: <S(LLC(S)),U(1*U,A,1*C1(U))><L,1*U>,
     Inline: [0],
     Unfolding: (\ @ s
                   @ a
                   @ (form :: Foreign.R.Type.SEXPTYPE)
                   (w :: Language.R.Literal.Literal a form)
                   (w1 :: Foreign.R.Internal.SomeSEXP s) ->
                 Language.R.Literal.fromSEXP
                   @ a
                   @ form
                   w
                   @ s
                   (case Foreign.R.Internal.$wunsafeCast
                           @ s
                           @ form
                           (Foreign.R.Type.$fSingKindSEXPTYPE_$cfromSing
                              @ form
                              (Language.R.Literal.$p1Literal @ a @ form w)
                                `cast`
                              (Data.Singletons.N:SingI[0] <Foreign.R.Type.SEXPTYPE>_N <form>_N))
                             `cast`
                           (Sub (Foreign.R.Type.D:R:DemoteRepSEXPTYPE[0]))
                           w1 of ww { DEFAULT ->
                    (GHC.Ptr.Ptr @ (Language.R.HExp.HExp s form) ww)
                      `cast`
                    (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <form>_P)) })) -}
001486aa85efb7a24fbc5b11cd1946e8
  $wmkProtectedSEXPVectorIO ::
    Foreign.R.Type.SSEXPTYPE b
    -> [Foreign.R.Internal.SEXP s a]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s b #)
  {- Arity: 3, Strictness: <L,1*U><S,U><S,U>, Inline: [0] -}
b251d964bf76643df86b1b211844343f
  $wmkSEXPVectorIO ::
    Foreign.Storable.Storable (Data.Vector.SEXP.Base.ElemRep s a) =>
    Foreign.R.Type.SSEXPTYPE a
    -> [GHC.Types.IO (Data.Vector.SEXP.Base.ElemRep s a)]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s a #)
  {- Arity: 4,
     Strictness: <L,U(A,A,A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><S,1*U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (w :: Foreign.Storable.Storable
                           (Data.Vector.SEXP.Base.ElemRep s a))
                   (w1 :: Foreign.R.Type.SSEXPTYPE a)
                   (w2 :: [GHC.Types.IO (Data.Vector.SEXP.Base.ElemRep s a)])
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Foreign.R.withProtected1
                   @ a
                   @ s
                   @ (Foreign.R.Internal.SEXP s a)
                   (\ (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    case GHC.List.$wlenAcc
                           @ (GHC.Types.IO (Data.Vector.SEXP.Base.ElemRep s a))
                           w2
                           0# of ww2 { DEFAULT ->
                    Foreign.R.$wallocVector @ a w1 ww2 w4 })
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <Foreign.R.Internal.SEXP Control.Memory.Region.V a>_R))
                   (\ (vec :: Foreign.R.Internal.SEXP s a)[OneShot]
                      (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    let {
                      ptr :: GHC.Ptr.Ptr (Data.Vector.SEXP.Base.ElemRep s a)
                      = case vec
                               `cast`
                             (Trans
                                  (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                                  (GHC.Ptr.Ptr
                                     <Language.R.HExp.HExp
                                        s
                                        a, Foreign.R.Internal.SEXPREC>)_R) of wild { GHC.Ptr.Ptr addr ->
                        (GHC.Ptr.Ptr @ () (GHC.Prim.plusAddr# addr 40#))
                          `cast`
                        (GHC.Ptr.Ptr <(), Data.Vector.SEXP.Base.ElemRep s a>)_R }
                    } in
                    letrec {
                      go :: [GHC.Types.Int]
                            -> [GHC.Types.IO (Data.Vector.SEXP.Base.ElemRep s a)]
                            -> GHC.Prim.State# GHC.Prim.RealWorld
                            -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        {- Arity: 3, Strictness: <S,1*U><L,1*U><S,U> -}
                      = \ (ds :: [GHC.Types.Int])
                          (_ys :: [GHC.Types.IO (Data.Vector.SEXP.Base.ElemRep s a)])
                          (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                        case ds of wild {
                          [] -> (# eta1, GHC.Tuple.() #)
                          : ipv ipv1
                          -> case _ys of wild1 {
                               [] -> (# eta1, GHC.Tuple.() #)
                               : ipv2 ipv3
                               -> case ipv2
                                         `cast`
                                       (GHC.Types.N:IO[0] <Data.Vector.SEXP.Base.ElemRep s a>_R)
                                         eta1 of ds1 { (#,#) ipv4 ipv5 ->
                                  case (Foreign.Storable.pokeElemOff
                                          @ (Data.Vector.SEXP.Base.ElemRep s a)
                                          w
                                          ptr
                                          ipv
                                          ipv5)
                                         `cast`
                                       (GHC.Types.N:IO[0] <()>_R)
                                         ipv4 of ds2 { (#,#) ipv6 ipv7 ->
                                  go ipv1 ipv3 ipv6 } } } }
                    } in
                    case go
                           Language.R.Literal.$fLiteralComplexComplex5
                           w2
                           eta of ds1 { (#,#) ipv ipv1 ->
                    (# ipv, vec #) })
                     `cast`
                   (<Foreign.R.Internal.SEXP s a>_R
                    ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SEXP s a>_R))
                   w3) -}
cb2e1087f0fba98f3c036a1fd99f826f
  class HFunWrap a b | a -> b where
    hFunWrap :: a -> b
    {-# MINIMAL hFunWrap #-}
0fed9969eff309f154ca3fbeb21a0d94
  class Data.Singletons.SingI ty =>
        Literal a (ty :: Foreign.R.Type.SEXPTYPE) | a -> ty where
    mkSEXPIO :: a
                -> GHC.Types.IO
                     (Foreign.R.Internal.SEXP Control.Memory.Region.V ty)
    default mkSEXPIO :: (Foreign.R.Type.IsVector ty,
                         Language.R.Literal.Literal [a] ty) =>
                        a
                        -> GHC.Types.IO
                             (Foreign.R.Internal.SEXP Control.Memory.Region.V ty)
    fromSEXP :: Foreign.R.Internal.SEXP s ty -> a
    default fromSEXP :: (Foreign.R.Type.IsVector ty,
                         Language.R.Literal.Literal [a] ty) =>
                        Foreign.R.Internal.SEXP s ty -> a
75273e2d7a5ab5b855542e53fded290d
  dynSEXP ::
    (Language.R.Literal.Literal a ty, Data.Singletons.SingI ty) =>
    Foreign.R.Internal.SomeSEXP s -> a
  {- Arity: 3, Strictness: <S(LLC(S)),U(U,A,1*C1(U))><L,A><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ a
                   @ s
                   @ (ty :: Foreign.R.Type.SEXPTYPE)
                   (w :: Language.R.Literal.Literal a ty)
                   (w1 :: Data.Singletons.SingI ty)
                   (w2 :: Foreign.R.Internal.SomeSEXP s) ->
                 Language.R.Literal.$wdynSEXP @ a @ s @ ty w w2) -}
c386d2229e97ede6b2fc9a58e96804ad
  dynSEXP1 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "as.raw"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
0855e1467ae5c3c69db826dcb3ef4871
  dynSEXP2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "as.complex"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
a5c2f963bc2b952fd94789a92a7e839c
  dynSEXP3 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "as.double"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
5a88622867fd54dd284951ac6726d7ba
  dynSEXP4 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "as.integer"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
350b7d3f0ceb83e24fe03f80de72ebe1
  dynSEXP5 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "as.logical"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
f5ffe2959eec1a92d16499b35f2679c4
  dynSEXP6 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "as.character"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
8272800bc95ab0de7d122b4744404613
  fromPairList ::
    Foreign.R.Internal.SomeSEXP s
    -> [(GHC.Base.String, Foreign.R.Internal.SomeSEXP s)]
  {- Arity: 1, Strictness: <S,1*U> -}
6b4bb2ccf993aacfef4e1cc085353d41
  fromSomeSEXP ::
    (Language.R.Literal.Literal a form, Data.Singletons.SingI form) =>
    Foreign.R.Internal.SomeSEXP s -> a
  {- Arity: 3, Strictness: <S(LLC(S)),U(1*U,A,1*C1(U))><L,A><L,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ s
                   @ a
                   @ (form :: Foreign.R.Type.SEXPTYPE)
                   (w :: Language.R.Literal.Literal a form)
                   (w1 :: Data.Singletons.SingI form)
                   (w2 :: Foreign.R.Internal.SomeSEXP s) ->
                 Language.R.Literal.$wfromSomeSEXP @ s @ a @ form w w2) -}
35425b48b5784a938c25eef22575421c
  funToSEXP ::
    Language.R.Literal.HFunWrap a b =>
    (b -> GHC.Types.IO (GHC.Ptr.FunPtr b))
    -> a
    -> GHC.Types.IO (Foreign.R.Internal.SEXP s 'Foreign.R.Type.ExtPtr)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,1*C1(U)><C(C(S(SS(S)))),1*C1(C1(U(U,1*U(U))))><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.funToSEXP1
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N) (s :: <GHC.Types.*>_N).
                 <Language.R.Literal.HFunWrap a b>_R
                 ->_R <b -> GHC.Types.IO (GHC.Ptr.FunPtr b)>_R
                 ->_R <a>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP s 'Foreign.R.Type.ExtPtr>_R)) -}
5e4d60fa960da44abb642a596be338ac
  funToSEXP1 ::
    Language.R.Literal.HFunWrap a b =>
    (b -> GHC.Types.IO (GHC.Ptr.FunPtr b))
    -> a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s 'Foreign.R.Type.ExtPtr #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,1*C1(U)><C(C(S(SS(S)))),1*C1(C1(U(U,1*U(U))))><L,U><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   @ b
                   @ s
                   ($dHFunWrap :: Language.R.Literal.HFunWrap a b)
                   (w :: b -> GHC.Types.IO (GHC.Ptr.FunPtr b))
                   (x :: a)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (w ($dHFunWrap
                            `cast`
                          (Language.R.Literal.N:HFunWrap[0] <a>_N <b>_N)
                            x))
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.Ptr.FunPtr b>_R)
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ds { GHC.Ptr.FunPtr ds2 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-GXEXrsxC4K8OTVxhqWwxs funPtrToSEXP GHC.Prim.Addr#
                                                                                          -> GHC.Prim.State#
                                                                                               GHC.Prim.RealWorld
                                                                                          -> (# GHC.Prim.State#
                                                                                                  GHC.Prim.RealWorld,
                                                                                                GHC.Prim.Addr# #)}
                        ds2
                        ipv of wild { (#,#) ds3 ds4 ->
                 (# ds3,
                    GHC.Ptr.Ptr
                      @ (Language.R.HExp.HExp s 'Foreign.R.Type.ExtPtr)
                      ds4 #)
                   `cast`
                 ((#,#)
                    <'GHC.Types.VoidRep>_R
                    <'GHC.Types.PtrRepLifted>_R
                    <GHC.Prim.State# GHC.Prim.RealWorld>_R
                    (Sym (Foreign.R.Internal.N:SEXP[0]
                              <s `cast` <GHC.Types.*>_N>_P
                              <'Foreign.R.Type.ExtPtr>_P)))_R } } }) -}
37c902d56341931bb29a6bfb3735d93b
  mkProtectedSEXPVector ::
    Foreign.R.Type.IsVector b =>
    Foreign.R.Type.SSEXPTYPE b
    -> [Foreign.R.Internal.SEXP s a] -> Foreign.R.Internal.SEXP s b
  {- Arity: 3, Strictness: <L,A><L,1*U><S,U>, Inline: NOINLINE -}
462316fc432bd6af1387f34de32f0609
  mkProtectedSEXPVectorIO ::
    Foreign.R.Type.IsVector b =>
    Foreign.R.Type.SSEXPTYPE b
    -> [Foreign.R.Internal.SEXP s a]
    -> GHC.Types.IO (Foreign.R.Internal.SEXP s b)
  {- Arity: 4, Strictness: <L,A><L,1*U><S,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.mkProtectedSEXPVectorIO1
                  `cast`
                (forall (b :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Type.IsVector b>_R
                 ->_R <Foreign.R.Type.SSEXPTYPE b>_R
                 ->_R <[Foreign.R.Internal.SEXP s a]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SEXP s b>_R)) -}
08df4e9e19242ca4c215f4aad8dda0fd
  mkProtectedSEXPVectorIO1 ::
    Foreign.R.Type.IsVector b =>
    Foreign.R.Type.SSEXPTYPE b
    -> [Foreign.R.Internal.SEXP s a]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s b #)
  {- Arity: 4, Strictness: <L,A><L,1*U><S,U><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ @ (b :: Foreign.R.Type.SEXPTYPE)
                   @ s
                   @ (a :: Foreign.R.Type.SEXPTYPE)
                   (w :: Foreign.R.Type.IsVector b)
                   (w1 :: Foreign.R.Type.SSEXPTYPE b)
                   (w2 :: [Foreign.R.Internal.SEXP s a])
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Language.R.Literal.$wmkProtectedSEXPVectorIO
                   @ b
                   @ s
                   @ a
                   w1
                   w2
                   w3) -}
e5ee2bb7d133bfff06ec6071c060d939
  mkSEXP ::
    (Language.R.Literal.Literal a b, Control.Monad.R.Class.MonadR m) =>
    a -> m (Foreign.R.Internal.SEXP (Control.Monad.R.Class.Region m) b)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,C(U),A)><L,U(A,1*U,A,A,A,C(U),1*C1(U),A,A)>,
     Unfolding: (\ @ a
                   @ (b :: Foreign.R.Type.SEXPTYPE)
                   @ (m :: * -> *)
                   ($dLiteral :: Language.R.Literal.Literal a b)
                   ($dMonadR :: Control.Monad.R.Class.MonadR m) ->
                 let {
                   lvl47 :: Foreign.R.Internal.SEXP Control.Memory.Region.V b
                            -> m (Foreign.R.Internal.SEXP (Control.Monad.R.Class.Region m) b)
                   = Control.Monad.R.Class.acquire
                       @ m
                       $dMonadR
                       @ Control.Memory.Region.V
                       @ b
                       Language.R.Literal.mkSEXP1
                         `cast`
                       (Sym (Data.Type.Equality.N:~[0]
                                 <*>_N) <Control.Memory.Region.Void>_N <Control.Memory.Region.Void>_N)
                 } in
                 let {
                   $dMonad :: Control.Monad.IO.Class.MonadIO m
                   = Control.Monad.R.Class.$p2MonadR @ m $dMonadR
                 } in
                 let {
                   $dMonad1 :: GHC.Base.Monad m
                   = Control.Monad.IO.Class.$p1MonadIO @ m $dMonad
                 } in
                 \ (x :: a) ->
                 GHC.Base.>>=
                   @ m
                   $dMonad1
                   @ (Foreign.R.Internal.SEXP Control.Memory.Region.V b)
                   @ (Foreign.R.Internal.SEXP (Control.Monad.R.Class.Region m) b)
                   (Control.Monad.R.Class.io
                      @ m
                      $dMonadR
                      @ (Foreign.R.Internal.SEXP Control.Memory.Region.V b)
                      (Language.R.Literal.mkSEXPIO @ a @ b $dLiteral x))
                   lvl47) -}
115ff7901b224e1cb13e246507c17ed6
  mkSEXP1 ::
    Control.Memory.Region.Void GHC.Types.~~ Control.Memory.Region.Void
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Control.Memory.Region.Void
                   @ Control.Memory.Region.Void
                   @~ <Control.Memory.Region.Void>_N) -}
6c241aadeefad99e0212aba43885aeee
  mkSEXPVector ::
    (Foreign.Storable.Storable (Data.Vector.SEXP.Base.ElemRep s a),
     Foreign.R.Type.IsVector a) =>
    Foreign.R.Type.SSEXPTYPE a
    -> [GHC.Types.IO (Data.Vector.SEXP.Base.ElemRep s a)]
    -> Foreign.R.Internal.SEXP s a
  {- Arity: 4,
     Strictness: <L,U(A,A,A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><L,A><S,1*U><S,U>,
     Inline: NOINLINE -}
5ae320da332b08de8c60424922db4624
  mkSEXPVectorIO ::
    (Foreign.Storable.Storable (Data.Vector.SEXP.Base.ElemRep s a),
     Foreign.R.Type.IsVector a) =>
    Foreign.R.Type.SSEXPTYPE a
    -> [GHC.Types.IO (Data.Vector.SEXP.Base.ElemRep s a)]
    -> GHC.Types.IO (Foreign.R.Internal.SEXP s a)
  {- Arity: 5,
     Strictness: <L,U(A,A,A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><L,A><S,1*U><S,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Language.R.Literal.$fLiteralComplexComplex4
                  `cast`
                (forall (s :: <GHC.Types.*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.Storable.Storable (Data.Vector.SEXP.Base.ElemRep s a)>_R
                 ->_R <Foreign.R.Type.IsVector a>_R
                 ->_R <Foreign.R.Type.SSEXPTYPE a>_R
                 ->_R <[GHC.Types.IO (Data.Vector.SEXP.Base.ElemRep s a)]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SEXP s a>_R)) -}
c24c6f2e0e833c3d87bcdd98b386a783
  toPairList ::
    Control.Monad.R.Class.MonadR m =>
    [(GHC.Base.String,
      Foreign.R.Internal.SomeSEXP (Control.Monad.R.Class.Region m))]
    -> m (Foreign.R.Internal.SomeSEXP (Control.Monad.R.Class.Region m))
  {- Arity: 2,
     Strictness: <S(LSLLLLLLL),U(U,U(U(U,U,U,U,U),U),A,A,A,C(U),C(U),A,A)><S,1*U> -}
instance Language.R.Literal.HFunWrap [(->), (->)]
  = Language.R.Literal.$fHFunWrap(->)(->)
instance Language.R.Literal.HFunWrap [Language.R.Instance.R,
                                      GHC.Types.IO]
  = Language.R.Literal.$fHFunWrapRIO
instance Language.R.Literal.Literal [(->), Foreign.R.Type.ExtPtr]
  = Language.R.Literal.$fLiteral(->)ExtPtr
instance Language.R.Literal.Literal [(->), Foreign.R.Type.ExtPtr]
  = Language.R.Literal.$fLiteral(->)ExtPtr0
instance Language.R.Literal.Literal [(->), Foreign.R.Type.ExtPtr]
  = Language.R.Literal.$fLiteral(->)ExtPtr1
instance Language.R.Literal.Literal [(->), Foreign.R.Type.ExtPtr]
  = Language.R.Literal.$fLiteral(->)ExtPtr10
instance Language.R.Literal.Literal [(->), Foreign.R.Type.ExtPtr]
  = Language.R.Literal.$fLiteral(->)ExtPtr2
instance Language.R.Literal.Literal [(->), Foreign.R.Type.ExtPtr]
  = Language.R.Literal.$fLiteral(->)ExtPtr3
instance Language.R.Literal.Literal [(->), Foreign.R.Type.ExtPtr]
  = Language.R.Literal.$fLiteral(->)ExtPtr4
instance Language.R.Literal.Literal [(->), Foreign.R.Type.ExtPtr]
  = Language.R.Literal.$fLiteral(->)ExtPtr5
instance Language.R.Literal.Literal [(->), Foreign.R.Type.ExtPtr]
  = Language.R.Literal.$fLiteral(->)ExtPtr6
instance Language.R.Literal.Literal [(->), Foreign.R.Type.ExtPtr]
  = Language.R.Literal.$fLiteral(->)ExtPtr7
instance Language.R.Literal.Literal [(->), Foreign.R.Type.ExtPtr]
  = Language.R.Literal.$fLiteral(->)ExtPtr8
instance Language.R.Literal.Literal [(->), Foreign.R.Type.ExtPtr]
  = Language.R.Literal.$fLiteral(->)ExtPtr9
instance Language.R.Literal.Literal [Data.Complex.Complex,
                                     Foreign.R.Type.Complex]
  = Language.R.Literal.$fLiteralComplexComplex
instance Language.R.Literal.Literal [GHC.Types.Double,
                                     Foreign.R.Type.Real]
  = Language.R.Literal.$fLiteralDoubleReal
instance Language.R.Literal.Literal [GHC.Int.Int32,
                                     Foreign.R.Type.Int]
  = Language.R.Literal.$fLiteralInt32Int
instance Language.R.Literal.Literal [Foreign.R.Type.Logical,
                                     Foreign.R.Type.Logical]
  = Language.R.Literal.$fLiteralLogicalLogical
instance Language.R.Literal.Literal [Data.Vector.SEXP.Mutable.Internal.MVector,
                                     .]
  = Language.R.Literal.$fLiteralMVectorty
instance Language.R.Literal.Literal [Language.R.Instance.R,
                                     Foreign.R.Type.ExtPtr]
  = Language.R.Literal.$fLiteralRExtPtr
instance Language.R.Literal.Literal [Foreign.R.Internal.SEXP, .]
  = Language.R.Literal.$fLiteralSEXPa
instance Language.R.Literal.Literal [Foreign.R.Internal.SomeSEXP,
                                     Foreign.R.Type.Any]
  = Language.R.Literal.$fLiteralSomeSEXPAny
instance Language.R.Literal.Literal [Data.Vector.SEXP.Vector, .]
  = Language.R.Literal.$fLiteralVectorty
instance Language.R.Literal.Literal [[], Foreign.R.Type.Complex]
  = Language.R.Literal.$fLiteral[]Complex
instance Language.R.Literal.Literal [[], Foreign.R.Type.Int]
  = Language.R.Literal.$fLiteral[]Int
instance Language.R.Literal.Literal [[], Foreign.R.Type.Logical]
  = Language.R.Literal.$fLiteral[]Logical
instance Language.R.Literal.Literal [[], Foreign.R.Type.Real]
  = Language.R.Literal.$fLiteral[]Real
instance Language.R.Literal.Literal [[], Foreign.R.Type.String]
  = Language.R.Literal.$fLiteral[]String
instance Language.R.Literal.Literal [[], Foreign.R.Type.String]
  = Language.R.Literal.$fLiteral[]String0
"SPEC/Language.R.Literal $fStorableComplex @ Double" [ALWAYS] forall ($dStorable :: Foreign.Storable.Storable
                                                                                      GHC.Types.Double)
  Data.Complex.$fStorableComplex @ GHC.Types.Double $dStorable
  = Language.R.Literal.$fLiteralComplexComplex_$s$fStorableComplex
"SPEC/Language.R.Literal $fStorableComplex_$calignment @ Double" [ALWAYS] forall ($dStorable :: Foreign.Storable.Storable
                                                                                                  GHC.Types.Double)
  Data.Complex.$fStorableComplex_$calignment @ GHC.Types.Double
                                             $dStorable
  = Language.R.Literal.$fLiteralComplexComplex_$s$fStorableComplex_$calignment
"SPEC/Language.R.Literal $fStorableComplex_$csizeOf @ Double" [ALWAYS] forall ($dStorable :: Foreign.Storable.Storable
                                                                                               GHC.Types.Double)
  Data.Complex.$fStorableComplex_$csizeOf @ GHC.Types.Double
                                          $dStorable
  = Language.R.Literal.$fLiteralComplexComplex_$s$fStorableComplex_$csizeOf
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

