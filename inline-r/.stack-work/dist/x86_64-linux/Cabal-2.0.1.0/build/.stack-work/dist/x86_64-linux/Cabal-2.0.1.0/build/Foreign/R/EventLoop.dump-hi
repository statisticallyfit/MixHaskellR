
==================== FINAL INTERFACE ====================
2017-12-28 08:49:00.787303 UTC

interface inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz:Foreign.R.EventLoop 8022
  interface hash: 3ed6f84269493ce16ca76b0c5464cb10
  ABI hash: 1af8f70b39dd17b80af9b76062dbb57d
  export-list hash: de8d3302824f74757dc4f756eeeabc84
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 7001d6fa24c09f425f24b0bea8f5df81
  sig of: Nothing
  used TH splices: False
  where
exports:
  Foreign.R.EventLoop.addInputHandler
  Foreign.R.EventLoop.checkActivity
  Foreign.R.EventLoop.graphicsPolledEvents
  Foreign.R.EventLoop.graphicsPollingPeriod
  Foreign.R.EventLoop.inputHandlers
  Foreign.R.EventLoop.polledEvents
  Foreign.R.EventLoop.pollingPeriod
  Foreign.R.EventLoop.removeInputHandler
  Foreign.R.EventLoop.runHandlers
  Foreign.R.EventLoop.InputHandler{Foreign.R.EventLoop.InputHandler inputHandlerActive inputHandlerActivity inputHandlerCallback inputHandlerFD inputHandlerNext inputHandlerUserData}
module dependencies:
package dependencies: base-4.10.1.0* ghc-prim-0.5.1.1
                      integer-gmp-1.0.1.0
orphans: base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Type.Equality base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
import  -/  base-4.10.1.0:Control.Applicative 99577a9c463ffe4790a1d37547a345bd
import  -/  base-4.10.1.0:Data.Functor 2ffda4f936b8f474394d93205750aff3
import  -/  base-4.10.1.0:Foreign 6e1e49cc01b9f846dbcb01cc4a57d323
import  -/  base-4.10.1.0:Foreign.C f34e348e91247a99e0eb5a41b6102351
import  -/  base-4.10.1.0:Foreign.C.Types 936c0db027291520097b61fd8686710a
import  -/  base-4.10.1.0:Foreign.Marshal.Utils c952eb45e71e8a59e3eae4bcacaa1ffc
import  -/  base-4.10.1.0:Foreign.Storable c463817097bdd1b4c7f7c325680a9964
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.Err 514b3a24b22e9d7d731c2d0d02d10842
import  -/  base-4.10.1.0:GHC.Ptr f6ff03f1ebd95f085d6be4b1fdb71ff8
import  -/  base-4.10.1.0:GHC.Real 3c62834bc25e762eabc44149c4cc142d
import  -/  base-4.10.1.0:GHC.Show 0a8ce2b5e533d1c2cfb7954e6736be45
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  base-4.10.1.0:System.Posix.Types 2e879d5e842b3fead25f2c7a529cf5a2
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
addDependentFile "src/Foreign/R/EventLoop.hsc"
addDependentFile "/datascience/bin/stack/programs/x86_64-linux/ghc-8.2.2/lib/ghc-8.2.2/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-2.0.1.0/build/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
25813fcb980e7e26c101942ab049effa
  $fEqInputHandler :: GHC.Classes.Eq Foreign.R.EventLoop.InputHandler
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.R.EventLoop.InputHandler
                  Foreign.R.EventLoop.$fEqInputHandler_$c==
                  Foreign.R.EventLoop.$fEqInputHandler_$c/= -}
25813fcb980e7e26c101942ab049effa
  $fEqInputHandler_$c/= ::
    Foreign.R.EventLoop.InputHandler
    -> Foreign.R.EventLoop.InputHandler -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(S(S)LLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Foreign.R.EventLoop.InputHandler)
                   (b :: Foreign.R.EventLoop.InputHandler) ->
                 case Foreign.R.EventLoop.$fEqInputHandler_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
25813fcb980e7e26c101942ab049effa
  $fEqInputHandler_$c== ::
    Foreign.R.EventLoop.InputHandler
    -> Foreign.R.EventLoop.InputHandler -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S(S(S)LLLLL),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Unfolding: (\ (ds :: Foreign.R.EventLoop.InputHandler)
                   (ds1 :: Foreign.R.EventLoop.InputHandler) ->
                 case ds of wild { Foreign.R.EventLoop.InputHandler a1 a2 a3 a4 a5 a6 ->
                 case ds1 of wild1 { Foreign.R.EventLoop.InputHandler b1 b2 b3 b4 b5 b6 ->
                 case a1 of wild2 { GHC.Ptr.FunPtr a7 ->
                 case b1 of wild3 { GHC.Ptr.FunPtr b7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqAddr# a7 b7) of wild4 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case a2
                             `cast`
                           (Foreign.C.Types.N:CInt[0]) of wild5 { GHC.Int.I32# x ->
                      case b2
                             `cast`
                           (Foreign.C.Types.N:CInt[0]) of wild6 { GHC.Int.I32# y ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# x y) of wild7 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case a3
                                  `cast`
                                (Foreign.C.Types.N:CInt[0]) of wild8 { GHC.Int.I32# x1 ->
                           case b3
                                  `cast`
                                (Foreign.C.Types.N:CInt[0]) of wild9 { GHC.Int.I32# y1 ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# x1 y1) of wild10 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case a4
                                       `cast`
                                     (Nth:2
                                          (Trans
                                               (System.Posix.Types.N:Fd[0]
                                                ->_R System.Posix.Types.N:Fd[0]
                                                ->_R <GHC.Types.Bool>_R)
                                               (Foreign.C.Types.N:CInt[0]
                                                ->_R Foreign.C.Types.N:CInt[0]
                                                ->_R <GHC.Types.Bool>_R))) of wild11 { GHC.Int.I32# x2 ->
                                case b4
                                       `cast`
                                     (Nth:2
                                          (Nth:3
                                               (Trans
                                                    (System.Posix.Types.N:Fd[0]
                                                     ->_R System.Posix.Types.N:Fd[0]
                                                     ->_R <GHC.Types.Bool>_R)
                                                    (Foreign.C.Types.N:CInt[0]
                                                     ->_R Foreign.C.Types.N:CInt[0]
                                                     ->_R <GHC.Types.Bool>_R)))) of wild12 { GHC.Int.I32# y2 ->
                                case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# x2 y2) of wild13 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True
                                  -> case a5 of wild14 { GHC.Ptr.Ptr a8 ->
                                     case b5 of wild15 { GHC.Ptr.Ptr b8 ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.eqAddr# a8 b8) of wild16 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True
                                       -> GHC.Ptr.$fEqPtr_$c==
                                            @ Foreign.R.EventLoop.InputHandler
                                            a6
                                            b6 } } } } } } } } } } } } } } } } }) -}
25813fcb980e7e26c101942ab049effa
  $fShowInputHandler ::
    GHC.Show.Show Foreign.R.EventLoop.InputHandler
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.R.EventLoop.InputHandler
                  Foreign.R.EventLoop.$fShowInputHandler_$cshowsPrec
                  Foreign.R.EventLoop.$fShowInputHandler_$cshow
                  Foreign.R.EventLoop.$fShowInputHandler_$cshowList -}
25813fcb980e7e26c101942ab049effa
  $fShowInputHandler1 ::
    Foreign.R.EventLoop.InputHandler -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><L,U>,
     Unfolding: (\ (w :: Foreign.R.EventLoop.InputHandler)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { Foreign.R.EventLoop.InputHandler ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Foreign.R.EventLoop.$w$cshowsPrec
                   0#
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1 }) -}
fd2b029c687355d58f484cf87d256bf4
  $fShowInputHandler2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
25813fcb980e7e26c101942ab049effa
  $fShowInputHandler_$cshow ::
    Foreign.R.EventLoop.InputHandler -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Foreign.R.EventLoop.InputHandler) ->
                 Foreign.R.EventLoop.$fShowInputHandler_$cshowsPrec
                   Foreign.R.EventLoop.$fShowInputHandler2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
25813fcb980e7e26c101942ab049effa
  $fShowInputHandler_$cshowList ::
    [Foreign.R.EventLoop.InputHandler] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Foreign.R.EventLoop.InputHandler
                   Foreign.R.EventLoop.$fShowInputHandler1) -}
25813fcb980e7e26c101942ab049effa
  $fShowInputHandler_$cshowsPrec ::
    GHC.Types.Int -> Foreign.R.EventLoop.InputHandler -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Foreign.R.EventLoop.InputHandler)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Foreign.R.EventLoop.InputHandler ww3 ww4 ww5 ww6 ww7 ww8 ->
                 Foreign.R.EventLoop.$w$cshowsPrec
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   w2 } }) -}
25813fcb980e7e26c101942ab049effa
  $fStorableInputHandler ::
    Foreign.Storable.Storable Foreign.R.EventLoop.InputHandler
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.R.EventLoop.InputHandler
                  Foreign.R.EventLoop.$fStorableInputHandler_$csizeOf
                  Foreign.R.EventLoop.$fStorableInputHandler_$calignment
                  Foreign.R.EventLoop.$fStorableInputHandler6
                    `cast`
                  (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                   ->_R <GHC.Types.Int>_R
                   ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.EventLoop.InputHandler>_R))
                  Foreign.R.EventLoop.$fStorableInputHandler5
                    `cast`
                  (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                   ->_R <GHC.Types.Int>_R
                   ->_R <Foreign.R.EventLoop.InputHandler>_R
                   ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                  Foreign.R.EventLoop.$fStorableInputHandler4
                    `cast`
                  (forall (b :: <*>_N).
                   <GHC.Ptr.Ptr b>_R
                   ->_R <GHC.Types.Int>_R
                   ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.EventLoop.InputHandler>_R))
                  Foreign.R.EventLoop.$fStorableInputHandler3
                    `cast`
                  (forall (b :: <*>_N).
                   <GHC.Ptr.Ptr b>_R
                   ->_R <GHC.Types.Int>_R
                   ->_R <Foreign.R.EventLoop.InputHandler>_R
                   ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                  Foreign.R.EventLoop.$fStorableInputHandler2
                    `cast`
                  (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                   ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.EventLoop.InputHandler>_R))
                  Foreign.R.EventLoop.$fStorableInputHandler1
                    `cast`
                  (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                   ->_R <Foreign.R.EventLoop.InputHandler>_R
                   ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
25813fcb980e7e26c101942ab049effa
  $fStorableInputHandler1 ::
    GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> Foreign.R.EventLoop.InputHandler
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S(S)S(S)S(S)S(S)S(S)S(S)),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (hptr :: GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler)
                   (ds :: Foreign.R.EventLoop.InputHandler)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case ds of wild { Foreign.R.EventLoop.InputHandler ds1 ds2 ds3 ds4 ds5 ds6 ->
                 case hptr of wild1 { GHC.Ptr.Ptr addr ->
                 case ds1 of wild2 { GHC.Ptr.FunPtr x ->
                 case GHC.Prim.writeAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 8#)
                        0#
                        x
                        eta of s2 { DEFAULT ->
                 case ds2
                        `cast`
                      (Nth:2
                           (Nth:3
                                (Nth:3
                                     (Trans
                                          (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                                           ->_R <GHC.Types.Int>_R
                                           ->_R Foreign.C.Types.N:CInt[0]
                                           ->_R <GHC.Types.IO ()>_R)
                                          (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                                           ->_R <GHC.Types.Int>_R
                                           ->_R <GHC.Int.Int32>_R
                                           ->_R GHC.Types.N:IO[0]
                                                    <()>_R))))) of wild3 { GHC.Int.I32# x1 ->
                 case GHC.Prim.writeInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        addr
                        0#
                        x1
                        s2 of s1 { DEFAULT ->
                 case ds3
                        `cast`
                      (Nth:2
                           (Nth:3
                                (Nth:3
                                     (Trans
                                          (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                                           ->_R <GHC.Types.Int>_R
                                           ->_R Foreign.C.Types.N:CInt[0]
                                           ->_R <GHC.Types.IO ()>_R)
                                          (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                                           ->_R <GHC.Types.Int>_R
                                           ->_R <GHC.Int.Int32>_R
                                           ->_R GHC.Types.N:IO[0]
                                                    <()>_R))))) of wild4 { GHC.Int.I32# x2 ->
                 case GHC.Prim.writeInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 24#)
                        0#
                        x2
                        s1 of s3 { DEFAULT ->
                 case ds4
                        `cast`
                      (Trans
                           (System.Posix.Types.N:Fd[0])
                           (Nth:2
                                (Nth:3
                                     (Nth:3
                                          (Trans
                                               (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                                                ->_R <GHC.Types.Int>_R
                                                ->_R Foreign.C.Types.N:CInt[0]
                                                ->_R <GHC.Types.IO ()>_R)
                                               (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                                                ->_R <GHC.Types.Int>_R
                                                ->_R <GHC.Int.Int32>_R
                                                ->_R GHC.Types.N:IO[0]
                                                         <()>_R)))))) of wild5 { GHC.Int.I32# x3 ->
                 case GHC.Prim.writeInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 4#)
                        0#
                        x3
                        s3 of s4 { DEFAULT ->
                 case ds5 of wild6 { GHC.Ptr.Ptr x4 ->
                 case GHC.Prim.writeAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 32#)
                        0#
                        x4
                        s4 of s5 { DEFAULT ->
                 case ds6
                        `cast`
                      (GHC.Ptr.Ptr
                         <Foreign.R.EventLoop.InputHandler, GHC.Types.Any>)_R of wild7 { GHC.Ptr.Ptr x5 ->
                 case GHC.Prim.writeAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 16#)
                        0#
                        x5
                        s5 of s6 { DEFAULT ->
                 (# s6, GHC.Tuple.() #) } } } } } } } } } } } } } }) -}
25813fcb980e7e26c101942ab049effa
  $fStorableInputHandler2 ::
    GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.EventLoop.InputHandler #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { GHC.Ptr.Ptr ww1 ->
                 Foreign.R.EventLoop.$w$cpeek ww1 w1 }) -}
25813fcb980e7e26c101942ab049effa
  $fStorableInputHandler3 ::
    GHC.Ptr.Ptr b
    -> GHC.Types.Int
    -> Foreign.R.EventLoop.InputHandler
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S(S)S(S)S(S)S(S)S(S)S(S)),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ b
                   (ptr :: GHC.Ptr.Ptr b)
                   (off :: GHC.Types.Int)
                   (eta :: Foreign.R.EventLoop.InputHandler)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case eta of wild { Foreign.R.EventLoop.InputHandler ds ds1 ds2 ds3 ds4 ds5 ->
                 case ptr of wild1 { GHC.Ptr.Ptr addr ->
                 case off of wild2 { GHC.Types.I# d ->
                 case ds of wild3 { GHC.Ptr.FunPtr x ->
                 let {
                   addr1 :: GHC.Prim.Addr# = GHC.Prim.plusAddr# addr d
                 } in
                 case GHC.Prim.writeAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr1 8#)
                        0#
                        x
                        eta1 of s2 { DEFAULT ->
                 case ds1
                        `cast`
                      (Nth:2
                           (Nth:3
                                (Nth:3
                                     (Trans
                                          (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                                           ->_R <GHC.Types.Int>_R
                                           ->_R Foreign.C.Types.N:CInt[0]
                                           ->_R <GHC.Types.IO ()>_R)
                                          (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                                           ->_R <GHC.Types.Int>_R
                                           ->_R <GHC.Int.Int32>_R
                                           ->_R GHC.Types.N:IO[0]
                                                    <()>_R))))) of wild4 { GHC.Int.I32# x1 ->
                 case GHC.Prim.writeInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        addr1
                        0#
                        x1
                        s2 of s1 { DEFAULT ->
                 case ds2
                        `cast`
                      (Nth:2
                           (Nth:3
                                (Nth:3
                                     (Trans
                                          (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                                           ->_R <GHC.Types.Int>_R
                                           ->_R Foreign.C.Types.N:CInt[0]
                                           ->_R <GHC.Types.IO ()>_R)
                                          (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                                           ->_R <GHC.Types.Int>_R
                                           ->_R <GHC.Int.Int32>_R
                                           ->_R GHC.Types.N:IO[0]
                                                    <()>_R))))) of wild5 { GHC.Int.I32# x2 ->
                 case GHC.Prim.writeInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr1 24#)
                        0#
                        x2
                        s1 of s3 { DEFAULT ->
                 case ds3
                        `cast`
                      (Trans
                           (System.Posix.Types.N:Fd[0])
                           (Nth:2
                                (Nth:3
                                     (Nth:3
                                          (Trans
                                               (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                                                ->_R <GHC.Types.Int>_R
                                                ->_R Foreign.C.Types.N:CInt[0]
                                                ->_R <GHC.Types.IO ()>_R)
                                               (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                                                ->_R <GHC.Types.Int>_R
                                                ->_R <GHC.Int.Int32>_R
                                                ->_R GHC.Types.N:IO[0]
                                                         <()>_R)))))) of wild6 { GHC.Int.I32# x3 ->
                 case GHC.Prim.writeInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr1 4#)
                        0#
                        x3
                        s3 of s4 { DEFAULT ->
                 case ds4 of wild7 { GHC.Ptr.Ptr x4 ->
                 case GHC.Prim.writeAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr1 32#)
                        0#
                        x4
                        s4 of s5 { DEFAULT ->
                 case ds5
                        `cast`
                      (GHC.Ptr.Ptr
                         <Foreign.R.EventLoop.InputHandler, GHC.Types.Any>)_R of wild8 { GHC.Ptr.Ptr x5 ->
                 case GHC.Prim.writeAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr1 16#)
                        0#
                        x5
                        s5 of s6 { DEFAULT ->
                 (# s6, GHC.Tuple.() #) } } } } } } } } } } } } } } }) -}
25813fcb980e7e26c101942ab049effa
  $fStorableInputHandler4 ::
    GHC.Ptr.Ptr b
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.EventLoop.InputHandler #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ b
                   (w :: GHC.Ptr.Ptr b)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { GHC.Ptr.Ptr ww1 ->
                 case w1 of ww2 { GHC.Types.I# ww3 ->
                 Foreign.R.EventLoop.$w$cpeekByteOff @ b ww1 ww3 w2 } }) -}
25813fcb980e7e26c101942ab049effa
  $fStorableInputHandler5 ::
    GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> GHC.Types.Int
    -> Foreign.R.EventLoop.InputHandler
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S(S)S(S)S(S)S(S)S(S)S(S)),1*U(1*U(U),1*U(U),1*U(U),1*U(U),1*U(U),1*U(U))><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (ptr :: GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler)
                   (off :: GHC.Types.Int)
                   (val :: Foreign.R.EventLoop.InputHandler)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case val of wild { Foreign.R.EventLoop.InputHandler ds ds1 ds2 ds3 ds4 ds5 ->
                 case ptr of wild1 { GHC.Ptr.Ptr addr ->
                 case off of wild2 { GHC.Types.I# x ->
                 case ds of wild3 { GHC.Ptr.FunPtr x1 ->
                 let {
                   addr1 :: GHC.Prim.Addr#
                   = GHC.Prim.plusAddr# addr (GHC.Prim.*# x 40#)
                 } in
                 case GHC.Prim.writeAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr1 8#)
                        0#
                        x1
                        eta of s2 { DEFAULT ->
                 case ds1
                        `cast`
                      (Nth:2
                           (Nth:3
                                (Nth:3
                                     (Trans
                                          (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                                           ->_R <GHC.Types.Int>_R
                                           ->_R Foreign.C.Types.N:CInt[0]
                                           ->_R <GHC.Types.IO ()>_R)
                                          (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                                           ->_R <GHC.Types.Int>_R
                                           ->_R <GHC.Int.Int32>_R
                                           ->_R GHC.Types.N:IO[0]
                                                    <()>_R))))) of wild4 { GHC.Int.I32# x2 ->
                 case GHC.Prim.writeInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        addr1
                        0#
                        x2
                        s2 of s1 { DEFAULT ->
                 case ds2
                        `cast`
                      (Nth:2
                           (Nth:3
                                (Nth:3
                                     (Trans
                                          (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                                           ->_R <GHC.Types.Int>_R
                                           ->_R Foreign.C.Types.N:CInt[0]
                                           ->_R <GHC.Types.IO ()>_R)
                                          (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                                           ->_R <GHC.Types.Int>_R
                                           ->_R <GHC.Int.Int32>_R
                                           ->_R GHC.Types.N:IO[0]
                                                    <()>_R))))) of wild5 { GHC.Int.I32# x3 ->
                 case GHC.Prim.writeInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr1 24#)
                        0#
                        x3
                        s1 of s3 { DEFAULT ->
                 case ds3
                        `cast`
                      (Trans
                           (System.Posix.Types.N:Fd[0])
                           (Nth:2
                                (Nth:3
                                     (Nth:3
                                          (Trans
                                               (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                                                ->_R <GHC.Types.Int>_R
                                                ->_R Foreign.C.Types.N:CInt[0]
                                                ->_R <GHC.Types.IO ()>_R)
                                               (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                                                ->_R <GHC.Types.Int>_R
                                                ->_R <GHC.Int.Int32>_R
                                                ->_R GHC.Types.N:IO[0]
                                                         <()>_R)))))) of wild6 { GHC.Int.I32# x4 ->
                 case GHC.Prim.writeInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr1 4#)
                        0#
                        x4
                        s3 of s4 { DEFAULT ->
                 case ds4 of wild7 { GHC.Ptr.Ptr x5 ->
                 case GHC.Prim.writeAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr1 32#)
                        0#
                        x5
                        s4 of s5 { DEFAULT ->
                 case ds5
                        `cast`
                      (GHC.Ptr.Ptr
                         <Foreign.R.EventLoop.InputHandler, GHC.Types.Any>)_R of wild8 { GHC.Ptr.Ptr x6 ->
                 case GHC.Prim.writeAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr1 16#)
                        0#
                        x6
                        s5 of s6 { DEFAULT ->
                 (# s6, GHC.Tuple.() #) } } } } } } } } } } } } } } }) -}
25813fcb980e7e26c101942ab049effa
  $fStorableInputHandler6 ::
    GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.EventLoop.InputHandler #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { GHC.Ptr.Ptr ww1 ->
                 case w1 of ww2 { GHC.Types.I# ww3 ->
                 Foreign.R.EventLoop.$w$cpeekElemOff ww1 ww3 w2 } }) -}
d2f490795711e3e78a0f3b9ab35c0323
  $fStorableInputHandler7 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 8#) -}
b7a1466a182657f3c65105602d3d45e7
  $fStorableInputHandler8 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 40#) -}
25813fcb980e7e26c101942ab049effa
  $fStorableInputHandler_$calignment ::
    Foreign.R.EventLoop.InputHandler -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Foreign.R.EventLoop.InputHandler) ->
                 Foreign.R.EventLoop.$fStorableInputHandler7) -}
25813fcb980e7e26c101942ab049effa
  $fStorableInputHandler_$csizeOf ::
    Foreign.R.EventLoop.InputHandler -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Foreign.R.EventLoop.InputHandler) ->
                 Foreign.R.EventLoop.$fStorableInputHandler8) -}
5558b900481095da2b3dff35876a4cc8
  $tc'InputHandler :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7275618835424228400##
                   426620382301581999##
                   Foreign.R.EventLoop.$trModule
                   Foreign.R.EventLoop.$tc'InputHandler2
                   0#
                   Foreign.R.EventLoop.$tc'InputHandler1) -}
0263ec7009b5c95059ab6230ed38d7c9
  $tc'InputHandler1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
911229b1fdaa7924686de1b6e3805363
  $tc'InputHandler2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Foreign.R.EventLoop.$tc'InputHandler3) -}
b47a1e71829588c796fdda3cc0e40c71
  $tc'InputHandler3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'InputHandler"#) -}
ba67c66b4428e31ac8bf39d99dad6370
  $tcFdSet :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17928600563442938764##
                   13398883525464525124##
                   Foreign.R.EventLoop.$trModule
                   Foreign.R.EventLoop.$tcFdSet1
                   0#
                   GHC.Types.krep$*) -}
68471d0d80b35937556d452489cced4f
  $tcFdSet1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foreign.R.EventLoop.$tcFdSet2) -}
238427beea7ed739c9504b64532d64e9
  $tcFdSet2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("FdSet"#) -}
b4e722fe87ced7a03c263d085e12c8b4
  $tcInputHandler :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15566020572110513166##
                   15842917120847365752##
                   Foreign.R.EventLoop.$trModule
                   Foreign.R.EventLoop.$tcInputHandler1
                   0#
                   GHC.Types.krep$*) -}
3124160a3f44b8a0db113293bd747de4
  $tcInputHandler1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Foreign.R.EventLoop.$tcInputHandler2) -}
b3da490a53607b1b4637da2ef3e5fe0a
  $tcInputHandler2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("InputHandler"#) -}
43dffc000f9296c44cd400621c569a8c
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Foreign.R.EventLoop.$trModule3
                   Foreign.R.EventLoop.$trModule1) -}
7b3e07188b043375e2e9d4edf1e20271
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foreign.R.EventLoop.$trModule2) -}
514165adba3c6f4c3e37e4165e63cffd
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Foreign.R.EventLoop"#) -}
cc88969dea0a3a5455638962e3a8ee18
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foreign.R.EventLoop.$trModule4) -}
ac2fa38945ecb23b93208edff58b857c
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz"#) -}
25813fcb980e7e26c101942ab049effa
  $w$cpeek ::
    GHC.Prim.Addr#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.EventLoop.InputHandler #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.readAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# ww 8#)
                        0#
                        w of ds2 { (#,#) ipv ipv1 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        ww
                        0#
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# ww 24#)
                        0#
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# ww 4#)
                        0#
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.Prim.readAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# ww 32#)
                        0#
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 case GHC.Prim.readAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# ww 16#)
                        0#
                        ipv8 of ds6 { (#,#) ipv10 ipv11 ->
                 (# ipv10,
                    Foreign.R.EventLoop.InputHandler
                      (GHC.Ptr.FunPtr @ (GHC.Ptr.Ptr () -> GHC.Types.IO ()) ipv1)
                      (GHC.Int.I32# ipv3)
                        `cast`
                      (Nth:3
                           (Nth:3
                                (Trans
                                     (Nth:3
                                          (Nth:3
                                               (Trans
                                                    (<GHC.Ptr.Ptr
                                                        Foreign.R.EventLoop.InputHandler>_R
                                                     ->_R <GHC.Types.Int>_R
                                                     ->_R Sym (GHC.Types.N:IO[0] <GHC.Int.Int32>_R))
                                                    (<GHC.Ptr.Ptr
                                                        Foreign.R.EventLoop.InputHandler>_R
                                                     ->_R <GHC.Types.Int>_R
                                                     ->_R (GHC.Types.IO
                                                             (Sym (Foreign.C.Types.N:CInt[0])))_R))))
                                     (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R))))
                      (GHC.Int.I32# ipv5)
                        `cast`
                      (Nth:3
                           (Nth:3
                                (Trans
                                     (Nth:3
                                          (Nth:3
                                               (Trans
                                                    (<GHC.Ptr.Ptr
                                                        Foreign.R.EventLoop.InputHandler>_R
                                                     ->_R <GHC.Types.Int>_R
                                                     ->_R Sym (GHC.Types.N:IO[0] <GHC.Int.Int32>_R))
                                                    (<GHC.Ptr.Ptr
                                                        Foreign.R.EventLoop.InputHandler>_R
                                                     ->_R <GHC.Types.Int>_R
                                                     ->_R (GHC.Types.IO
                                                             (Sym (Foreign.C.Types.N:CInt[0])))_R))))
                                     (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R))))
                      (GHC.Int.I32# ipv7)
                        `cast`
                      (Trans
                           (Nth:3
                                (Nth:3
                                     (Trans
                                          (Nth:3
                                               (Nth:3
                                                    (Trans
                                                         (<GHC.Ptr.Ptr
                                                             Foreign.R.EventLoop.InputHandler>_R
                                                          ->_R <GHC.Types.Int>_R
                                                          ->_R Sym (GHC.Types.N:IO[0]
                                                                        <GHC.Int.Int32>_R))
                                                         (<GHC.Ptr.Ptr
                                                             Foreign.R.EventLoop.InputHandler>_R
                                                          ->_R <GHC.Types.Int>_R
                                                          ->_R (GHC.Types.IO
                                                                  (Sym (Foreign.C.Types.N:CInt[0])))_R))))
                                          (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R))))
                           (Sym (System.Posix.Types.N:Fd[0])))
                      (GHC.Ptr.Ptr @ () ipv9)
                      (GHC.Ptr.Ptr @ GHC.Types.Any ipv11)
                        `cast`
                      (GHC.Ptr.Ptr
                         <GHC.Types.Any, Foreign.R.EventLoop.InputHandler>)_R #) } } } } } }) -}
25813fcb980e7e26c101942ab049effa
  $w$cpeekByteOff ::
    GHC.Prim.Addr#
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.EventLoop.InputHandler #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ b
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.Prim.Int#)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 let {
                   addr :: GHC.Prim.Addr# = GHC.Prim.plusAddr# ww ww1
                 } in
                 case GHC.Prim.readAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 8#)
                        0#
                        w of ds2 { (#,#) ipv ipv1 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        addr
                        0#
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 24#)
                        0#
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 4#)
                        0#
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.Prim.readAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 32#)
                        0#
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 case GHC.Prim.readAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 16#)
                        0#
                        ipv8 of ds6 { (#,#) ipv10 ipv11 ->
                 (# ipv10,
                    Foreign.R.EventLoop.InputHandler
                      (GHC.Ptr.FunPtr @ (GHC.Ptr.Ptr () -> GHC.Types.IO ()) ipv1)
                      (GHC.Int.I32# ipv3)
                        `cast`
                      (Nth:3
                           (Nth:3
                                (Trans
                                     (Nth:3
                                          (Nth:3
                                               (Trans
                                                    (<GHC.Ptr.Ptr
                                                        Foreign.R.EventLoop.InputHandler>_R
                                                     ->_R <GHC.Types.Int>_R
                                                     ->_R Sym (GHC.Types.N:IO[0] <GHC.Int.Int32>_R))
                                                    (<GHC.Ptr.Ptr
                                                        Foreign.R.EventLoop.InputHandler>_R
                                                     ->_R <GHC.Types.Int>_R
                                                     ->_R (GHC.Types.IO
                                                             (Sym (Foreign.C.Types.N:CInt[0])))_R))))
                                     (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R))))
                      (GHC.Int.I32# ipv5)
                        `cast`
                      (Nth:3
                           (Nth:3
                                (Trans
                                     (Nth:3
                                          (Nth:3
                                               (Trans
                                                    (<GHC.Ptr.Ptr
                                                        Foreign.R.EventLoop.InputHandler>_R
                                                     ->_R <GHC.Types.Int>_R
                                                     ->_R Sym (GHC.Types.N:IO[0] <GHC.Int.Int32>_R))
                                                    (<GHC.Ptr.Ptr
                                                        Foreign.R.EventLoop.InputHandler>_R
                                                     ->_R <GHC.Types.Int>_R
                                                     ->_R (GHC.Types.IO
                                                             (Sym (Foreign.C.Types.N:CInt[0])))_R))))
                                     (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R))))
                      (GHC.Int.I32# ipv7)
                        `cast`
                      (Trans
                           (Nth:3
                                (Nth:3
                                     (Trans
                                          (Nth:3
                                               (Nth:3
                                                    (Trans
                                                         (<GHC.Ptr.Ptr
                                                             Foreign.R.EventLoop.InputHandler>_R
                                                          ->_R <GHC.Types.Int>_R
                                                          ->_R Sym (GHC.Types.N:IO[0]
                                                                        <GHC.Int.Int32>_R))
                                                         (<GHC.Ptr.Ptr
                                                             Foreign.R.EventLoop.InputHandler>_R
                                                          ->_R <GHC.Types.Int>_R
                                                          ->_R (GHC.Types.IO
                                                                  (Sym (Foreign.C.Types.N:CInt[0])))_R))))
                                          (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R))))
                           (Sym (System.Posix.Types.N:Fd[0])))
                      (GHC.Ptr.Ptr @ () ipv9)
                      (GHC.Ptr.Ptr @ GHC.Types.Any ipv11)
                        `cast`
                      (GHC.Ptr.Ptr
                         <GHC.Types.Any, Foreign.R.EventLoop.InputHandler>)_R #) } } } } } }) -}
25813fcb980e7e26c101942ab049effa
  $w$cpeekElemOff ::
    GHC.Prim.Addr#
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.EventLoop.InputHandler #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.Prim.Int#)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 let {
                   addr :: GHC.Prim.Addr#
                   = GHC.Prim.plusAddr# ww (GHC.Prim.*# ww1 40#)
                 } in
                 case GHC.Prim.readAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 8#)
                        0#
                        w of ds2 { (#,#) ipv ipv1 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        addr
                        0#
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 24#)
                        0#
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.readInt32OffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 4#)
                        0#
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.Prim.readAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 32#)
                        0#
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 case GHC.Prim.readAddrOffAddr#
                        @ GHC.Prim.RealWorld
                        (GHC.Prim.plusAddr# addr 16#)
                        0#
                        ipv8 of ds6 { (#,#) ipv10 ipv11 ->
                 (# ipv10,
                    Foreign.R.EventLoop.InputHandler
                      (GHC.Ptr.FunPtr @ (GHC.Ptr.Ptr () -> GHC.Types.IO ()) ipv1)
                      (GHC.Int.I32# ipv3)
                        `cast`
                      (Nth:3
                           (Nth:3
                                (Trans
                                     (Nth:3
                                          (Nth:3
                                               (Trans
                                                    (<GHC.Ptr.Ptr
                                                        Foreign.R.EventLoop.InputHandler>_R
                                                     ->_R <GHC.Types.Int>_R
                                                     ->_R Sym (GHC.Types.N:IO[0] <GHC.Int.Int32>_R))
                                                    (<GHC.Ptr.Ptr
                                                        Foreign.R.EventLoop.InputHandler>_R
                                                     ->_R <GHC.Types.Int>_R
                                                     ->_R (GHC.Types.IO
                                                             (Sym (Foreign.C.Types.N:CInt[0])))_R))))
                                     (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R))))
                      (GHC.Int.I32# ipv5)
                        `cast`
                      (Nth:3
                           (Nth:3
                                (Trans
                                     (Nth:3
                                          (Nth:3
                                               (Trans
                                                    (<GHC.Ptr.Ptr
                                                        Foreign.R.EventLoop.InputHandler>_R
                                                     ->_R <GHC.Types.Int>_R
                                                     ->_R Sym (GHC.Types.N:IO[0] <GHC.Int.Int32>_R))
                                                    (<GHC.Ptr.Ptr
                                                        Foreign.R.EventLoop.InputHandler>_R
                                                     ->_R <GHC.Types.Int>_R
                                                     ->_R (GHC.Types.IO
                                                             (Sym (Foreign.C.Types.N:CInt[0])))_R))))
                                     (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R))))
                      (GHC.Int.I32# ipv7)
                        `cast`
                      (Trans
                           (Nth:3
                                (Nth:3
                                     (Trans
                                          (Nth:3
                                               (Nth:3
                                                    (Trans
                                                         (<GHC.Ptr.Ptr
                                                             Foreign.R.EventLoop.InputHandler>_R
                                                          ->_R <GHC.Types.Int>_R
                                                          ->_R Sym (GHC.Types.N:IO[0]
                                                                        <GHC.Int.Int32>_R))
                                                         (<GHC.Ptr.Ptr
                                                             Foreign.R.EventLoop.InputHandler>_R
                                                          ->_R <GHC.Types.Int>_R
                                                          ->_R (GHC.Types.IO
                                                                  (Sym (Foreign.C.Types.N:CInt[0])))_R))))
                                          (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R))))
                           (Sym (System.Posix.Types.N:Fd[0])))
                      (GHC.Ptr.Ptr @ () ipv9)
                      (GHC.Ptr.Ptr @ GHC.Types.Any ipv11)
                        `cast`
                      (GHC.Ptr.Ptr
                         <GHC.Types.Any, Foreign.R.EventLoop.InputHandler>)_R #) } } } } } }) -}
25813fcb980e7e26c101942ab049effa
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Ptr.FunPtr (GHC.Ptr.Ptr () -> GHC.Types.IO ())
    -> Foreign.C.Types.CInt
    -> Foreign.C.Types.CInt
    -> System.Posix.Types.Fd
    -> GHC.Ptr.Ptr ()
    -> GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 8,
     Strictness: <S,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,U>,
     Inline: [0] -}
be802cc071a18a822ce9262a0d5cb8f4
  $wremoveInputHandler ::
    GHC.Prim.Addr#
    -> GHC.Prim.Addr#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 3, Strictness: <S,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.Prim.Addr#)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (Foreign.Marshal.Alloc.allocaBytesAligned
                    @ (GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler)
                    @ GHC.Types.Bool
                    Foreign.Storable.$fStorableDouble5
                    Foreign.Storable.$fStorableDouble5
                    (\ (ptr :: GHC.Ptr.Ptr
                                 (GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler))[OneShot]
                       (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     case ptr of wild { GHC.Ptr.Ptr a1 ->
                     case GHC.Prim.writeAddrOffAddr#
                            @ GHC.Prim.RealWorld
                            a1
                            0#
                            ww
                            s of s2 { DEFAULT ->
                     case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                                  -> GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Int# #)}
                            a1
                            ww1
                            s2 of wild1 { (#,#) ds ds1 ->
                     case GHC.Prim.narrow32Int# ds1 of wild2 {
                       DEFAULT
                       -> case Foreign.R.EventLoop.removeInputHandler2
                          ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
                          of {}
                       0# -> (# ds, GHC.Types.False #)
                       1# -> (# ds, GHC.Types.True #) } } } })
                      `cast`
                    (<GHC.Ptr.Ptr (GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler)>_R
                     ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)))
                   `cast`
                 (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)
                   w) -}
d46365c66b8bd5ed86d364f5541c6638
  data FdSet
25813fcb980e7e26c101942ab049effa
  data InputHandler
    = InputHandler {inputHandlerCallback :: GHC.Ptr.FunPtr
                                              (GHC.Ptr.Ptr () -> GHC.Types.IO ()),
                    inputHandlerActivity :: Foreign.C.Types.CInt,
                    inputHandlerActive :: Foreign.C.Types.CInt,
                    inputHandlerFD :: System.Posix.Types.Fd,
                    inputHandlerUserData :: GHC.Ptr.Ptr (),
                    inputHandlerNext :: GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler}
45dff33c78efd4f6d5f0b60688d3488c
  addInputHandler ::
    GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> System.Posix.Types.Fd
    -> GHC.Ptr.FunPtr (GHC.Ptr.Ptr () -> GHC.Types.IO ())
    -> GHC.Types.Int
    -> GHC.Types.IO (GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.EventLoop.addInputHandler1
                  `cast`
                (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                 ->_R <System.Posix.Types.Fd>_R
                 ->_R <GHC.Ptr.FunPtr (GHC.Ptr.Ptr () -> GHC.Types.IO ())>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R)) -}
59704571cf9c1647fe50e476deb4b056
  addInputHandler1 ::
    GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> System.Posix.Types.Fd
    -> GHC.Ptr.FunPtr (GHC.Ptr.Ptr () -> GHC.Types.IO ())
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler #)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (5, True, False)
                (\ (ihptr :: GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler)
                   (fd :: System.Posix.Types.Fd)
                   (f :: GHC.Ptr.FunPtr (GHC.Ptr.Ptr () -> GHC.Types.IO ()))
                   (activity :: GHC.Types.Int)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case ihptr of ds { GHC.Ptr.Ptr ds1 ->
                 case fd
                        `cast`
                      (Trans
                           (System.Posix.Types.N:Fd[0])
                           (Foreign.C.Types.N:CInt[0])) of ds2 { GHC.Int.I32# ds3 ->
                 case f of ds4 { GHC.Ptr.FunPtr ds5 ->
                 case activity of wild { GHC.Types.I# x# ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.Int#
                                                                              -> GHC.Prim.Addr#
                                                                              -> GHC.Prim.Int#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        ds3
                        ds5
                        (GHC.Prim.narrow32Int# x#)
                        eta of wild1 { (#,#) ds6 ds7 ->
                 (# ds6,
                    GHC.Ptr.Ptr @ Foreign.R.EventLoop.InputHandler ds7 #) } } } } }) -}
431a822aefdf9a543fbe7f88c4683edb
  checkActivity ::
    Foreign.C.Types.CInt
    -> Foreign.C.Types.CInt
    -> GHC.Types.IO (GHC.Ptr.Ptr Foreign.R.EventLoop.FdSet)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, False, False)
                (\ (ds :: GHC.Int.Int32) (ds1 :: GHC.Int.Int32) ->
                 case ds of ds2 { GHC.Int.I32# ds3 ->
                 case ds1 of ds4 { GHC.Int.I32# ds5 ->
                 (\ (ds6 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  case {__pkg_ccall inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Int#
                                                                            -> GHC.Prim.Int#
                                                                            -> GHC.Prim.State#
                                                                                 GHC.Prim.RealWorld
                                                                            -> (# GHC.Prim.State#
                                                                                    GHC.Prim.RealWorld,
                                                                                  GHC.Prim.Addr# #)}
                         ds3
                         ds5
                         ds6 of wild { (#,#) ds7 ds8 ->
                  (# ds7, GHC.Ptr.Ptr @ Foreign.R.EventLoop.FdSet ds8 #) })
                   `cast`
                 (Sym (GHC.Types.N:IO[0]
                           <GHC.Ptr.Ptr Foreign.R.EventLoop.FdSet>_R)) } })
                  `cast`
                (Sym (Foreign.C.Types.N:CInt[0])
                 ->_R Sym (Foreign.C.Types.N:CInt[0])
                 ->_R <GHC.Types.IO (GHC.Ptr.Ptr Foreign.R.EventLoop.FdSet)>_R) -}
2aa0e733cedbaf002394ce2f0e7beb66
  graphicsPolledEvents ::
    GHC.Ptr.Ptr (GHC.Ptr.FunPtr (GHC.Types.IO ()))
  {- Strictness: m,
     Unfolding: (GHC.Ptr.Ptr
                   @ (GHC.Ptr.FunPtr (GHC.Types.IO ()))
                   __label "Rg_PolledEvents" (data)) -}
ee28ba8ad92e38545bfe6bd6b0613587
  graphicsPollingPeriod :: GHC.Ptr.Ptr Foreign.C.Types.CInt
  {- Strictness: m,
     Unfolding: (GHC.Ptr.Ptr
                   @ Foreign.C.Types.CInt
                   __label "Rg_wait_usec" (data)) -}
25813fcb980e7e26c101942ab049effa
  inputHandlerActive ::
    Foreign.R.EventLoop.InputHandler -> Foreign.C.Types.CInt
  RecSel Left Foreign.R.EventLoop.InputHandler
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLL),1*U(A,A,1*U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foreign.R.EventLoop.InputHandler) ->
                 case ds of wild { Foreign.R.EventLoop.InputHandler ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds3 }) -}
25813fcb980e7e26c101942ab049effa
  inputHandlerActivity ::
    Foreign.R.EventLoop.InputHandler -> Foreign.C.Types.CInt
  RecSel Left Foreign.R.EventLoop.InputHandler
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLL),1*U(A,1*U(U),A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foreign.R.EventLoop.InputHandler) ->
                 case ds of wild { Foreign.R.EventLoop.InputHandler ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds2 }) -}
25813fcb980e7e26c101942ab049effa
  inputHandlerCallback ::
    Foreign.R.EventLoop.InputHandler
    -> GHC.Ptr.FunPtr (GHC.Ptr.Ptr () -> GHC.Types.IO ())
  RecSel Left Foreign.R.EventLoop.InputHandler
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U(U),A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foreign.R.EventLoop.InputHandler) ->
                 case ds of wild { Foreign.R.EventLoop.InputHandler ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds1 }) -}
25813fcb980e7e26c101942ab049effa
  inputHandlerFD ::
    Foreign.R.EventLoop.InputHandler -> System.Posix.Types.Fd
  RecSel Left Foreign.R.EventLoop.InputHandler
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLL),1*U(A,A,A,1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foreign.R.EventLoop.InputHandler) ->
                 case ds of wild { Foreign.R.EventLoop.InputHandler ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds4 }) -}
25813fcb980e7e26c101942ab049effa
  inputHandlerNext ::
    Foreign.R.EventLoop.InputHandler
    -> GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
  RecSel Left Foreign.R.EventLoop.InputHandler
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLS),1*U(A,A,A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foreign.R.EventLoop.InputHandler) ->
                 case ds of wild { Foreign.R.EventLoop.InputHandler ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds6 }) -}
25813fcb980e7e26c101942ab049effa
  inputHandlerUserData ::
    Foreign.R.EventLoop.InputHandler -> GHC.Ptr.Ptr ()
  RecSel Left Foreign.R.EventLoop.InputHandler
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSL),1*U(A,A,A,A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foreign.R.EventLoop.InputHandler) ->
                 case ds of wild { Foreign.R.EventLoop.InputHandler ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds5 }) -}
377e0df2fab9d6677c1772791adbef8e
  inputHandlers ::
    GHC.Ptr.Ptr (GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler)
  {- Strictness: m,
     Unfolding: (GHC.Ptr.Ptr
                   @ (GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler)
                   __label "R_InputHandlers" (data)) -}
2f2fadb1df0d3238ea42e423fda32d04
  polledEvents :: GHC.Ptr.Ptr (GHC.Ptr.FunPtr (GHC.Types.IO ()))
  {- Strictness: m,
     Unfolding: (GHC.Ptr.Ptr
                   @ (GHC.Ptr.FunPtr (GHC.Types.IO ()))
                   __label "R_PolledEvents" (data)) -}
d7663caa789ecdb51b585a1c52858f52
  pollingPeriod :: GHC.Ptr.Ptr Foreign.C.Types.CInt
  {- Strictness: m,
     Unfolding: (GHC.Ptr.Ptr
                   @ Foreign.C.Types.CInt
                   __label "R_wait_usec" (data)) -}
c8af86a6b87263673e53c9eb1f09b49d
  removeInputHandler ::
    GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> GHC.Types.IO GHC.Types.Bool
  {- Arity: 3, Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.EventLoop.removeInputHandler1
                  `cast`
                (<GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                 ->_R <GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)) -}
f39c68a92abb3d1ebff09e557f3d16b7
  removeInputHandler1 ::
    GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 3, Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler)
                   (w1 :: GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { GHC.Ptr.Ptr ww1 ->
                 case w1 of ww2 { GHC.Ptr.Ptr ww3 ->
                 Foreign.R.EventLoop.$wremoveInputHandler ww1 ww3 w2 } }) -}
1ef303c67f044a148f8b516e66ebdba2
  removeInputHandler2 :: GHC.Types.IO GHC.Types.Bool
  {- Strictness: x -}
ebf771dd4f26a8789a212673057c67ab
  runHandlers ::
    GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler
    -> GHC.Ptr.Ptr Foreign.R.EventLoop.FdSet -> GHC.Types.IO ()
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, False, False)
                (\ (ds :: GHC.Ptr.Ptr Foreign.R.EventLoop.InputHandler)
                   (ds1 :: GHC.Ptr.Ptr Foreign.R.EventLoop.FdSet) ->
                 case ds of ds2 { GHC.Ptr.Ptr ds3 ->
                 case ds1 of ds4 { GHC.Ptr.Ptr ds5 ->
                 (\ (ds6 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                               -> GHC.Prim.Addr#
                                                                               -> GHC.Prim.State#
                                                                                    GHC.Prim.RealWorld
                                                                               -> (# GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld #)}
                         ds3
                         ds5
                         ds6 of wild { Unit# ds7 ->
                  (# ds7, GHC.Tuple.() #) })
                   `cast`
                 (Sym (GHC.Types.N:IO[0] <()>_R)) } }) -}
instance [safe] GHC.Classes.Eq [Foreign.R.EventLoop.InputHandler]
  = Foreign.R.EventLoop.$fEqInputHandler
instance [safe] GHC.Show.Show [Foreign.R.EventLoop.InputHandler]
  = Foreign.R.EventLoop.$fShowInputHandler
instance [safe] Foreign.Storable.Storable [Foreign.R.EventLoop.InputHandler]
  = Foreign.R.EventLoop.$fStorableInputHandler
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

