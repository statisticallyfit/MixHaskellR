
==================== FINAL INTERFACE ====================
2017-12-28 08:49:05.986008 UTC

interface inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz:Foreign.R 8022
  interface hash: f4e4963c2bb38235b43f59333bd773ac
  ABI hash: 51460710da704a1aff942901939ab83a
  export-list hash: 66604cef250b707139e6d39041287043
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 3b0f9e8d33cef3df9318172f000ecf41
  sig of: Nothing
  used TH splices: False
  where
exports:
  Foreign.R.allocList
  Foreign.R.allocSEXP
  Foreign.R.allocVector
  Foreign.R.allocVectorProtected
  Foreign.R.car
  Foreign.R.cdr
  Foreign.R.char
  Foreign.R.closureBody
  Foreign.R.closureEnv
  Foreign.R.closureFormals
  Foreign.R.complex
  Foreign.R.cons
  Foreign.R.envEnclosing
  Foreign.R.envFrame
  Foreign.R.envHashtab
  Foreign.R.eval
  Foreign.R.findFun
  Foreign.R.findVar
  Foreign.R.gc
  Foreign.R.indexVector
  Foreign.R.install
  Foreign.R.integer
  Foreign.R.lang1
  Foreign.R.lang2
  Foreign.R.lang3
  Foreign.R.lcons
  Foreign.R.logical
  Foreign.R.mkChar
  Foreign.R.mkCharCE
  Foreign.R.mkString
  Foreign.R.mkWeakRef
  Foreign.R.preserveObject
  Foreign.R.printValue
  Foreign.R.promiseCode
  Foreign.R.promiseEnv
  Foreign.R.promiseValue
  Foreign.R.protect
  Foreign.R.raw
  Foreign.R.readVector
  Foreign.R.real
  Foreign.R.releaseObject
  Foreign.R.string
  Foreign.R.symbolInternal
  Foreign.R.symbolPrintName
  Foreign.R.symbolValue
  Foreign.R.tag
  Foreign.R.trueLength
  Foreign.R.tryEval
  Foreign.R.tryEvalSilent
  Foreign.R.unprotect
  Foreign.R.unprotectPtr
  Foreign.R.withProtected
  Foreign.R.writeVector
  Foreign.R.Internal.asTypeOf
  Foreign.R.Internal.baseEnv
  Foreign.R.Internal.cast
  Foreign.R.Internal.emptyEnv
  Foreign.R.Internal.getAttribute
  Foreign.R.Internal.getAttributes
  Foreign.R.Internal.globalEnv
  Foreign.R.Internal.interruptsPending
  Foreign.R.Internal.isRInteractive
  Foreign.R.Internal.isS4
  Foreign.R.Internal.length
  Foreign.R.Internal.mark
  Foreign.R.Internal.missingArg
  Foreign.R.Internal.named
  Foreign.R.Internal.nilValue
  Foreign.R.Internal.peekInfo
  Foreign.R.Internal.pokeInfo
  Foreign.R.Internal.release
  Foreign.R.Internal.setAttributes
  Foreign.R.Internal.setCar
  Foreign.R.Internal.setCdr
  Foreign.R.Internal.setTag
  Foreign.R.Internal.sexp
  Foreign.R.Internal.signalHandlers
  Foreign.R.Internal.typeOf
  Foreign.R.Internal.unSomeSEXP
  Foreign.R.Internal.unboundValue
  Foreign.R.Internal.unsafeCoerce
  Foreign.R.Internal.unsafeRelease
  Foreign.R.Internal.unsafeSEXPToVectorPtr
  Foreign.R.Internal.unsafeVectorPtrToSEXP
  Foreign.R.Internal.unsexp
  Foreign.R.CEType{Foreign.R.CE_ANY Foreign.R.CE_BYTES Foreign.R.CE_LATIN1 Foreign.R.CE_NATIVE Foreign.R.CE_SYMBOL Foreign.R.CE_UTF8}
  Foreign.R.SEXP0
  Foreign.R.Internal.SEXP{Foreign.R.Internal.SEXP unSEXP}
  Foreign.R.Internal.SEXPInfo{Foreign.R.Internal.SEXPInfo infoDebug infoGcCls infoGcGen infoGp infoMark infoNamed infoObj infoSpare infoTrace infoType}
  Foreign.R.Internal.SEXPREC
  Foreign.R.Internal.SomeSEXP{Foreign.R.Internal.SomeSEXP}
  Foreign.R.Type.IsExpression
  Foreign.R.Type.IsGenericVector
  Foreign.R.Type.IsList
  Foreign.R.Type.IsPairList
  Foreign.R.Type.IsVector
  Foreign.R.Type.Logical{Foreign.R.Type.FALSE Foreign.R.Type.NA Foreign.R.Type.TRUE}
  Foreign.R.Type.PairList
  Foreign.R.Type.SEXPTYPE{Foreign.R.Type.Any Foreign.R.Type.Builtin Foreign.R.Type.Bytecode Foreign.R.Type.Char Foreign.R.Type.Closure Foreign.R.Type.Complex Foreign.R.Type.DotDotDot Foreign.R.Type.Env Foreign.R.Type.Expr Foreign.R.Type.ExtPtr Foreign.R.Type.Free Foreign.R.Type.Fun Foreign.R.Type.Int Foreign.R.Type.Lang Foreign.R.Type.List Foreign.R.Type.Logical Foreign.R.Type.New Foreign.R.Type.Nil Foreign.R.Type.Promise Foreign.R.Type.Raw Foreign.R.Type.Real Foreign.R.Type.S4 Foreign.R.Type.Special Foreign.R.Type.String Foreign.R.Type.Symbol Foreign.R.Type.Vector Foreign.R.Type.WeakRef}
  Foreign.R.Type.SSEXPTYPE
  Data.Singletons.Sing{Foreign.R.Type.SAny Foreign.R.Type.SBuiltin Foreign.R.Type.SBytecode Foreign.R.Type.SChar Foreign.R.Type.SClosure Foreign.R.Type.SComplex Foreign.R.Type.SDotDotDot Foreign.R.Type.SEnv Foreign.R.Type.SExpr Foreign.R.Type.SExtPtr Foreign.R.Type.SFree Foreign.R.Type.SFun Foreign.R.Type.SInt Foreign.R.Type.SLang Foreign.R.Type.SList Foreign.R.Type.SLogical Foreign.R.Type.SNew Foreign.R.Type.SNil Foreign.R.Type.SPromise Foreign.R.Type.SRaw Foreign.R.Type.SReal Foreign.R.Type.SS4 Foreign.R.Type.SSpecial Foreign.R.Type.SString Foreign.R.Type.SSymbol Foreign.R.Type.SVector Foreign.R.Type.SWeakRef Data.Singletons.SLambda Data.Singletons.Prelude.Instances.SFalse Data.Singletons.Prelude.Instances.STrue Data.Singletons.Prelude.Instances.STuple0 Data.Singletons.Prelude.Instances.STuple2 Data.Singletons.Prelude.Instances.STuple3 Data.Singletons.Prelude.Instances.STuple4 Data.Singletons.Prelude.Instances.STuple5 Data.Singletons.Prelude.Instances.STuple6 Data.Singletons.Prelude.Instances.STuple7 applySing}
module dependencies: Control.Memory.Region Foreign.R.Constraints
                     Foreign.R.Internal Foreign.R.Type Internal.Error
                     Language.R.HExp [boot]
package dependencies: array-0.5.2.0 base-4.10.1.0 binary-0.8.5.1
                      bytestring-0.10.8.2 containers-0.5.10.2 deepseq-1.4.3.0
                      ghc-boot-th-8.2.2 ghc-prim-0.5.1.1 integer-gmp-1.0.1.0 mtl-2.2.1
                      pretty-1.1.3.3 primitive-0.6.2.0 safe-0.3.15 singletons-2.3.1
                      syb-0.7 template-haskell-2.12.0.0 text-1.2.2.2 th-desugar-1.7
                      th-expand-syns-0.4.3.0 th-lift-0.7.7 th-lift-instances-0.1.11
                      th-orphans-0.13.4 th-reify-many-0.1.8 transformers-0.5.2.0
                      vector-0.12.0.1
orphans: singletons-2.3.1:Data.Singletons.TypeLits
         singletons-2.3.1:Data.Singletons.TypeLits.Internal
         singletons-2.3.1:Data.Singletons.Prelude.Instances
         singletons-2.3.1:Data.Singletons.Decide
         th-orphans-0.13.4:Language.Haskell.TH.Instances
         th-lift-instances-0.1.11:Instances.TH.Lift
         th-lift-0.7.7:Language.Haskell.TH.Lift text-1.2.2.2:Data.Text.Lazy
         text-1.2.2.2:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.2.2:Data.Text.Show vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.2.0:Control.Monad.Trans.Error
         syb-0.7:Data.Generics.Instances base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Complex base-4.10.1.0:Data.Either
                         base-4.10.1.0:Data.Functor.Compose base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         ghc-boot-th-8.2.2:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.2.2:GHC.LanguageExtensions.Type
                         inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz:Control.Memory.Region
                         inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz:Foreign.R.Type
                         pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0:Control.Monad.Primitive
                         primitive-0.6.2.0:Data.Primitive.Array
                         singletons-2.3.1:Data.Singletons
                         singletons-2.3.1:Data.Singletons.Prelude.Bool
                         singletons-2.3.1:Data.Singletons.Prelude.Eq
                         singletons-2.3.1:Data.Singletons.Prelude.Instances
                         singletons-2.3.1:Data.Singletons.Prelude.Num
                         singletons-2.3.1:Data.Singletons.Prelude.Ord
                         singletons-2.3.1:Data.Singletons.Syntax
                         singletons-2.3.1:Data.Singletons.TypeLits
                         singletons-2.3.1:Data.Singletons.TypeLits.Internal
                         template-haskell-2.12.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2:Data.Text text-1.2.2.2:Data.Text.Lazy
                         th-desugar-1.7:Language.Haskell.TH.Desugar.Core
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.10.1.0:Control.Applicative 99577a9c463ffe4790a1d37547a345bd
import  -/  base-4.10.1.0:Control.Exception c134ea327d158f2eebf26e12a1d4ad47
import  -/  base-4.10.1.0:Control.Exception.Base a0c09fb1722df56c4c26d548157007ca
import  -/  base-4.10.1.0:Data.Bits e0790a03e1e51e2d053ee3f563937f85
import  -/  base-4.10.1.0:Data.Complex b75c9c36fb3e1275b27f07a23b164de4
import  -/  base-4.10.1.0:Data.Int e234a0a6d2a21ac9385a90eec01cbcae
import  -/  base-4.10.1.0:Foreign 6e1e49cc01b9f846dbcb01cc4a57d323
import  -/  base-4.10.1.0:Foreign.C f34e348e91247a99e0eb5a41b6102351
import  -/  base-4.10.1.0:Foreign.C.String 77a609cc1f3a7c50c3bbf1134c105acc
import  -/  base-4.10.1.0:Foreign.C.Types 936c0db027291520097b61fd8686710a
import  -/  base-4.10.1.0:Foreign.Ptr 2bbd57f0acbb5d9a11c58f4f5d32b343
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.Enum 5a1ba50c23f92f669e01f8955f202337
import  -/  base-4.10.1.0:GHC.Err 514b3a24b22e9d7d731c2d0d02d10842
import  -/  base-4.10.1.0:GHC.Int f3b679d79c8ad65bf2b736aa9628303f
import  -/  base-4.10.1.0:GHC.Ptr f6ff03f1ebd95f085d6be4b1fdb71ff8
import  -/  base-4.10.1.0:GHC.Real 3c62834bc25e762eabc44149c4cc142d
import  -/  base-4.10.1.0:GHC.Show 0a8ce2b5e533d1c2cfb7954e6736be45
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  deepseq-1.4.3.0:Control.DeepSeq 9eeb1cba615a0eb5ceba9a811a507265
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  Control.Memory.Region bd2f465c2e25d1f80c1a2e359d1309ef
  exports: d60c5e1550fee34b0484ba752c6d17b8
  G 3ce3fee8a04a17dabda37b338439be4c
  V 541302cd07c279e1266bc49e9f25f5fc
import  -/  Foreign.R.Internal 0950ef2cc999f128080e9690ff115a12
  exports: ebf5f0f68a41d7c6be7eda742c07c975
  SEXP b92a1b967edd9e3e71e3bf97a52c270d
  SEXP 8e71af79acc64eda5f9cb7291bf461df
  SEXPInfo 79d4de134ebda30e27120db6b2b549e2
  SEXPInfo d987a3d74a29c27a7f56da4895135b7b
  SEXPREC 1b84cbcf09dd7c9dc6af42ec9ebe2b6f
  SomeSEXP d3242a05a97056d0f4278da347cae3e8
  SomeSEXP 870de88561703105d28633d6a8e2294b
  asTypeOf 332ff88f4929c8b325f84341607c07ab
  baseEnv a680e9f5f2917624e572c068d7f0d17d
  cIntFromEnum d8147e56756d79b654a40384fc956e28
  cUIntFromSingEnum f159bf96ed5d64c10b80ea379801e466
  cast b6459dd4ed2a6aeb4d6b884bbf9a0a4b
  emptyEnv 59f0269590597d7aae0adcf5644f7a2e
  getAttribute 0942c3317b59817b1fd3393ca57e999c
  getAttributes 3a756b0150a1a8de093445b277f682b7
  globalEnv 0d7a6614d93859b5512edc6d6bb3a913
  infoDebug d987a3d74a29c27a7f56da4895135b7b
  infoGcCls d987a3d74a29c27a7f56da4895135b7b
  infoGcGen d987a3d74a29c27a7f56da4895135b7b
  infoGp d987a3d74a29c27a7f56da4895135b7b
  infoMark d987a3d74a29c27a7f56da4895135b7b
  infoNamed d987a3d74a29c27a7f56da4895135b7b
  infoObj d987a3d74a29c27a7f56da4895135b7b
  infoSpare d987a3d74a29c27a7f56da4895135b7b
  infoTrace d987a3d74a29c27a7f56da4895135b7b
  infoType d987a3d74a29c27a7f56da4895135b7b
  interruptsPending e8debe744c3b278fca2af69d7511748a
  isRInteractive 6158f6a4992d67bbb74212ee7fd8b3ad
  isS4 37b54554ede8c76aa379dd05db75a6f6
  length d97165116b64357a957efbb7daa72d55
  mark acd8b6ca5a13d11a92c84697d26e8f3e
  missingArg 9effa2dfed55b1f6f364219c9041e206
  named 090520ec256fd1c47c60e5c716507df9
  nilValue dbb0c04998edbde00d03609d085348ba
  peekInfo 9849ef013bc40682e2d0f6aa549090ad
  pokeInfo 65c11239d9bf6daf7f602c2c1ac9eaf8
  release 47626d4fe9a76c8454cdf7c4f29723b0
  setAttributes db94cba949d4ad55aa11f00c69355b5d
  setCar ec152320c68dd49dfd782e62af40d151
  setCdr 8cfa7b7f3723547ac742983db92adf95
  setTag 1f3ca24c135482f75e5a9222699a59b5
  sexp a96c72508b040bb5e852a135425663e6
  signalHandlers 225295c78e820c52044b1187e1bc71fc
  somesexp efba7eee9369e61aec98274362b1f350
  typeOf 7afee6af5a3ea33aea03a8fcb3ded45f
  unSEXP 8e71af79acc64eda5f9cb7291bf461df
  unSomeSEXP 281bb9a3641a0911876f51032cac10a5
  unboundValue 02b9d675538771f828aa41d96e155c9a
  unsafeCoerce fd24c6a04fe85cae12472829ca64771e
  unsafeRelease 947c5de2985d3c51da4d5b3a8811624f
  unsafeSEXPToVectorPtr 793ad2fe9d7f56fdd17d73e58572c323
  unsafeVectorPtrToSEXP a05c046379766cd8787370ef66edd743
  unsexp 456b119a325c68ef328adef52d3b1e7c
import  -/  Foreign.R.Type c66cc062d80b456888eb0e05aa6a4002
  exports: 5754d5cde3f2758aa360e9e8b66ebc71
  Any 589ebb68a061744ef10e332567d19085
  Builtin d18bce5c914c2fdf5839a86e3afb9f7a
  Bytecode ddc02e285aec69b8e38f5cb6db9f74ed
  Char 1eeae3bbb682357f0ba159402f19e108
  Closure 0e61dfaa233694de6f4f2676b4b17cac
  Complex 03b70292738c47ec6de32b86c6c9acd6
  DotDotDot 536dd85e7fdb83eb4b1d98e40f2f2c58
  Env e1a632c9d1d6cbdbf86e3a47e2532589
  Expr 436bad07c9b16edb50cb6c3f0bb45e34
  ExtPtr 09861da2031986d92237c2e2fd47f695
  FALSE 4a4a7e335e35ee9787890221d6198612
  Free 4d5453853ee89e6c686577a1dec9ab10
  Fun fde97565d9de33aaa68d79080398cc88
  Int 846c6444255f487e6112f24053a1fef2
  IsExpression 402475b9f6dc18d1b68b5d637838b242
  IsGenericVector 9b8b4266821ee7521c582a2ca6f62df4
  IsList 79ee776d98b5cb9442857638854ccbe9
  IsPairList 1be6a0cd0b2fbe0b9527b58b8b9eb862
  IsVector dd85b2d9ae3c40d713f260e06d8370c5
  Lang 02f1e57acf95c324993b6cdd035f426d
  List a0780a1f3942a25c40211c99f0d43fbe
  Logical 5beffbd327782875e2209d8de33ff56f
  Logical 1780ac06eb92df8fe8d6ec65362cd7e7
  NA e7a2a50875cbe0bb02ed9da78d6f4e90
  New 93b4f940cb270e54f088debe74b18d39
  Nil 36bcb069ae5a9368ced2bacefcf86560
  PairList 1382565466437cd771e87d89c8655759
  Promise 6a69c028f5d2e2ca411491c33d53c546
  Raw 26e1a1cc553af22e87fb0296aa30967f
  Real c1c8247577c466184e317ce009c96d3a
  S4 a63fd9c03461594588296f40f69465d8
  SAny ce7fd9563ac8b2e449c983ff1c60b565
  SBuiltin 49d2e42027c6ce46b5bc5e64ae310c2b
  SBytecode 882dfdbc3e658f0ec94c4b7e121d46cf
  SChar 072ee9567310d1779c44880d3e6ec5ea
  SClosure e701802e7fc6120d59e6efa0517ccd84
  SComplex efa3c485de5a6d9a16668f4e6eaf3960
  SDotDotDot 5584e68aa011297c7ecfd854a9f7e9f6
  SEXPTYPE 155aac0ce58f46653dea12e588ab4eb0
  SEnv b7882cabffbc9b324897ba071b2e226b
  SExpr bb00775e04f79fbba94af152b3ed166f
  SExtPtr abc053022159409993b9609e9205bc8e
  SFree 796577fa4a0d132cff3cf40c81540b86
  SFun bcf1d081be26f6703f6557c7ca21e94b
  SInt 001399ba1c28fe61edbe1d614287223f
  SLang c34bb2caf96fad5cf98cc797e0e49a04
  SList 6e45be3ff359ca189d9327881ebbd170
  SLogical a9063aac0fa164169f1513c0db1d001d
  SNew 803dc79d3cc8673230dad68cd95a95dc
  SNil 6d08615b3ab8746a590a1cbb0f728031
  SPromise 2938244c5d043689ff58227c5bc912fe
  SRaw 535a520f1d25f82df26cdf82b17e5436
  SReal 28b55e28abd44b2b25f726b68b3c8b88
  SS4 2a40d936047db29366839db0aab92e50
  SSEXPTYPE 01bde09c1432a58c48c6a6c3ae653c47
  SSpecial 3fd1be8f117b2f1293cba847ad512a20
  SString 56984696029fcbe5895cd691b7443206
  SSymbol 02020c4b0a5c84bc4baaa88d3b84886d
  SVector 2f7d34a186d57b0a9cdca22c990831f7
  SWeakRef 8f84dd89b30cfe2138750f4a86cc025c
  Special 8b3d355614cb181a22d8fc1c774281f6
  String e0243b21c36f7ea25c758c04c63f25ed
  Symbol b075a8e4ed98a88def156c76f406cf71
  TRUE 5a2376767b187fcf5f219e6281f58cef
  Vector 4a29567e5052891b025190b67a7acdde
  WeakRef 20ec488b3919b679514940e1b6db9219
import  -/  Language.R.HExp 8da1953fd15113c7b035ce87337813bb
  exports: 51e0a6288db3a7c2e94eec6b3f9a17a5
import  -/  primitive-0.6.2.0:Control.Monad.Primitive 51a1d708ce9627dfc5884be7480b4b76
import  -/  singletons-2.3.1:Data.Singletons 9da68ca382f47f0899b26cbacf532ec5
import  -/  singletons-2.3.1:Data.Singletons.Prelude.Instances c8808cb0cccab92e954c7246b10c3998
addDependentFile "src/Foreign/R.chs"
addDependentFile "/datascience/bin/stack/programs/x86_64-linux/ghc-8.2.2/lib/ghc-8.2.2/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-2.0.1.0/build/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
21f8c62933a5bd7649152481fb6c97a7
  $fEnumCEType :: GHC.Enum.Enum Foreign.R.CEType
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.R.CEType
                  Foreign.R.$fEnumCEType_$csucc
                  Foreign.R.$fEnumCEType_$cpred
                  Foreign.R.$fEnumCEType_$ctoEnum
                  Foreign.R.$fEnumCEType_$cfromEnum
                  Foreign.R.$fEnumCEType_$cenumFrom
                  Foreign.R.$fEnumCEType_$cenumFromThen
                  Foreign.R.$fEnumCEType_$cenumFromTo
                  Foreign.R.$fEnumCEType_$cenumFromThenTo -}
21f8c62933a5bd7649152481fb6c97a7
  $fEnumCEType1 :: Foreign.R.CEType
  {- Strictness: x -}
df38afd0e80d9bc8720b23a1c741c999
  $fEnumCEType2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 99#) -}
ba362d23c61b9a0f3430e7a1341b2846
  $fEnumCEType3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5#) -}
0856f083cc7913dc481c450320eaa90a
  $fEnumCEType4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
5a4383716fcd20de2c36c2cb49d5d02e
  $fEnumCEType5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
cc5a3a8b286301e234a807f4c37d316a
  $fEnumCEType6 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
352941da914ea429c2799d206ed91c00
  $fEnumCEType7 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
21f8c62933a5bd7649152481fb6c97a7
  $fEnumCEType8 :: Foreign.R.CEType
  {- Strictness: x -}
21f8c62933a5bd7649152481fb6c97a7
  $fEnumCEType_$cenumFrom :: Foreign.R.CEType -> [Foreign.R.CEType]
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (from :: Foreign.R.CEType) ->
                 Foreign.R.$fEnumCEType_$cenumFromTo from Foreign.R.CE_ANY) -}
21f8c62933a5bd7649152481fb6c97a7
  $fEnumCEType_$cenumFromThen ::
    Foreign.R.CEType -> Foreign.R.CEType -> [Foreign.R.CEType]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: Foreign.R.CEType) (y :: Foreign.R.CEType) ->
                 let {
                   $j :: GHC.Prim.Int# -> [Foreign.R.CEType]
                     <join 1> {- Arity: 1, Strictness: <S,U> -}
                   = \ (x1 :: GHC.Prim.Int#)[OneShot] ->
                     case y of wild {
                       Foreign.R.CE_NATIVE
                       -> GHC.Base.map
                            @ GHC.Types.Int
                            @ Foreign.R.CEType
                            Foreign.R.$fEnumCEType_$ctoEnum
                            (GHC.Enum.efdInt x1 0#)
                       Foreign.R.CE_UTF8
                       -> GHC.Base.map
                            @ GHC.Types.Int
                            @ Foreign.R.CEType
                            Foreign.R.$fEnumCEType_$ctoEnum
                            (GHC.Enum.efdInt x1 1#)
                       Foreign.R.CE_LATIN1
                       -> GHC.Base.map
                            @ GHC.Types.Int
                            @ Foreign.R.CEType
                            Foreign.R.$fEnumCEType_$ctoEnum
                            (GHC.Enum.efdInt x1 2#)
                       Foreign.R.CE_BYTES
                       -> GHC.Base.map
                            @ GHC.Types.Int
                            @ Foreign.R.CEType
                            Foreign.R.$fEnumCEType_$ctoEnum
                            (GHC.Enum.efdInt x1 3#)
                       Foreign.R.CE_SYMBOL
                       -> GHC.Base.map
                            @ GHC.Types.Int
                            @ Foreign.R.CEType
                            Foreign.R.$fEnumCEType_$ctoEnum
                            (GHC.Enum.efdInt x1 5#)
                       Foreign.R.CE_ANY
                       -> GHC.Base.map
                            @ GHC.Types.Int
                            @ Foreign.R.CEType
                            Foreign.R.$fEnumCEType_$ctoEnum
                            (GHC.Enum.efdInt x1 99#) }
                 } in
                 case x of wild {
                   Foreign.R.CE_NATIVE -> $j 0#
                   Foreign.R.CE_UTF8 -> $j 1#
                   Foreign.R.CE_LATIN1 -> $j 2#
                   Foreign.R.CE_BYTES -> $j 3#
                   Foreign.R.CE_SYMBOL -> $j 5#
                   Foreign.R.CE_ANY -> $j 99# }) -}
21f8c62933a5bd7649152481fb6c97a7
  $fEnumCEType_$cenumFromThenTo ::
    Foreign.R.CEType
    -> Foreign.R.CEType -> Foreign.R.CEType -> [Foreign.R.CEType]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U> -}
21f8c62933a5bd7649152481fb6c97a7
  $fEnumCEType_$cenumFromTo ::
    Foreign.R.CEType -> Foreign.R.CEType -> [Foreign.R.CEType]
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: (\ (from :: Foreign.R.CEType)
                   (to :: Foreign.R.CEType) ->
                 letrec {
                   lvl5 :: [Foreign.R.CEType] = go Foreign.R.CE_ANY
                   lvl6 :: [Foreign.R.CEType] = go Foreign.R.CE_SYMBOL
                   lvl7 :: [Foreign.R.CEType] = go Foreign.R.CE_BYTES
                   lvl8 :: [Foreign.R.CEType] = go Foreign.R.CE_LATIN1
                   lvl9 :: [Foreign.R.CEType] = go Foreign.R.CE_UTF8
                   go :: Foreign.R.CEType -> [Foreign.R.CEType]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (v :: Foreign.R.CEType) ->
                     let {
                       $j :: GHC.Prim.Int# -> [Foreign.R.CEType]
                         <join 1> {- Arity: 1, Strictness: <S,U> -}
                       = \ (x# :: GHC.Prim.Int#)[OneShot] ->
                         let {
                           $j1 :: GHC.Prim.Int# -> [Foreign.R.CEType]
                             <join 1> {- Arity: 1, Strictness: <S,U> -}
                           = \ (y# :: GHC.Prim.Int#)[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.<# x# y#) of wild {
                               GHC.Types.False
                               -> case GHC.Prim.tagToEnum#
                                         @ GHC.Types.Bool
                                         (GHC.Prim.==# x# y#) of wild1 {
                                    GHC.Types.False -> GHC.Types.[] @ Foreign.R.CEType
                                    GHC.Types.True
                                    -> GHC.Types.:
                                         @ Foreign.R.CEType
                                         v
                                         (GHC.Types.[] @ Foreign.R.CEType) }
                               GHC.Types.True
                               -> GHC.Types.:
                                    @ Foreign.R.CEType
                                    v
                                    (case v of wild1 {
                                       Foreign.R.CE_NATIVE -> lvl9
                                       Foreign.R.CE_UTF8 -> lvl8
                                       Foreign.R.CE_LATIN1 -> lvl7
                                       Foreign.R.CE_BYTES -> lvl6
                                       Foreign.R.CE_SYMBOL -> lvl5
                                       Foreign.R.CE_ANY
                                       -> case Foreign.R.$fEnumCEType1
                                          ret_ty [Foreign.R.CEType]
                                          of {} }) }
                         } in
                         case to of wild {
                           Foreign.R.CE_NATIVE -> $j1 0#
                           Foreign.R.CE_UTF8 -> $j1 1#
                           Foreign.R.CE_LATIN1 -> $j1 2#
                           Foreign.R.CE_BYTES -> $j1 3#
                           Foreign.R.CE_SYMBOL -> $j1 5#
                           Foreign.R.CE_ANY -> $j1 99# }
                     } in
                     case v of wild {
                       Foreign.R.CE_NATIVE -> $j 0#
                       Foreign.R.CE_UTF8 -> $j 1#
                       Foreign.R.CE_LATIN1 -> $j 2#
                       Foreign.R.CE_BYTES -> $j 3#
                       Foreign.R.CE_SYMBOL -> $j 5#
                       Foreign.R.CE_ANY -> $j 99# }
                 } in
                 go from) -}
21f8c62933a5bd7649152481fb6c97a7
  $fEnumCEType_$cfromEnum :: Foreign.R.CEType -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foreign.R.CEType) ->
                 case ds of wild {
                   Foreign.R.CE_NATIVE -> Foreign.R.$fEnumCEType7
                   Foreign.R.CE_UTF8 -> Foreign.R.$fEnumCEType6
                   Foreign.R.CE_LATIN1 -> Foreign.R.$fEnumCEType5
                   Foreign.R.CE_BYTES -> Foreign.R.$fEnumCEType4
                   Foreign.R.CE_SYMBOL -> Foreign.R.$fEnumCEType3
                   Foreign.R.CE_ANY -> Foreign.R.$fEnumCEType2 }) -}
21f8c62933a5bd7649152481fb6c97a7
  $fEnumCEType_$cpred :: Foreign.R.CEType -> Foreign.R.CEType
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foreign.R.CEType) ->
                 case ds of wild {
                   Foreign.R.CE_NATIVE -> Foreign.R.$fEnumCEType8
                   Foreign.R.CE_UTF8 -> Foreign.R.CE_NATIVE
                   Foreign.R.CE_LATIN1 -> Foreign.R.CE_UTF8
                   Foreign.R.CE_BYTES -> Foreign.R.CE_LATIN1
                   Foreign.R.CE_SYMBOL -> Foreign.R.CE_BYTES
                   Foreign.R.CE_ANY -> Foreign.R.CE_SYMBOL }) -}
21f8c62933a5bd7649152481fb6c97a7
  $fEnumCEType_$csucc :: Foreign.R.CEType -> Foreign.R.CEType
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foreign.R.CEType) ->
                 case ds of wild {
                   Foreign.R.CE_NATIVE -> Foreign.R.CE_UTF8
                   Foreign.R.CE_UTF8 -> Foreign.R.CE_LATIN1
                   Foreign.R.CE_LATIN1 -> Foreign.R.CE_BYTES
                   Foreign.R.CE_BYTES -> Foreign.R.CE_SYMBOL
                   Foreign.R.CE_SYMBOL -> Foreign.R.CE_ANY
                   Foreign.R.CE_ANY -> Foreign.R.$fEnumCEType1 }) -}
21f8c62933a5bd7649152481fb6c97a7
  $fEnumCEType_$ctoEnum :: GHC.Types.Int -> Foreign.R.CEType
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 -> Foreign.R.$w$ctoEnum ww1 }) -}
21f8c62933a5bd7649152481fb6c97a7
  $fEqCEType :: GHC.Classes.Eq Foreign.R.CEType
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.R.CEType
                  Foreign.R.$fEqCEType_$c==
                  Foreign.R.$fEqCEType_$c/= -}
21f8c62933a5bd7649152481fb6c97a7
  $fEqCEType_$c/= ::
    Foreign.R.CEType -> Foreign.R.CEType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Foreign.R.CEType) (b :: Foreign.R.CEType) ->
                 case a of wild {
                   Foreign.R.CE_NATIVE
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Foreign.R.CE_NATIVE -> GHC.Types.False }
                   Foreign.R.CE_UTF8
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Foreign.R.CE_UTF8 -> GHC.Types.False }
                   Foreign.R.CE_LATIN1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Foreign.R.CE_LATIN1 -> GHC.Types.False }
                   Foreign.R.CE_BYTES
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Foreign.R.CE_BYTES -> GHC.Types.False }
                   Foreign.R.CE_SYMBOL
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Foreign.R.CE_SYMBOL -> GHC.Types.False }
                   Foreign.R.CE_ANY
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Foreign.R.CE_ANY -> GHC.Types.False } }) -}
21f8c62933a5bd7649152481fb6c97a7
  $fEqCEType_$c== ::
    Foreign.R.CEType -> Foreign.R.CEType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Foreign.R.CEType) (ds1 :: Foreign.R.CEType) ->
                 case ds of wild {
                   Foreign.R.CE_NATIVE
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Foreign.R.CE_NATIVE -> GHC.Types.True }
                   Foreign.R.CE_UTF8
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Foreign.R.CE_UTF8 -> GHC.Types.True }
                   Foreign.R.CE_LATIN1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Foreign.R.CE_LATIN1 -> GHC.Types.True }
                   Foreign.R.CE_BYTES
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Foreign.R.CE_BYTES -> GHC.Types.True }
                   Foreign.R.CE_SYMBOL
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Foreign.R.CE_SYMBOL -> GHC.Types.True }
                   Foreign.R.CE_ANY
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Foreign.R.CE_ANY -> GHC.Types.True } }) -}
21f8c62933a5bd7649152481fb6c97a7
  $fShowCEType :: GHC.Show.Show Foreign.R.CEType
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foreign.R.CEType
                  Foreign.R.$fShowCEType_$cshowsPrec
                  Foreign.R.$fShowCEType_$cshow
                  Foreign.R.$fShowCEType_$cshowList -}
67857ab33ac398569109c8ff6d370d07
  $fShowCEType1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foreign.R.$fShowCEType2) -}
3d322af67d7c9243cb4ec107fcac0e5e
  $fShowCEType10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CE_UTF8"#) -}
30127653cbbe69febeec61cbae248edd
  $fShowCEType11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foreign.R.$fShowCEType12) -}
aa1e3822888f3b6dade00d6f56159927
  $fShowCEType12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CE_NATIVE"#) -}
81efd26cf4edb3ec50b5e9749cc4abbf
  $fShowCEType2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CE_ANY"#) -}
7e5f55566b453f6fef0df8e9b1e644dc
  $fShowCEType3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foreign.R.$fShowCEType4) -}
33396cc66e6c4bf0aa5b935cad976080
  $fShowCEType4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CE_SYMBOL"#) -}
ce6244a13ac0dfe3215835c1b24f2e1c
  $fShowCEType5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foreign.R.$fShowCEType6) -}
6c381be8fa9264343434adceaacbd177
  $fShowCEType6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CE_BYTES"#) -}
ad5bb5f58275e01f7daa9e553224939e
  $fShowCEType7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foreign.R.$fShowCEType8) -}
668ec00a078b8417d90356edcbeeb75b
  $fShowCEType8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CE_LATIN1"#) -}
79c01fd340577658fe347ceffbeb041b
  $fShowCEType9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foreign.R.$fShowCEType10) -}
21f8c62933a5bd7649152481fb6c97a7
  $fShowCEType_$cshow :: Foreign.R.CEType -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Foreign.R.CEType) ->
                 case x of wild {
                   Foreign.R.CE_NATIVE -> Foreign.R.$fShowCEType11
                   Foreign.R.CE_UTF8 -> Foreign.R.$fShowCEType9
                   Foreign.R.CE_LATIN1 -> Foreign.R.$fShowCEType7
                   Foreign.R.CE_BYTES -> Foreign.R.$fShowCEType5
                   Foreign.R.CE_SYMBOL -> Foreign.R.$fShowCEType3
                   Foreign.R.CE_ANY -> Foreign.R.$fShowCEType1 }) -}
21f8c62933a5bd7649152481fb6c97a7
  $fShowCEType_$cshowList :: [Foreign.R.CEType] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Foreign.R.CEType
                   Foreign.R.$w$cshowsPrec) -}
21f8c62933a5bd7649152481fb6c97a7
  $fShowCEType_$cshowsPrec ::
    GHC.Types.Int -> Foreign.R.CEType -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: [0],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Foreign.R.CEType)
                   (w2 :: GHC.Base.String) ->
                 Foreign.R.$w$cshowsPrec w1 w2) -}
5a0b0ccf9374b2ca151e8d7af6b7065a
  $tc'CE_ANY :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12846556292919171278##
                   2454549489913076061##
                   Foreign.R.$trModule
                   Foreign.R.$tc'CE_ANY2
                   0#
                   Foreign.R.$tc'CE_ANY1) -}
35ade03b17cf5071435a055dd6a6e843
  $tc'CE_ANY1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
44030f6010684b3f736a4b2ea74fdb84
  $tc'CE_ANY2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foreign.R.$tc'CE_ANY3) -}
571a6391609e2ac7e5281405ee4444b8
  $tc'CE_ANY3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CE_ANY"#) -}
323572feafe46c3fc4bd8cda0724beb8
  $tc'CE_BYTES :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3126589949701933855##
                   11614991300255173686##
                   Foreign.R.$trModule
                   Foreign.R.$tc'CE_BYTES1
                   0#
                   Foreign.R.$tc'CE_ANY1) -}
64f0e5dfc5178fd5bf36db2d6313f24a
  $tc'CE_BYTES1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foreign.R.$tc'CE_BYTES2) -}
8961f5165a689d717110a98cc99354a2
  $tc'CE_BYTES2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CE_BYTES"#) -}
9928394d2b6b58f9f026d07414cc3c07
  $tc'CE_LATIN1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4961286478990596410##
                   12790983162161303994##
                   Foreign.R.$trModule
                   Foreign.R.$tc'CE_LATIN2
                   0#
                   Foreign.R.$tc'CE_ANY1) -}
45fd16ecf4e95643458834b8514c8a0b
  $tc'CE_LATIN2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foreign.R.$tc'CE_LATIN3) -}
8c6e508b299bf75447971c26331b392b
  $tc'CE_LATIN3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CE_LATIN1"#) -}
5f8fd1ccef82ed554b8e3a35a6adf32e
  $tc'CE_NATIVE :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16716399440468253016##
                   15438089932709302119##
                   Foreign.R.$trModule
                   Foreign.R.$tc'CE_NATIVE1
                   0#
                   Foreign.R.$tc'CE_ANY1) -}
dbdfa431fe9ee89a54fde1d02d15289d
  $tc'CE_NATIVE1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foreign.R.$tc'CE_NATIVE2) -}
722d1d91ccec69556d5359c2a966e9ce
  $tc'CE_NATIVE2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CE_NATIVE"#) -}
29711a8f33c008eb1ebe4ee55058cb1d
  $tc'CE_SYMBOL :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2702787813192241867##
                   14886072051432048800##
                   Foreign.R.$trModule
                   Foreign.R.$tc'CE_SYMBOL1
                   0#
                   Foreign.R.$tc'CE_ANY1) -}
e40c83deab100457e6da7459a9406560
  $tc'CE_SYMBOL1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foreign.R.$tc'CE_SYMBOL2) -}
c21cee0e581649d41d5a7ce840d2025f
  $tc'CE_SYMBOL2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CE_SYMBOL"#) -}
2111fc2dc28790cd3c8ddb7853462626
  $tc'CE_UTF1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foreign.R.$tc'CE_UTF2) -}
7c4964a17f3855d5a67067644e2820cd
  $tc'CE_UTF2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CE_UTF8"#) -}
bb3ed7679b225e24dea81a3c7f901dd8
  $tc'CE_UTF8 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11797879174309497835##
                   10067644167199759587##
                   Foreign.R.$trModule
                   Foreign.R.$tc'CE_UTF1
                   0#
                   Foreign.R.$tc'CE_ANY1) -}
c5f22e4f233e571318305021247e32b4
  $tcCEType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5601631886556061324##
                   14004149728147975013##
                   Foreign.R.$trModule
                   Foreign.R.$tcCEType1
                   0#
                   GHC.Types.krep$*) -}
90bd9767500e61d4f43ca07c49acfc72
  $tcCEType1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foreign.R.$tcCEType2) -}
70d920dd7db172efe18e3bf59c158d1c
  $tcCEType2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CEType"#) -}
399dbb3c994707b91272ff37f30e6e8f
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Foreign.R.$trModule3
                   Foreign.R.$trModule1) -}
f19d5f926673e7d229652f50a9e4ac9a
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foreign.R.$trModule2) -}
2b8845d637abe0a3f7740171fbc6cdfb
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Foreign.R"#) -}
058b7e141b877e428cf01faa628ebdfc
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foreign.R.$trModule4) -}
dc1af436a9df4963feb6c9a6fcdf3bf1
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz"#) -}
21f8c62933a5bd7649152481fb6c97a7
  $w$cshowsPrec ::
    Foreign.R.CEType -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: Foreign.R.CEType) (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Foreign.R.CE_NATIVE
                   -> GHC.Base.++ @ GHC.Types.Char Foreign.R.$fShowCEType11 w1
                   Foreign.R.CE_UTF8
                   -> GHC.Base.++ @ GHC.Types.Char Foreign.R.$fShowCEType9 w1
                   Foreign.R.CE_LATIN1
                   -> GHC.Base.++ @ GHC.Types.Char Foreign.R.$fShowCEType7 w1
                   Foreign.R.CE_BYTES
                   -> GHC.Base.++ @ GHC.Types.Char Foreign.R.$fShowCEType5 w1
                   Foreign.R.CE_SYMBOL
                   -> GHC.Base.++ @ GHC.Types.Char Foreign.R.$fShowCEType3 w1
                   Foreign.R.CE_ANY
                   -> GHC.Base.++ @ GHC.Types.Char Foreign.R.$fShowCEType1 w1 }) -}
21f8c62933a5bd7649152481fb6c97a7
  $w$ctoEnum :: GHC.Prim.Int# -> Foreign.R.CEType
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case ww of ds {
                   DEFAULT -> Foreign.R.$wlvl ds
                   0# -> Foreign.R.CE_NATIVE
                   1# -> Foreign.R.CE_UTF8
                   2# -> Foreign.R.CE_LATIN1
                   3# -> Foreign.R.CE_BYTES
                   5# -> Foreign.R.CE_SYMBOL
                   99# -> Foreign.R.CE_ANY }) -}
9e5eecc2e3fe26dc2fc3b7849c2adbcf
  $wallocVector ::
    Foreign.R.Type.SSEXPTYPE a
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP Control.Memory.Region.V a #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ a :: Foreign.R.Type.SEXPTYPE
                   (w :: Foreign.R.Type.SSEXPTYPE a)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Foreign.R.Type.$w$cfromEnum
                        (Foreign.R.Type.$fSingKindSEXPTYPE_$cfromSing @ a w)
                          `cast`
                        (Sub (Foreign.R.Type.D:R:DemoteSEXPTYPE[0])) of ww1 { DEFAULT ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Word#
                                                                              -> GHC.Prim.Int#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# ww1))
                        ww
                        w1 of wild { (#,#) ds ds1 ->
                 (# ds,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds1)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           Control.Memory.Region.V a>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <Control.Memory.Region.V>_P <a>_P))) #) } }) -}
641c34f7c214ef0cc6e9a82fd8af166c
  $wallocVectorProtected ::
    Foreign.R.Type.SSEXPTYPE a
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s a #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ a :: Foreign.R.Type.SEXPTYPE
                   @ s
                   (w :: Foreign.R.Type.SSEXPTYPE a)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Foreign.R.Type.$w$cfromEnum
                        (Foreign.R.Type.$fSingKindSEXPTYPE_$cfromSing @ a w)
                          `cast`
                        (Sub (Foreign.R.Type.D:R:DemoteSEXPTYPE[0])) of ww1 { DEFAULT ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Word#
                                                                              -> GHC.Prim.Int#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# ww1))
                        ww
                        w1 of wild { (#,#) ds ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        ds of wild1 { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp s a>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P))) #) } } }) -}
21f8c62933a5bd7649152481fb6c97a7
  $wlvl :: GHC.Prim.Int# -> Foreign.R.CEType
  {- Arity: 1, Strictness: <B,U>x, Inline: [0] -}
9fafac58fdd9abafcd8881e15c593b36
  $wmkCharCE ::
    Foreign.R.CEType
    -> GHC.Prim.Addr#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Char #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ (w :: Foreign.R.CEType)
                   (ww :: GHC.Prim.Addr#)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of wild {
                   Foreign.R.CE_NATIVE
                   -> case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                                   -> GHC.Prim.Int#
                                                                                   -> GHC.Prim.State#
                                                                                        GHC.Prim.RealWorld
                                                                                   -> (# GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld,
                                                                                         GHC.Prim.Addr# #)}
                             ww
                             0#
                             w1 of wild1 { (#,#) ds ds1 ->
                      (# ds,
                         (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds1)
                           `cast`
                         (Trans
                              (GHC.Ptr.Ptr
                                 <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                Control.Memory.Region.V
                                                                'Foreign.R.Type.Char>)_R
                              (Sym (Foreign.R.Internal.N:SEXP[0]
                                        <Control.Memory.Region.V>_P <'Foreign.R.Type.Char>_P))) #) }
                   Foreign.R.CE_UTF8
                   -> case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                                   -> GHC.Prim.Int#
                                                                                   -> GHC.Prim.State#
                                                                                        GHC.Prim.RealWorld
                                                                                   -> (# GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld,
                                                                                         GHC.Prim.Addr# #)}
                             ww
                             1#
                             w1 of wild1 { (#,#) ds ds1 ->
                      (# ds,
                         (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds1)
                           `cast`
                         (Trans
                              (GHC.Ptr.Ptr
                                 <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                Control.Memory.Region.V
                                                                'Foreign.R.Type.Char>)_R
                              (Sym (Foreign.R.Internal.N:SEXP[0]
                                        <Control.Memory.Region.V>_P <'Foreign.R.Type.Char>_P))) #) }
                   Foreign.R.CE_LATIN1
                   -> case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                                   -> GHC.Prim.Int#
                                                                                   -> GHC.Prim.State#
                                                                                        GHC.Prim.RealWorld
                                                                                   -> (# GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld,
                                                                                         GHC.Prim.Addr# #)}
                             ww
                             2#
                             w1 of wild1 { (#,#) ds ds1 ->
                      (# ds,
                         (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds1)
                           `cast`
                         (Trans
                              (GHC.Ptr.Ptr
                                 <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                Control.Memory.Region.V
                                                                'Foreign.R.Type.Char>)_R
                              (Sym (Foreign.R.Internal.N:SEXP[0]
                                        <Control.Memory.Region.V>_P <'Foreign.R.Type.Char>_P))) #) }
                   Foreign.R.CE_BYTES
                   -> case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                                   -> GHC.Prim.Int#
                                                                                   -> GHC.Prim.State#
                                                                                        GHC.Prim.RealWorld
                                                                                   -> (# GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld,
                                                                                         GHC.Prim.Addr# #)}
                             ww
                             3#
                             w1 of wild1 { (#,#) ds ds1 ->
                      (# ds,
                         (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds1)
                           `cast`
                         (Trans
                              (GHC.Ptr.Ptr
                                 <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                Control.Memory.Region.V
                                                                'Foreign.R.Type.Char>)_R
                              (Sym (Foreign.R.Internal.N:SEXP[0]
                                        <Control.Memory.Region.V>_P <'Foreign.R.Type.Char>_P))) #) }
                   Foreign.R.CE_SYMBOL
                   -> case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                                   -> GHC.Prim.Int#
                                                                                   -> GHC.Prim.State#
                                                                                        GHC.Prim.RealWorld
                                                                                   -> (# GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld,
                                                                                         GHC.Prim.Addr# #)}
                             ww
                             5#
                             w1 of wild1 { (#,#) ds ds1 ->
                      (# ds,
                         (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds1)
                           `cast`
                         (Trans
                              (GHC.Ptr.Ptr
                                 <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                Control.Memory.Region.V
                                                                'Foreign.R.Type.Char>)_R
                              (Sym (Foreign.R.Internal.N:SEXP[0]
                                        <Control.Memory.Region.V>_P <'Foreign.R.Type.Char>_P))) #) }
                   Foreign.R.CE_ANY
                   -> case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                                   -> GHC.Prim.Int#
                                                                                   -> GHC.Prim.State#
                                                                                        GHC.Prim.RealWorld
                                                                                   -> (# GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld,
                                                                                         GHC.Prim.Addr# #)}
                             ww
                             99#
                             w1 of wild1 { (#,#) ds ds1 ->
                      (# ds,
                         (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds1)
                           `cast`
                         (Trans
                              (GHC.Ptr.Ptr
                                 <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                Control.Memory.Region.V
                                                                'Foreign.R.Type.Char>)_R
                              (Sym (Foreign.R.Internal.N:SEXP[0]
                                        <Control.Memory.Region.V>_P
                                        <'Foreign.R.Type.Char>_P))) #) } }) -}
c8687958cfc5205b5bfb10f3ca39ac2e
  $wmkWeakRef ::
    GHC.Prim.Addr#
    -> GHC.Prim.Addr#
    -> GHC.Prim.Addr#
    -> GHC.Types.Bool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.WeakRef #)
  {- Arity: 5, HasNoCafRefs, Strictness: <S,U><S,U><S,U><S,1*U><S,U>,
     Inline: [0],
     Unfolding: (\ @ s
                   @ a :: Foreign.R.Type.SEXPTYPE
                   @ b :: Foreign.R.Type.SEXPTYPE
                   @ c :: Foreign.R.Type.SEXPTYPE
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.Prim.Addr#)
                   (ww2 :: GHC.Prim.Addr#)
                   (w :: GHC.Types.Bool)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of wild {
                   GHC.Types.False
                   -> case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                                   -> GHC.Prim.Addr#
                                                                                   -> GHC.Prim.Addr#
                                                                                   -> GHC.Prim.Int#
                                                                                   -> GHC.Prim.State#
                                                                                        GHC.Prim.RealWorld
                                                                                   -> (# GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld,
                                                                                         GHC.Prim.Addr# #)}
                             ww
                             ww1
                             ww2
                             0#
                             w1 of wild1 { (#,#) ds ds1 ->
                      (# ds,
                         (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds1)
                           `cast`
                         (Trans
                              (GHC.Ptr.Ptr
                                 <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                Control.Memory.Region.V
                                                                'Foreign.R.Type.WeakRef>)_R
                              (Sym (Foreign.R.Internal.N:SEXP[0]
                                        <Control.Memory.Region.V>_P
                                        <'Foreign.R.Type.WeakRef>_P))) #) }
                   GHC.Types.True
                   -> case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                                   -> GHC.Prim.Addr#
                                                                                   -> GHC.Prim.Addr#
                                                                                   -> GHC.Prim.Int#
                                                                                   -> GHC.Prim.State#
                                                                                        GHC.Prim.RealWorld
                                                                                   -> (# GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld,
                                                                                         GHC.Prim.Addr# #)}
                             ww
                             ww1
                             ww2
                             1#
                             w1 of wild1 { (#,#) ds ds1 ->
                      (# ds,
                         (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds1)
                           `cast`
                         (Trans
                              (GHC.Ptr.Ptr
                                 <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                Control.Memory.Region.V
                                                                'Foreign.R.Type.WeakRef>)_R
                              (Sym (Foreign.R.Internal.N:SEXP[0]
                                        <Control.Memory.Region.V>_P
                                        <'Foreign.R.Type.WeakRef>_P))) #) } }) -}
21f8c62933a5bd7649152481fb6c97a7
  data CEType
    = CE_NATIVE | CE_UTF8 | CE_LATIN1 | CE_BYTES | CE_SYMBOL | CE_ANY
fbe24cc079054379817d6c87656a4ffe
  type RLogical = 'Foreign.R.Type.Logical :: Foreign.R.Type.SEXPTYPE
1e7c3803f3abb3c979e17a50378d440a
  type SEXP0 = GHC.Ptr.Ptr Foreign.R.Internal.SEXPREC
0d26e7c3b17c5816ed0b02f555317e7e
  allocList ::
    GHC.Types.Int
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.List)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.allocList1
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.List>_R)) -}
b0b59045bbe0711b30b23116f0372e4d
  allocList1 ::
    GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.List #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a1 :: GHC.Types.Int)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1 of wild { GHC.Types.I# x# ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Int#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        (GHC.Prim.narrow32Int# x#)
                        s of wild1 { (#,#) ds ds1 ->
                 (# ds,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds1)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           Control.Memory.Region.V
                                                           'Foreign.R.Type.List>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <Control.Memory.Region.V>_P
                                   <'Foreign.R.Type.List>_P))) #) } }) -}
ac1dd40f71116a7552db9e47e4fbffed
  allocSEXP ::
    Foreign.R.Type.SSEXPTYPE a
    -> GHC.Types.IO (Foreign.R.Internal.SEXP Control.Memory.Region.V a)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.allocSEXP1
                  `cast`
                (forall (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Type.SSEXPTYPE a>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP Control.Memory.Region.V a>_R)) -}
da6b8a4be3eba9d22d83186324c21ca1
  allocSEXP1 ::
    Foreign.R.Type.SSEXPTYPE a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP Control.Memory.Region.V a #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: (\ @ a :: Foreign.R.Type.SEXPTYPE
                   (a1 :: Foreign.R.Type.SSEXPTYPE a)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Foreign.R.Type.$w$cfromEnum
                        (Foreign.R.Type.$fSingKindSEXPTYPE_$cfromSing @ a a1)
                          `cast`
                        (Sub (Foreign.R.Type.D:R:DemoteSEXPTYPE[0])) of ww { DEFAULT ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Word#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# ww))
                        s of wild { (#,#) ds ds1 ->
                 (# ds,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds1)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           Control.Memory.Region.V a>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <Control.Memory.Region.V>_P <a>_P))) #) } }) -}
20a503e6845850e58f85d6da9508c6db
  allocVector ::
    Foreign.R.Type.IsVector a =>
    Foreign.R.Type.SSEXPTYPE a
    -> GHC.Types.Int
    -> GHC.Types.IO (Foreign.R.Internal.SEXP Control.Memory.Region.V a)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S,1*U><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.allocVector1
                  `cast`
                (forall (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Type.IsVector a>_R
                 ->_R <Foreign.R.Type.SSEXPTYPE a>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP Control.Memory.Region.V a>_R)) -}
94b82ae5db795571686dca33689b6a1d
  allocVector1 ::
    Foreign.R.Type.IsVector a =>
    Foreign.R.Type.SSEXPTYPE a
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP Control.Memory.Region.V a #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S,1*U><S(S),1*U(U)><S,U>, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a :: Foreign.R.Type.SEXPTYPE
                   (w :: Foreign.R.Type.IsVector a)
                   (w1 :: Foreign.R.Type.SSEXPTYPE a)
                   (w2 :: GHC.Types.Int)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w2 of ww { GHC.Types.I# ww1 ->
                 Foreign.R.$wallocVector @ a w1 ww1 w3 }) -}
f0153e8badff8ab9f5d214fb49bbfa1b
  allocVectorProtected ::
    Foreign.R.Type.IsVector a =>
    Foreign.R.Type.SSEXPTYPE a
    -> GHC.Types.Int -> GHC.Types.IO (Foreign.R.Internal.SEXP s a)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S,1*U><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.allocVectorProtected1
                  `cast`
                (forall (a :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Foreign.R.Type.IsVector a>_R
                 ->_R <Foreign.R.Type.SSEXPTYPE a>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SEXP s a>_R)) -}
285b577903af52ee7e0eef026f70e2d3
  allocVectorProtected1 ::
    Foreign.R.Type.IsVector a =>
    Foreign.R.Type.SSEXPTYPE a
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s a #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S,1*U><S(S),1*U(U)><S,U>, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a :: Foreign.R.Type.SEXPTYPE
                   @ s
                   (w :: Foreign.R.Type.IsVector a)
                   (w1 :: Foreign.R.Type.SSEXPTYPE a)
                   (w2 :: GHC.Types.Int)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w2 of ww { GHC.Types.I# ww1 ->
                 Foreign.R.$wallocVectorProtected @ a @ s w1 ww1 w3 }) -}
f778c0798b4cf46a336a2f63d36fdf17
  car ::
    Foreign.R.Internal.SEXP s a
    -> GHC.Types.IO (Foreign.R.Internal.SomeSEXP s)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.car1
                  `cast`
                (forall (s :: <*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP s>_R)) -}
35ea990229b1f985883710bb2366bcab
  car1 ::
    Foreign.R.Internal.SEXP s a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP s #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   @ a :: Foreign.R.Type.SEXPTYPE
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    Foreign.R.Internal.SomeSEXP @ s @ GHC.Types.Any ds3 #) } }) -}
06347569c6020a8b7f09d6092b20f4e2
  cdr ::
    Foreign.R.Internal.SEXP s a
    -> GHC.Types.IO (Foreign.R.Internal.SomeSEXP s)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.cdr1
                  `cast`
                (forall (s :: <*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP s>_R)) -}
ea9455528c4fdc0f811e1129755ee350
  cdr1 ::
    Foreign.R.Internal.SEXP s a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP s #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   @ a :: Foreign.R.Type.SEXPTYPE
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    Foreign.R.Internal.SomeSEXP @ s @ GHC.Types.Any ds3 #) } }) -}
e923bac9d6a1e7e8cf7fe48219fc1862
  char ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Char
    -> GHC.Types.IO Foreign.C.String.CString
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.char1
                  `cast`
                (forall (s :: <*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Char>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <GHC.Ptr.Ptr Foreign.C.Types.CChar>_R)) -}
7d08a522cb7c314e44de90be892839ba
  char1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Char
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Ptr.Ptr Foreign.C.Types.CChar #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Char)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Char>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Char, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2, GHC.Ptr.Ptr @ Foreign.C.Types.CChar ds3 #) } }) -}
1c5852393e06e170fbe18bf7c787f853
  closureBody ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure
    -> GHC.Types.IO (Foreign.R.Internal.SomeSEXP s)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.closureBody1
                  `cast`
                (forall (s :: <*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP s>_R)) -}
bab09726a991bff05a0c0552ba87a09f
  closureBody1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP s #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Closure>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Closure, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    Foreign.R.Internal.SomeSEXP @ s @ GHC.Types.Any ds3 #) } }) -}
0db08545fd8e1914f2b300d1b1ab0980
  closureEnv ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure
    -> GHC.Types.IO (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.closureEnv1
                  `cast`
                (forall (s :: <*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env>_R)) -}
1d86933f890c80b00471a7a7b3c05e4f
  closureEnv1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Closure>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Closure, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           s 'Foreign.R.Type.Env>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <s>_P <'Foreign.R.Type.Env>_P))) #) } }) -}
fe6fb8afd594e0e875d8c01be62eed25
  closureFormals ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure
    -> GHC.Types.IO (Foreign.R.Internal.SEXP s Foreign.R.Type.PairList)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.closureFormals1
                  `cast`
                (forall (s :: <*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP s Foreign.R.Type.PairList>_R)) -}
efe77271306a63aeb4d6a1037fdaf56e
  closureFormals1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s Foreign.R.Type.PairList #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Closure>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Closure, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           s Foreign.R.Type.PairList>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <s>_P <Foreign.R.Type.PairList>_P))) #) } }) -}
a2574ff48aef56583265c81c57d9287f
  complex ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Complex
    -> GHC.Types.IO
         (GHC.Ptr.Ptr (Data.Complex.Complex GHC.Types.Double))
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.complex1
                  `cast`
                (forall (s :: <*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Complex>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <GHC.Ptr.Ptr (Data.Complex.Complex GHC.Types.Double)>_R)) -}
7f2b9d3e7c647365e86d918338b016e6
  complex1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Complex
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Ptr.Ptr (Data.Complex.Complex GHC.Types.Double) #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Complex)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Complex>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Complex, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ () ds3)
                      `cast`
                    (GHC.Ptr.Ptr
                       <(), Data.Complex.Complex GHC.Types.Double>)_R #) } }) -}
fee87b1ee2bdbb223983957d883b92e2
  cons ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s b
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.List)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.cons1
                  `cast`
                (forall (s :: <*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N) (b :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R <Foreign.R.Internal.SEXP s b>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.List>_R)) -}
9153fd0d8257d65d2680980a910ec394
  cons1 ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s b
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.List #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ a :: Foreign.R.Type.SEXPTYPE
                   @ b :: Foreign.R.Type.SEXPTYPE
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (a2 :: Foreign.R.Internal.SEXP s b)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case a2
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <b>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s b, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        ds3
                        s1 of wild { (#,#) ds4 ds5 ->
                 (# ds4,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds5)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           Control.Memory.Region.V
                                                           'Foreign.R.Type.List>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <Control.Memory.Region.V>_P
                                   <'Foreign.R.Type.List>_P))) #) } } }) -}
f3676bf9ea44031f1e521dd5d2e31315
  envEnclosing ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Types.IO (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.envEnclosing1
                  `cast`
                (forall (s :: <*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env>_R)) -}
9bf265a435afb306d4e227dbb690d653
  envEnclosing1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Env>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Env, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           s 'Foreign.R.Type.Env>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <s>_P <'Foreign.R.Type.Env>_P))) #) } }) -}
715491c772a91c7e92d089dedcb9828e
  envFrame ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Types.IO (Foreign.R.Internal.SEXP s Foreign.R.Type.PairList)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.envFrame1
                  `cast`
                (forall (s :: <*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP s Foreign.R.Type.PairList>_R)) -}
09adecfc0979fb269deb62e4ed0f369e
  envFrame1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s Foreign.R.Type.PairList #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Env>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Env, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           s Foreign.R.Type.PairList>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <s>_P <Foreign.R.Type.PairList>_P))) #) } }) -}
fead1abc74564d5ded7f0c4d24ce24cd
  envHashtab ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Types.IO (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Vector)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.envHashtab1
                  `cast`
                (forall (s :: <*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Vector>_R)) -}
8ccbe1de080dce616d35065d8d6e286a
  envHashtab1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s 'Foreign.R.Type.Vector #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Env>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Env, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           s 'Foreign.R.Type.Vector>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <s>_P <'Foreign.R.Type.Vector>_P))) #) } }) -}
aa65e18845a9616858dbd312dc742a10
  eval ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Types.IO
         (Foreign.R.Internal.SomeSEXP Control.Memory.Region.V)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.eval1
                  `cast`
                (forall (s :: <*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SomeSEXP Control.Memory.Region.V>_R)) -}
a39bb5abdf1cbb1176bb034e8ff3374a
  eval1 ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP Control.Memory.Region.V #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ a :: Foreign.R.Type.SEXPTYPE
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (a2 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case a2
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Env>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Env, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        ds3
                        s1 of wild { (#,#) ds4 ds5 ->
                 (# ds4,
                    Foreign.R.Internal.SomeSEXP
                      @ Control.Memory.Region.V
                      @ GHC.Types.Any
                      ds5 #) } } }) -}
523f2ad7bc4124e151c695e751737b0f
  findFun ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Types.IO (Foreign.R.Internal.SomeSEXP s)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.findFun1
                  `cast`
                (forall (s :: <*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP s>_R)) -}
df510578614e406500efad8d9ac9ac31
  findFun1 ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP s #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ a :: Foreign.R.Type.SEXPTYPE
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (a2 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case a2
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Env>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Env, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        ds3
                        s1 of wild { (#,#) ds4 ds5 ->
                 (# ds4,
                    Foreign.R.Internal.SomeSEXP @ s @ GHC.Types.Any ds5 #) } } }) -}
0d95f328d412b20d10297bb7de616f57
  findVar ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Types.IO (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.findVar1
                  `cast`
                (forall (s :: <*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol>_R)) -}
c3abcaff7e548b2cc9f3cd0f261bfe69
  findVar1 ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ a :: Foreign.R.Type.SEXPTYPE
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (a2 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case a2
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Env>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Env, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        ds3
                        s1 of wild { (#,#) ds4 ds5 ->
                 (# ds4,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds5)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           s 'Foreign.R.Type.Symbol>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <s>_P <'Foreign.R.Type.Symbol>_P))) #) } } }) -}
d1ded2942b6e20921cccf231b2f35e90
  gc :: GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.gc1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
027e3015f05b335686d7bae9e6d6f972
  gc1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.State#
                                                                                GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld #)}
                        s of wild { Unit# ds ->
                 (# ds, GHC.Tuple.() #) }) -}
601634e942160b52b49348694d23d807
  indexVector ::
    Foreign.R.Type.IsGenericVector a =>
    Foreign.R.Internal.SEXP s a
    -> GHC.Types.Int -> GHC.Types.IO (Foreign.R.Internal.SomeSEXP s)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.indexVector1
                  `cast`
                (forall (a :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Foreign.R.Type.IsGenericVector a>_R
                 ->_R <Foreign.R.Internal.SEXP s a>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP s>_R)) -}
96abbedb7700ab67d66652223b9389f0
  indexVector1 ::
    Foreign.R.Type.IsGenericVector a =>
    Foreign.R.Internal.SEXP s a
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP s #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ a :: Foreign.R.Type.SEXPTYPE
                   @ s
                   ($d(%,%) :: Foreign.R.Type.IsGenericVector a)
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (a2 :: GHC.Types.Int)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case a2 of wild { GHC.Types.I# x# ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.Int#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        x#
                        s1 of wild1 { (#,#) ds2 ds3 ->
                 (# ds2,
                    Foreign.R.Internal.SomeSEXP @ s @ GHC.Types.Any ds3 #) } } }) -}
e4e5ace4396c039f161b20e02876c4be
  install ::
    Foreign.C.String.CString
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Symbol)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.install1
                  `cast`
                (<Foreign.C.String.CString>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.Symbol>_R)) -}
1343187bab5d7cb6bb140cfdfda2ba43
  install1 ::
    Foreign.C.String.CString
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Symbol #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a1 :: Foreign.C.String.CString)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1 of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        s of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           Control.Memory.Region.V
                                                           'Foreign.R.Type.Symbol>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <Control.Memory.Region.V>_P
                                   <'Foreign.R.Type.Symbol>_P))) #) } }) -}
4d6028c075c12405f297621b78437a6f
  integer ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Int
    -> GHC.Types.IO (GHC.Ptr.Ptr GHC.Int.Int32)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.integer1
                  `cast`
                (forall (s :: <*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Ptr.Ptr GHC.Int.Int32>_R)) -}
5eeb8a92455b886daa640a9883afd7fc
  integer1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Ptr.Ptr GHC.Int.Int32 #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Int)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Int>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Int, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                           -> GHC.Prim.State#
                                                                                GHC.Prim.RealWorld
                                                                           -> (# GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld,
                                                                                 GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.C.Types.CInt ds3)
                      `cast`
                    (GHC.Ptr.Ptr <Foreign.C.Types.CInt, GHC.Int.Int32>)_R #) } }) -}
df0c2eccea68a23d74d3de603566382f
  lang1 ::
    Foreign.R.Internal.SEXP s a
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Lang)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.lang4
                  `cast`
                (forall (s :: <*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.Lang>_R)) -}
3bb8d606da7f15ebc17eaa7feff287f7
  lang2 ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s b
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Lang)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.lang5
                  `cast`
                (forall (s :: <*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N) (b :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R <Foreign.R.Internal.SEXP s b>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.Lang>_R)) -}
b26bb418938d95471446d401fedabc42
  lang3 ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s b
    -> Foreign.R.Internal.SEXP s c
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Lang)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.lang6
                  `cast`
                (forall (s :: <*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N) (b :: <Foreign.R.Type.SEXPTYPE>_N) (c :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R <Foreign.R.Internal.SEXP s b>_R
                 ->_R <Foreign.R.Internal.SEXP s c>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.Lang>_R)) -}
55ce58cfff8d0fd0fa8ce1853f73a8e1
  lang4 ::
    Foreign.R.Internal.SEXP s a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Lang #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   @ a :: Foreign.R.Type.SEXPTYPE
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           Control.Memory.Region.V
                                                           'Foreign.R.Type.Lang>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <Control.Memory.Region.V>_P
                                   <'Foreign.R.Type.Lang>_P))) #) } }) -}
7f20e039eb6d97340725c559cdba03cb
  lang5 ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s b
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Lang #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ a :: Foreign.R.Type.SEXPTYPE
                   @ b :: Foreign.R.Type.SEXPTYPE
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (a2 :: Foreign.R.Internal.SEXP s b)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case a2
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <b>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s b, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        ds3
                        s1 of wild { (#,#) ds4 ds5 ->
                 (# ds4,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds5)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           Control.Memory.Region.V
                                                           'Foreign.R.Type.Lang>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <Control.Memory.Region.V>_P
                                   <'Foreign.R.Type.Lang>_P))) #) } } }) -}
0dc04e499a10d69b385960439d591349
  lang6 ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s b
    -> Foreign.R.Internal.SEXP s c
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Lang #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ s
                   @ a :: Foreign.R.Type.SEXPTYPE
                   @ b :: Foreign.R.Type.SEXPTYPE
                   @ c :: Foreign.R.Type.SEXPTYPE
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (a2 :: Foreign.R.Internal.SEXP s b)
                   (a3 :: Foreign.R.Internal.SEXP s c)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case a2
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <b>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s b, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case a3
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <c>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s c, Foreign.R.Internal.SEXPREC>)_R) of ds4 { GHC.Ptr.Ptr ds5 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.Addr#
                                                                              -> GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        ds3
                        ds5
                        s1 of wild { (#,#) ds6 ds7 ->
                 (# ds6,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds7)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           Control.Memory.Region.V
                                                           'Foreign.R.Type.Lang>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <Control.Memory.Region.V>_P
                                   <'Foreign.R.Type.Lang>_P))) #) } } } }) -}
2b3e525aa34f16f22748012bcd15823c
  lcons ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s b
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Lang)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.lcons1
                  `cast`
                (forall (s :: <*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N) (b :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R <Foreign.R.Internal.SEXP s b>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.Lang>_R)) -}
d6648d614d8f23b29447208ee6e6b31d
  lcons1 ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s b
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Lang #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   @ a :: Foreign.R.Type.SEXPTYPE
                   @ b :: Foreign.R.Type.SEXPTYPE
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (a2 :: Foreign.R.Internal.SEXP s b)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case a2
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <b>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s b, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        ds3
                        s1 of wild { (#,#) ds4 ds5 ->
                 (# ds4,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds5)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           Control.Memory.Region.V
                                                           'Foreign.R.Type.Lang>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <Control.Memory.Region.V>_P
                                   <'Foreign.R.Type.Lang>_P))) #) } } }) -}
dd65dde532df2c460ae439938cbb173e
  logical ::
    Foreign.R.Internal.SEXP s Foreign.R.RLogical
    -> GHC.Types.IO (GHC.Ptr.Ptr Foreign.R.Type.Logical)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.logical1
                  `cast`
                (forall (s :: <*>_N).
                 <Foreign.R.Internal.SEXP s Foreign.R.RLogical>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <GHC.Ptr.Ptr Foreign.R.Type.Logical>_R)) -}
63bf0681f4d56b58718acaf8d94105cb
  logical1 ::
    Foreign.R.Internal.SEXP s Foreign.R.RLogical
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Ptr.Ptr Foreign.R.Type.Logical #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s Foreign.R.RLogical)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <Foreign.R.RLogical>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 Foreign.R.RLogical, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.C.Types.CInt ds3)
                      `cast`
                    (GHC.Ptr.Ptr
                       <Foreign.C.Types.CInt, Foreign.R.Type.Logical>)_R #) } }) -}
a3a8a232b4f097f53ae92c0f755ffd7f
  mkChar ::
    Foreign.C.String.CString
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Char)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.mkChar1
                  `cast`
                (<Foreign.C.String.CString>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.Char>_R)) -}
657aff34b763009637e01634c292c056
  mkChar1 ::
    Foreign.C.String.CString
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Char #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a1 :: Foreign.C.String.CString)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1 of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        s of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           Control.Memory.Region.V
                                                           'Foreign.R.Type.Char>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <Control.Memory.Region.V>_P
                                   <'Foreign.R.Type.Char>_P))) #) } }) -}
9bcccf07c44deaf2d3effad57feff8b9
  mkCharCE ::
    Foreign.R.CEType
    -> Foreign.C.String.CString
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Char)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.mkCharCE1
                  `cast`
                (<Foreign.R.CEType>_R
                 ->_R <Foreign.C.String.CString>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.Char>_R)) -}
283afe92f8e96309b9ca87f22f4f003a
  mkCharCE1 ::
    Foreign.R.CEType
    -> Foreign.C.String.CString
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.Char #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><S(S),1*U(U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Foreign.R.CEType)
                   (w1 :: Foreign.C.String.CString)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w1 of ww { GHC.Ptr.Ptr ww1 ->
                 Foreign.R.$wmkCharCE w ww1 w2 }) -}
d21655fa28f708034cde49119514c7f5
  mkString ::
    Foreign.C.String.CString
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.String)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.mkString1
                  `cast`
                (<Foreign.C.String.CString>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.String>_R)) -}
27c341437ccef1192ef72b1a74e75d15
  mkString1 ::
    Foreign.C.String.CString
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.String #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a1 :: Foreign.C.String.CString)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1 of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        s of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           Control.Memory.Region.V
                                                           'Foreign.R.Type.String>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <Control.Memory.Region.V>_P
                                   <'Foreign.R.Type.String>_P))) #) } }) -}
53948b60d92f37912f43b82db2935286
  mkWeakRef ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s b
    -> Foreign.R.Internal.SEXP s c
    -> GHC.Types.Bool
    -> GHC.Types.IO
         (Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.WeakRef)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.mkWeakRef1
                  `cast`
                (forall (s :: <*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N) (b :: <Foreign.R.Type.SEXPTYPE>_N) (c :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R <Foreign.R.Internal.SEXP s b>_R
                 ->_R <Foreign.R.Internal.SEXP s c>_R
                 ->_R <GHC.Types.Bool>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP
                                  Control.Memory.Region.V 'Foreign.R.Type.WeakRef>_R)) -}
340dbae3be1815c06a474aec79067eec
  mkWeakRef1 ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s b
    -> Foreign.R.Internal.SEXP s c
    -> GHC.Types.Bool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP
            Control.Memory.Region.V 'Foreign.R.Type.WeakRef #)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,1*U><S,U>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ s
                   @ a :: Foreign.R.Type.SEXPTYPE
                   @ b :: Foreign.R.Type.SEXPTYPE
                   @ c :: Foreign.R.Type.SEXPTYPE
                   (w :: Foreign.R.Internal.SEXP s a)
                   (w1 :: Foreign.R.Internal.SEXP s b)
                   (w2 :: Foreign.R.Internal.SEXP s c)
                   (w3 :: GHC.Types.Bool)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w `cast`
                      (Foreign.R.Internal.N:SEXP[0]
                           <s>_P <a>_P) of ww { GHC.Ptr.Ptr ww1 ->
                 case w1
                        `cast`
                      (Foreign.R.Internal.N:SEXP[0]
                           <s>_P <b>_P) of ww2 { GHC.Ptr.Ptr ww3 ->
                 case w2
                        `cast`
                      (Foreign.R.Internal.N:SEXP[0]
                           <s>_P <c>_P) of ww4 { GHC.Ptr.Ptr ww5 ->
                 Foreign.R.$wmkWeakRef @ s @ a @ b @ c ww1 ww3 ww5 w3 w4 } } }) -}
34e41626d593a0da0620f1015c4639f6
  preserveObject :: Foreign.R.Internal.SEXP s a -> GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.preserveObject1
                  `cast`
                (forall (s :: <*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
2c68c6495c729044ee06ae792dcc87cf
  preserveObject1 ::
    Foreign.R.Internal.SEXP s a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   @ a :: Foreign.R.Type.SEXPTYPE
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld #)}
                        ds1
                        s1 of wild { Unit# ds2 ->
                 (# ds2, GHC.Tuple.() #) } }) -}
e530ddc53bcc85ab7513521b91753453
  printValue :: Foreign.R.Internal.SEXP s a -> GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.printValue1
                  `cast`
                (forall (s :: <*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
1f43ac8677ad63c79cd40fc31e0a3233
  printValue1 ::
    Foreign.R.Internal.SEXP s a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   @ a :: Foreign.R.Type.SEXPTYPE
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld #)}
                        ds1
                        s1 of wild { Unit# ds2 ->
                 (# ds2, GHC.Tuple.() #) } }) -}
57d2ef6774bd2167ab3997806817c23c
  promiseCode ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Promise
    -> GHC.Types.IO (Foreign.R.Internal.SomeSEXP s)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.promiseCode1
                  `cast`
                (forall (s :: <*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Promise>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP s>_R)) -}
d2c88b853d71403c0cfe158678639cc9
  promiseCode1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Promise
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP s #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Promise)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Promise>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Promise, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    Foreign.R.Internal.SomeSEXP @ s @ GHC.Types.Any ds3 #) } }) -}
b651a4213fc6ea3b83fee38de4ea8e6a
  promiseEnv ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Promise
    -> GHC.Types.IO (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.promiseEnv1
                  `cast`
                (forall (s :: <*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Promise>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env>_R)) -}
d60a3d67a6001146f327cbed8422b08e
  promiseEnv1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Promise
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Promise)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Promise>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Promise, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           s 'Foreign.R.Type.Env>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <s>_P <'Foreign.R.Type.Env>_P))) #) } }) -}
2fa8b03b50ce59e0d95fdec23e224776
  promiseValue ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Promise
    -> GHC.Types.IO (Foreign.R.Internal.SomeSEXP s)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.promiseValue1
                  `cast`
                (forall (s :: <*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Promise>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP s>_R)) -}
bfe900e4d45eb5dcbba358a84d22717e
  promiseValue1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Promise
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP s #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Promise)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Promise>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Promise, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    Foreign.R.Internal.SomeSEXP @ s @ GHC.Types.Any ds3 #) } }) -}
9d62708a46a0cadab0ad0a511a77c60d
  protect ::
    Foreign.R.Internal.SEXP s a
    -> GHC.Types.IO (Foreign.R.Internal.SEXP Control.Memory.Region.G a)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.protect1
                  `cast`
                (forall (s :: <*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP Control.Memory.Region.G a>_R)) -}
055a6cf6b9075ef5318812e336d013d9
  protect1 ::
    Foreign.R.Internal.SEXP s a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP Control.Memory.Region.G a #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   @ a :: Foreign.R.Type.SEXPTYPE
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           Control.Memory.Region.G a>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <Control.Memory.Region.G>_P <a>_P))) #) } }) -}
e19b2b318fed77ec50d36dc858fc0323
  raw ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Raw
    -> GHC.Types.IO (GHC.Ptr.Ptr Foreign.C.Types.CChar)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.raw1
                  `cast`
                (forall (s :: <*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Raw>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <GHC.Ptr.Ptr Foreign.C.Types.CChar>_R)) -}
014d6b7b71818b233907dadece464603
  raw1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Raw
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Ptr.Ptr Foreign.C.Types.CChar #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Raw)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Raw>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Raw, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.C.Types.CUChar ds3)
                      `cast`
                    (GHC.Ptr.Ptr
                       <Foreign.C.Types.CUChar, Foreign.C.Types.CChar>)_R #) } }) -}
9c77d4bd312ac1a92f5cfc88da2bc630
  readVector ::
    Foreign.R.Type.IsGenericVector a =>
    Foreign.R.Internal.SEXP s a
    -> GHC.Types.Int -> GHC.Types.IO (Foreign.R.Internal.SomeSEXP s)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.indexVector1
                  `cast`
                (forall (a :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Foreign.R.Type.IsGenericVector a>_R
                 ->_R <Foreign.R.Internal.SEXP s a>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP s>_R)) -}
5fbff38a4ff864c462a95f4405c046d9
  real ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Real
    -> GHC.Types.IO (GHC.Ptr.Ptr GHC.Types.Double)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.real1
                  `cast`
                (forall (s :: <*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Real>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Ptr.Ptr GHC.Types.Double>_R)) -}
67308230d1eec68da0729bf3fc2ab2fb
  real1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Real
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Ptr.Ptr GHC.Types.Double #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Real)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Real>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Real, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.C.Types.CDouble ds3)
                      `cast`
                    (GHC.Ptr.Ptr
                       <Foreign.C.Types.CDouble, GHC.Types.Double>)_R #) } }) -}
52382e257f200bc9836022da38a6820d
  releaseObject :: Foreign.R.Internal.SEXP s a -> GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.releaseObject1
                  `cast`
                (forall (s :: <*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
a1b2032e3565557227ee749f7e52cff2
  releaseObject1 ::
    Foreign.R.Internal.SEXP s a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   @ a :: Foreign.R.Type.SEXPTYPE
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld #)}
                        ds1
                        s1 of wild { Unit# ds2 ->
                 (# ds2, GHC.Tuple.() #) } }) -}
43bf5d4cd65a0cf6aa2c5032a16c1773
  string ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.String
    -> GHC.Types.IO
         (GHC.Ptr.Ptr (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Char))
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.string1
                  `cast`
                (forall (s :: <*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.String>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <GHC.Ptr.Ptr
                                  (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Char)>_R)) -}
7e168501f57e41d1c0d9e54773159ee5
  string1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Ptr.Ptr (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Char) #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.String)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.String>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.String, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.SEXP0 ds3)
                      `cast`
                    (GHC.Ptr.Ptr
                       <Foreign.R.SEXP0, Foreign.R.Internal.SEXP
                                           s 'Foreign.R.Type.Char>)_R #) } }) -}
1950efd751ff3d9b8c8fd30d9f47a352
  symbolInternal ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol
    -> GHC.Types.IO (Foreign.R.Internal.SEXP s a)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.symbolInternal1
                  `cast`
                (forall (s :: <*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SEXP s a>_R)) -}
a75730b5f7792a44f0e88b9627eaa8e2
  symbolInternal1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s a #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   @ a :: Foreign.R.Type.SEXPTYPE
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Symbol>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Symbol, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp s a>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P))) #) } }) -}
287507064a077edae91283c66d32788e
  symbolPrintName ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol
    -> GHC.Types.IO (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Char)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.symbolPrintName1
                  `cast`
                (forall (s :: <*>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Char>_R)) -}
989d75ef3344f2399132c0551b7b9ecc
  symbolPrintName1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s 'Foreign.R.Type.Char #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Symbol>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Symbol, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                           s 'Foreign.R.Type.Char>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0]
                                   <s>_P <'Foreign.R.Type.Char>_P))) #) } }) -}
15c855b97c5096bddad32178c814e153
  symbolValue ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol
    -> GHC.Types.IO (Foreign.R.Internal.SEXP s a)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.symbolValue1
                  `cast`
                (forall (s :: <*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SEXP s a>_R)) -}
7831aef79f9eaa985c531482541b0de4
  symbolValue1 ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s a #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   @ a :: Foreign.R.Type.SEXPTYPE
                   (a1 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Symbol)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Symbol>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Symbol, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds3)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp s a>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P))) #) } }) -}
b173389f83d057b6c6cbd667b0b839ac
  tag ::
    Foreign.R.Internal.SEXP s a
    -> GHC.Types.IO (Foreign.R.Internal.SomeSEXP s)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.tag1
                  `cast`
                (forall (s :: <*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP s>_R)) -}
2ea2e6301d07433bec171c3175b2a3f5
  tag1 ::
    Foreign.R.Internal.SEXP s a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP s #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ s
                   @ a :: Foreign.R.Type.SEXPTYPE
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2,
                    Foreign.R.Internal.SomeSEXP @ s @ GHC.Types.Any ds3 #) } }) -}
17c3d46d1ee567454e92f13e8df1c19c
  trueLength ::
    Foreign.R.Type.IsVector a =>
    Foreign.R.Internal.SEXP s a -> GHC.Types.IO Foreign.C.Types.CInt
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.trueLength1
                  `cast`
                (forall (a :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 <Foreign.R.Type.IsVector a>_R
                 ->_R <Foreign.R.Internal.SEXP s a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R)) -}
ab09ce84885f50213f6dff20ff6f4622
  trueLength1 ::
    Foreign.R.Type.IsVector a =>
    Foreign.R.Internal.SEXP s a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a :: Foreign.R.Type.SEXPTYPE
                   @ s
                   ($d(%,%) :: Foreign.R.Type.IsVector a)
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Int# #)}
                        ds1
                        s1 of wild { (#,#) ds2 ds3 ->
                 (# ds2, GHC.Int.I32# (GHC.Prim.narrow32Int# ds3) #)
                   `cast`
                 ((#,#)
                    <'GHC.Types.TupleRep '[]>_R
                    <'GHC.Types.LiftedRep>_R
                    <GHC.Prim.State# GHC.Prim.RealWorld>_R
                    (Sym (Foreign.C.Types.N:CInt[0])))_R } }) -}
53b09d39f47f2dc2e4a50ee10d003c1d
  tryEval ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Ptr.Ptr Foreign.C.Types.CInt
    -> GHC.Types.IO
         (Foreign.R.Internal.SomeSEXP Control.Memory.Region.V)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.tryEval1
                  `cast`
                (forall (s :: <*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env>_R
                 ->_R <GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SomeSEXP Control.Memory.Region.V>_R)) -}
7c2afbf62d1dc199faba56f704907a4a
  tryEval1 ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Ptr.Ptr Foreign.C.Types.CInt
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP Control.Memory.Region.V #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ s
                   @ a :: Foreign.R.Type.SEXPTYPE
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (a2 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env)
                   (a3 :: GHC.Ptr.Ptr Foreign.C.Types.CInt)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case a2
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Env>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Env, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case a3 of ds4 { GHC.Ptr.Ptr ds5 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.Addr#
                                                                              -> GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        ds3
                        ds5
                        s1 of wild { (#,#) ds6 ds7 ->
                 (# ds6,
                    Foreign.R.Internal.SomeSEXP
                      @ Control.Memory.Region.V
                      @ GHC.Types.Any
                      ds7 #) } } } }) -}
66fb20c579733d2c438af646489f494e
  tryEvalSilent ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Ptr.Ptr Foreign.C.Types.CInt
    -> GHC.Types.IO
         (Foreign.R.Internal.SomeSEXP Control.Memory.Region.V)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.tryEvalSilent1
                  `cast`
                (forall (s :: <*>_N) (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP s a>_R
                 ->_R <Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env>_R
                 ->_R <GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Foreign.R.Internal.SomeSEXP Control.Memory.Region.V>_R)) -}
0b3e2c33883dff180384f7a69406c725
  tryEvalSilent1 ::
    Foreign.R.Internal.SEXP s a
    -> Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env
    -> GHC.Ptr.Ptr Foreign.C.Types.CInt
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP Control.Memory.Region.V #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ s
                   @ a :: Foreign.R.Type.SEXPTYPE
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (a2 :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Env)
                   (a3 :: GHC.Ptr.Ptr Foreign.C.Types.CInt)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case a2
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Env>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s
                                 'Foreign.R.Type.Env, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case a3 of ds4 { GHC.Ptr.Ptr ds5 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.Addr#
                                                                              -> GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        ds3
                        ds5
                        s1 of wild { (#,#) ds6 ds7 ->
                 (# ds6,
                    Foreign.R.Internal.SomeSEXP
                      @ Control.Memory.Region.V
                      @ GHC.Types.Any
                      ds7 #) } } } }) -}
815b337c705ba5d9ef7902b5da589473
  unprotect :: GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.unprotect1
                  `cast`
                (<GHC.Types.Int>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
c3cca1cc64d87a2827feb929585fd7fc
  unprotect1 ::
    GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a1 :: GHC.Types.Int)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1 of wild { GHC.Types.I# x# ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Int#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld #)}
                        (GHC.Prim.narrow32Int# x#)
                        s of wild1 { Unit# ds ->
                 (# ds, GHC.Tuple.() #) } }) -}
c945ccbe83a78a9ea8aadc1074e1106a
  unprotectPtr ::
    Foreign.R.Internal.SEXP Control.Memory.Region.G a
    -> GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.unprotectPtr1
                  `cast`
                (forall (a :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Internal.SEXP Control.Memory.Region.G a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
16793f948dd2b644780d9ac76174c42d
  unprotectPtr1 ::
    Foreign.R.Internal.SEXP Control.Memory.Region.G a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a :: Foreign.R.Type.SEXPTYPE
                   (a1 :: Foreign.R.Internal.SEXP Control.Memory.Region.G a)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <Control.Memory.Region.G>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.G
                                 a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld #)}
                        ds1
                        s of wild { Unit# ds2 ->
                 (# ds2, GHC.Tuple.() #) } }) -}
ee6067e4d5f6ac7496f0966c08f7bc06
  withProtected ::
    GHC.Types.IO (Foreign.R.Internal.SEXP Control.Memory.Region.V a)
    -> (Foreign.R.Internal.SEXP s a -> GHC.Types.IO b)
    -> GHC.Types.IO b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(S(SS(S))),1*C1(U(U,1*U(U)))><L,1*C1(C1(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.withProtected1
                  `cast`
                (forall (a :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N) (b :: <*>_N).
                 <GHC.Types.IO
                    (Foreign.R.Internal.SEXP Control.Memory.Region.V a)>_R
                 ->_R <Foreign.R.Internal.SEXP s a -> GHC.Types.IO b>_R
                 ->_R Sym (GHC.Types.N:IO[0] <b>_R)) -}
fbc69e5fb1d5dba62834e770f9d745c3
  withProtected1 ::
    GHC.Types.IO (Foreign.R.Internal.SEXP Control.Memory.Region.V a)
    -> (Foreign.R.Internal.SEXP s a -> GHC.Types.IO b)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(S(SS(S))),1*C1(U(U,1*U(U)))><L,1*C1(C1(U))><S,U>,
     Unfolding: (\ @ a :: Foreign.R.Type.SEXPTYPE
                   @ s
                   @ b
                   (create :: GHC.Types.IO
                                (Foreign.R.Internal.SEXP Control.Memory.Region.V a))
                   (f :: Foreign.R.Internal.SEXP s a -> GHC.Types.IO b)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.getMaskingState# eta of ds { (#,#) ipv ipv1 ->
                 case ipv1 of ds1 {
                   DEFAULT
                   -> case create
                             `cast`
                           (GHC.Types.N:IO[0]
                                <Foreign.R.Internal.SEXP Control.Memory.Region.V a>_R)
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ipv3
                             `cast`
                           (Trans
                                (Foreign.R.Internal.N:SEXP[0] <Control.Memory.Region.V>_P <a>_P)
                                (GHC.Ptr.Ptr
                                   <Language.R.HExp.HExp
                                      Control.Memory.Region.V
                                      a, Foreign.R.Internal.SEXPREC>)_R) of ds3 { GHC.Ptr.Ptr ds4 ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                                   -> GHC.Prim.State#
                                                                                        GHC.Prim.RealWorld
                                                                                   -> (# GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld,
                                                                                         GHC.Prim.Addr# #)}
                             ds4
                             ipv2 of wild { (#,#) ds5 ds6 ->
                      case GHC.Prim.catch#
                             @ b
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskAsyncExceptions#
                                @ b
                                (f ds3
                                     `cast`
                                   (Trans
                                        (GHC.Ptr.Ptr
                                           <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp s a>)_R
                                        (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P))))
                                  `cast`
                                (Nth:2
                                     (Trans
                                          (<GHC.Types.IO b>_R ->_R GHC.Types.N:IO[0] <b>_R)
                                          (GHC.Types.N:IO[0] <b>_R
                                           ->_R <GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       b #)>_R))))
                             (Foreign.R.withProtected2 @ b)
                             ds5 of ds7 { (#,#) ipv4 ipv5 ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Int#
                                                                                   -> GHC.Prim.State#
                                                                                        GHC.Prim.RealWorld
                                                                                   -> (# GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld #)}
                             1#
                             ipv4 of wild1 { Unit# ds8 ->
                      (# ds8, ipv5 #) } } } } }
                   0#
                   -> GHC.Prim.maskAsyncExceptions#
                        @ b
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case create
                                `cast`
                              (GHC.Types.N:IO[0]
                                   <Foreign.R.Internal.SEXP Control.Memory.Region.V a>_R)
                                s1 of ds2 { (#,#) ipv2 ipv3 ->
                         case ipv3
                                `cast`
                              (Trans
                                   (Foreign.R.Internal.N:SEXP[0] <Control.Memory.Region.V>_P <a>_P)
                                   (GHC.Ptr.Ptr
                                      <Language.R.HExp.HExp
                                         Control.Memory.Region.V
                                         a, Foreign.R.Internal.SEXPREC>)_R) of ds3 { GHC.Ptr.Ptr ds4 ->
                         case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                                      -> GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld
                                                                                      -> (# GHC.Prim.State#
                                                                                              GHC.Prim.RealWorld,
                                                                                            GHC.Prim.Addr# #)}
                                ds4
                                ipv2 of wild { (#,#) ds5 ds6 ->
                         case GHC.Prim.catch#
                                @ b
                                @ GHC.Exception.SomeException
                                (GHC.Prim.unmaskAsyncExceptions#
                                   @ b
                                   (f ds3
                                        `cast`
                                      (Trans
                                           (GHC.Ptr.Ptr
                                              <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp
                                                                             s a>)_R
                                           (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P))))
                                     `cast`
                                   (Nth:2
                                        (Trans
                                             (<GHC.Types.IO b>_R ->_R GHC.Types.N:IO[0] <b>_R)
                                             (GHC.Types.N:IO[0] <b>_R
                                              ->_R <GHC.Prim.State# GHC.Prim.RealWorld
                                                    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                          b #)>_R))))
                                (Foreign.R.withProtected2 @ b)
                                ds5 of ds7 { (#,#) ipv4 ipv5 ->
                         case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Int#
                                                                                      -> GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld
                                                                                      -> (# GHC.Prim.State#
                                                                                              GHC.Prim.RealWorld #)}
                                1#
                                ipv4 of wild1 { Unit# ds8 ->
                         (# ds8, ipv5 #) } } } } })
                        ipv
                   1#
                   -> case create
                             `cast`
                           (GHC.Types.N:IO[0]
                                <Foreign.R.Internal.SEXP Control.Memory.Region.V a>_R)
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ipv3
                             `cast`
                           (Trans
                                (Foreign.R.Internal.N:SEXP[0] <Control.Memory.Region.V>_P <a>_P)
                                (GHC.Ptr.Ptr
                                   <Language.R.HExp.HExp
                                      Control.Memory.Region.V
                                      a, Foreign.R.Internal.SEXPREC>)_R) of ds3 { GHC.Ptr.Ptr ds4 ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                                   -> GHC.Prim.State#
                                                                                        GHC.Prim.RealWorld
                                                                                   -> (# GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld,
                                                                                         GHC.Prim.Addr# #)}
                             ds4
                             ipv2 of wild { (#,#) ds5 ds6 ->
                      case GHC.Prim.catch#
                             @ b
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskUninterruptible#
                                @ b
                                (f ds3
                                     `cast`
                                   (Trans
                                        (GHC.Ptr.Ptr
                                           <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp s a>)_R
                                        (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P))))
                                  `cast`
                                (Nth:2
                                     (Trans
                                          (<GHC.Types.IO b>_R ->_R GHC.Types.N:IO[0] <b>_R)
                                          (GHC.Types.N:IO[0] <b>_R
                                           ->_R <GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       b #)>_R))))
                             (Foreign.R.withProtected2 @ b)
                             ds5 of ds7 { (#,#) ipv4 ipv5 ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Int#
                                                                                   -> GHC.Prim.State#
                                                                                        GHC.Prim.RealWorld
                                                                                   -> (# GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld #)}
                             1#
                             ipv4 of wild1 { Unit# ds8 ->
                      (# ds8, ipv5 #) } } } } } } }) -}
67dfcd6300027cbf3ba85f2e6b779568
  withProtected2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
  {- Arity: 2, HasNoCafRefs, Strictness: <B,U><B,U>x -}
6191fd03966dc26f2a70cf0e6cee15a4
  writeVector ::
    Foreign.R.Type.IsGenericVector a =>
    Foreign.R.Internal.SEXP s a
    -> GHC.Types.Int
    -> Foreign.R.Internal.SEXP s b
    -> GHC.Types.IO (Foreign.R.Internal.SEXP s a)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foreign.R.writeVector1
                  `cast`
                (forall (a :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N) (b :: <Foreign.R.Type.SEXPTYPE>_N).
                 <Foreign.R.Type.IsGenericVector a>_R
                 ->_R <Foreign.R.Internal.SEXP s a>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <Foreign.R.Internal.SEXP s b>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.R.Internal.SEXP s a>_R)) -}
b00291778376ad89137737b750e352b0
  writeVector1 ::
    Foreign.R.Type.IsGenericVector a =>
    Foreign.R.Internal.SEXP s a
    -> GHC.Types.Int
    -> Foreign.R.Internal.SEXP s b
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SEXP s a #)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ a :: Foreign.R.Type.SEXPTYPE
                   @ s
                   @ b :: Foreign.R.Type.SEXPTYPE
                   ($d(%,%) :: Foreign.R.Type.IsGenericVector a)
                   (a1 :: Foreign.R.Internal.SEXP s a)
                   (a2 :: GHC.Types.Int)
                   (a3 :: Foreign.R.Internal.SEXP s b)
                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case a1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s a, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds1 ->
                 case a2 of wild { GHC.Types.I# x# ->
                 case a3
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <b>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 s b, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz GHC.Prim.Addr#
                                                                              -> GHC.Prim.Int#
                                                                              -> GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld,
                                                                                    GHC.Prim.Addr# #)}
                        ds1
                        x#
                        ds3
                        s1 of wild1 { (#,#) ds4 ds5 ->
                 (# ds4,
                    (GHC.Ptr.Ptr @ Foreign.R.Internal.SEXPREC ds5)
                      `cast`
                    (Trans
                         (GHC.Ptr.Ptr
                            <Foreign.R.Internal.SEXPREC, Language.R.HExp.HExp s a>)_R
                         (Sym (Foreign.R.Internal.N:SEXP[0] <s>_P <a>_P))) #) } } } }) -}
instance GHC.Enum.Enum [Foreign.R.CEType] = Foreign.R.$fEnumCEType
instance GHC.Classes.Eq [Foreign.R.CEType] = Foreign.R.$fEqCEType
instance GHC.Show.Show [Foreign.R.CEType] = Foreign.R.$fShowCEType
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
Warnings indexVector "Use readVector instead."
trusted: none
require own pkg trusted: False

