
==================== FINAL INTERFACE ====================
2017-12-28 08:49:08.455134 UTC

interface inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz:Control.Monad.R.Class 8022
  interface hash: e4b331301591a81882396af9887592ef
  ABI hash: e5a0c4056d91754aa90b5adf4bc59248
  export-list hash: ebb323240982ac39e80db1d6fb39a690
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 71fc3076912733dbea2de881cd67f337
  sig of: Nothing
  used TH splices: False
  where
exports:
  Control.Monad.R.Class.acquireSome
  Control.Monad.R.Class.MonadR{Control.Monad.R.Class.ExecContext Control.Monad.R.Class.acquire Control.Monad.R.Class.getExecContext Control.Monad.R.Class.io Control.Monad.R.Class.unsafeRunWithExecContext}
  Control.Monad.R.Class.Region
module dependencies: Control.Memory.Region Foreign.R
                     Foreign.R.Constraints Foreign.R.Internal Foreign.R.Type
                     Internal.Error Language.R.HExp [boot]
package dependencies: array-0.5.2.0 base-4.10.1.0 binary-0.8.5.1
                      bytestring-0.10.8.2 containers-0.5.10.2 deepseq-1.4.3.0
                      exceptions-0.8.3 ghc-boot-th-8.2.2 ghc-prim-0.5.1.1
                      integer-gmp-1.0.1.0 mtl-2.2.1 pretty-1.1.3.3 primitive-0.6.2.0
                      safe-0.3.15 singletons-2.3.1 stm-2.4.4.1 syb-0.7
                      template-haskell-2.12.0.0 text-1.2.2.2 th-desugar-1.7
                      th-expand-syns-0.4.3.0 th-lift-0.7.7 th-lift-instances-0.1.11
                      th-orphans-0.13.4 th-reify-many-0.1.8 transformers-0.5.2.0
                      vector-0.12.0.1
orphans: singletons-2.3.1:Data.Singletons.TypeLits
         singletons-2.3.1:Data.Singletons.TypeLits.Internal
         singletons-2.3.1:Data.Singletons.Prelude.Instances
         singletons-2.3.1:Data.Singletons.Decide
         th-orphans-0.13.4:Language.Haskell.TH.Instances
         th-lift-instances-0.1.11:Instances.TH.Lift
         th-lift-0.7.7:Language.Haskell.TH.Lift text-1.2.2.2:Data.Text.Lazy
         text-1.2.2.2:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.2.2:Data.Text.Show vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         syb-0.7:Data.Generics.Instances stm-2.4.4.1:Control.Monad.STM
         transformers-0.5.2.0:Control.Monad.Trans.Error
         base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Complex base-4.10.1.0:Data.Either
                         base-4.10.1.0:Data.Functor.Compose base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         ghc-boot-th-8.2.2:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.2.2:GHC.LanguageExtensions.Type
                         inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz:Control.Memory.Region
                         inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz:Foreign.R.Type
                         pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0:Control.Monad.Primitive
                         primitive-0.6.2.0:Data.Primitive.Array
                         singletons-2.3.1:Data.Singletons
                         singletons-2.3.1:Data.Singletons.Prelude.Bool
                         singletons-2.3.1:Data.Singletons.Prelude.Eq
                         singletons-2.3.1:Data.Singletons.Prelude.Instances
                         singletons-2.3.1:Data.Singletons.Prelude.Num
                         singletons-2.3.1:Data.Singletons.Prelude.Ord
                         singletons-2.3.1:Data.Singletons.Syntax
                         singletons-2.3.1:Data.Singletons.TypeLits
                         singletons-2.3.1:Data.Singletons.TypeLits.Internal
                         template-haskell-2.12.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2:Data.Text text-1.2.2.2:Data.Text.Lazy
                         th-desugar-1.7:Language.Haskell.TH.Desugar.Core
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.10.1.0:Control.Applicative 99577a9c463ffe4790a1d37547a345bd
import  -/  base-4.10.1.0:Control.Monad.IO.Class 9d78cd0f73a837f3c00753bd212b9f2c
import  -/  base-4.10.1.0:Data.Functor 2ffda4f936b8f474394d93205750aff3
import  -/  base-4.10.1.0:Data.Type.Equality ca4e91e1727dfab58cd5d13c463acc81
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  exceptions-0.8.3:Control.Monad.Catch 0961838cb22f4dca352265cf54d5b70d
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  Control.Memory.Region bd2f465c2e25d1f80c1a2e359d1309ef
  exports: d60c5e1550fee34b0484ba752c6d17b8
  G 3ce3fee8a04a17dabda37b338439be4c
  V 541302cd07c279e1266bc49e9f25f5fc
import  -/  Foreign.R 51460710da704a1aff942901939ab83a
  exports: 66604cef250b707139e6d39041287043
  protect 9d62708a46a0cadab0ad0a511a77c60d
import  -/  Foreign.R.Internal 0950ef2cc999f128080e9690ff115a12
  SEXP 8e71af79acc64eda5f9cb7291bf461df
  SomeSEXP d3242a05a97056d0f4278da347cae3e8
  SomeSEXP 870de88561703105d28633d6a8e2294b
import  -/  mtl-2.2.1:Control.Monad.Trans 10395338f5946386bd349b5bb00c06e7
import  -/  primitive-0.6.2.0:Control.Monad.Primitive 51a1d708ce9627dfc5884be7480b4b76
1606b6bf4b43b7f4e3282cedecc87e81
  $dmacquire ::
    Control.Monad.R.Class.MonadR m =>
    forall s (a :: Foreign.R.Type.SEXPTYPE).
    (Control.Monad.IO.Class.MonadIO m,
     (Control.Monad.R.Class.Region m :: *)
     Data.Type.Equality.~
     (Control.Memory.Region.G :: *)) =>
    Foreign.R.Internal.SEXP s a
    -> m (Foreign.R.Internal.SEXP (Control.Monad.R.Class.Region m) a)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(LS(LC(S))LLLLLLL),1*U(A,1*U(A,1*C1(U)),A,A,A,A,A,A,A)><L,A><S(S),1*U(1*U)><L,U(U)>,
     Unfolding: InlineRule (0, True, False)
                (\ @ m :: * -> * ($dMonadR :: Control.Monad.R.Class.MonadR m) ->
                 let {
                   $dMonadIO :: Control.Monad.IO.Class.MonadIO m
                   = Control.Monad.R.Class.$p2MonadR @ m $dMonadR
                 } in
                 \ @ s
                   @ a :: Foreign.R.Type.SEXPTYPE
                   ($dMonadIO1 :: Control.Monad.IO.Class.MonadIO m)
                   ($d~ :: (Control.Monad.R.Class.Region m :: *)
                           Data.Type.Equality.~
                           (Control.Memory.Region.G :: *)) ->
                 case GHC.Types.HEq_sc
                        @ *
                        @ *
                        @ (Control.Monad.R.Class.Region m)
                        @ Control.Memory.Region.G
                        $d~
                          `cast`
                        (Data.Type.Equality.N:~[0] <*>_N <Control.Monad.R.Class.Region
                                                            m>_N <Control.Memory.Region.G>_N) of cobox { DEFAULT ->
                 let {
                   f :: GHC.Types.IO
                          (Foreign.R.Internal.SEXP Control.Memory.Region.G a)
                        -> m (Foreign.R.Internal.SEXP Control.Memory.Region.G a)
                   = Control.Monad.IO.Class.liftIO
                       @ m
                       $dMonadIO
                       @ (Foreign.R.Internal.SEXP Control.Memory.Region.G a)
                 } in
                 (\ (x :: Foreign.R.Internal.SEXP s a) ->
                  f (Foreign.R.protect1 @ s @ a x)
                      `cast`
                    (Sym (GHC.Types.N:IO[0]
                              <Foreign.R.Internal.SEXP Control.Memory.Region.G a>_R)))
                   `cast`
                 (<Foreign.R.Internal.SEXP s a>_R
                  ->_R <m>_R (Foreign.R.Internal.SEXP (Sym cobox) <a>_N)_N) }) -}
ca84c070a728956a3789bc49c051ed23
  $dmio ::
    Control.Monad.R.Class.MonadR m => forall a. GHC.Types.IO a -> m a
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LS(LS)LLLLLLL),1*U(A,1*U(A,1*U),A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (0, True, False)
                (\ @ m :: * -> *
                   ($dMonadR :: Control.Monad.R.Class.MonadR m)
                   @ a ->
                 Control.Monad.IO.Class.liftIO
                   @ m
                   (Control.Monad.R.Class.$p2MonadR @ m $dMonadR)
                   @ a) -}
637585de5db539526827782ba67a3b7e
  $tcExecContext :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7098962858004665687##
                   9845431973212342774##
                   Control.Monad.R.Class.$trModule
                   Control.Monad.R.Class.$tcExecContext2
                   0#
                   Control.Monad.R.Class.$tcExecContext1) -}
88f19340c35f5091bc508a9dc426c655
  $tcExecContext1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
a0920353cba17792bd6a7310efe38e21
  $tcExecContext2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Control.Monad.R.Class.$tcExecContext3) -}
db91b8894994e5ad903a946e7f7570dd
  $tcExecContext3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ExecContext"#) -}
a5bb7114e5d631a991c10865873003ff
  $tcMonadR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6847232638554120440##
                   12216467178422928133##
                   Control.Monad.R.Class.$trModule
                   Control.Monad.R.Class.$tcMonadR2
                   0#
                   Control.Monad.R.Class.$tcMonadR1) -}
d2dbc71dafbf786ab67d228c60fe2bd8
  $tcMonadR1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
cf36333b277ea4b76f45cb321d958ea1
  $tcMonadR2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Control.Monad.R.Class.$tcMonadR3) -}
8e0280596ffe3e7f0588da013070a717
  $tcMonadR3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MonadR"#) -}
5fc67268b397272c7eb82c89ac11aa51
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Control.Monad.R.Class.$trModule3
                   Control.Monad.R.Class.$trModule1) -}
011bd4baf1f7228f529f26701365ec1e
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Control.Monad.R.Class.$trModule2) -}
5d51ed4553f0e59f2bcab3b2a646b0a1
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Control.Monad.R.Class"#) -}
5afbf2a58b66094e616be78cdbddc0fc
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Control.Monad.R.Class.$trModule4) -}
cad9611c1e10b15b75b2d060a031923e
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("inline-r-0.9.0.2-CmRL2Hikuao7dNZScoizZz"#) -}
3b2bb150f2b80e2d32d08e5e9fb3cdc6
  class (GHC.Base.Applicative m, Control.Monad.IO.Class.MonadIO m,
         Control.Monad.Catch.MonadCatch m, Control.Monad.Catch.MonadMask m,
         Control.Monad.Primitive.PrimMonad m) =>
        MonadR (m :: * -> *) where
    data family ExecContext (m :: * -> *)
    io :: GHC.Types.IO a -> m a
    acquire :: (s :: *)
               Data.Type.Equality.~
               (Control.Memory.Region.V :: *) =>
               Foreign.R.Internal.SEXP s a
               -> m (Foreign.R.Internal.SEXP (Control.Monad.R.Class.Region m) a)
    default acquire :: (Control.Monad.IO.Class.MonadIO m,
                        (Control.Monad.R.Class.Region m :: *)
                        Data.Type.Equality.~
                        (Control.Memory.Region.G :: *)) =>
                       Foreign.R.Internal.SEXP s a
                       -> m (Foreign.R.Internal.SEXP (Control.Monad.R.Class.Region m) a)
    getExecContext :: m (Control.Monad.R.Class.ExecContext m)
    unsafeRunWithExecContext :: m a
                                -> Control.Monad.R.Class.ExecContext m -> GHC.Types.IO a
    {-# MINIMAL getExecContext, unsafeRunWithExecContext #-}
49abf5cb38f3f6f39f201ac2b8615c87
  type Region (m :: * -> *) = Control.Monad.Primitive.PrimState m
0b48bc5deadf009b15a68a2b2219c286
  acquireSome ::
    Control.Monad.R.Class.MonadR m =>
    Foreign.R.Internal.SomeSEXP Control.Memory.Region.V
    -> m (Foreign.R.Internal.SomeSEXP (Control.Monad.R.Class.Region m))
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(C(C(S))L)LLLLL)LLLLLLLL),U(1*U(1*U(1*C1(C1(U)),A),A,A,A,A,A),A,A,A,A,A,1*C1(C1(U)),A,A)><S,1*U>,
     Unfolding: (\ @ m :: * -> *
                   ($dMonadR :: Control.Monad.R.Class.MonadR m)
                   (eta :: Foreign.R.Internal.SomeSEXP Control.Memory.Region.V) ->
                 case eta of wild { Foreign.R.Internal.SomeSEXP a dt ->
                 GHC.Base.fmap
                   @ m
                   (GHC.Base.$p1Applicative
                      @ m
                      (Control.Monad.R.Class.$p1MonadR @ m $dMonadR))
                   @ (Foreign.R.Internal.SEXP (Control.Monad.Primitive.PrimState m) a)
                   @ (Foreign.R.Internal.SomeSEXP
                        (Control.Monad.Primitive.PrimState m))
                   (Foreign.R.Internal.$WSomeSEXP
                      @ (Control.Monad.Primitive.PrimState m)
                      @ a)
                   (Control.Monad.R.Class.acquire
                      @ m
                      $dMonadR
                      @ Control.Memory.Region.V
                      @ a
                      (GHC.Types.Eq#
                         @ *
                         @ *
                         @ Control.Memory.Region.Void
                         @ Control.Memory.Region.Void
                         @~ <Control.Memory.Region.Void>_N)
                        `cast`
                      (Sym (Data.Type.Equality.N:~[0]
                                <*>_N) <Control.Memory.Region.Void>_N <Control.Memory.Region.Void>_N)
                      (GHC.Ptr.Ptr @ (Language.R.HExp.HExp Control.Memory.Region.V a) dt)
                        `cast`
                      (Sym (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.V>_P <a>_P))) }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

