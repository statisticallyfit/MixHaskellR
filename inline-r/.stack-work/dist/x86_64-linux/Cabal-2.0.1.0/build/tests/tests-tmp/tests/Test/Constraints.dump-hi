
==================== FINAL INTERFACE ====================
2017-12-28 08:50:03.299242 UTC

interface main:Test.Constraints 8022
  interface hash: a6efcba8467b64e4091ee5bf152f93c6
  ABI hash: cb4e9933bbc27722cc247d0a12174d73
  export-list hash: 6b759e48d9e2fd20094b00b6dc35efd7
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 51261959cd907197df91e7e347ee8ebb
  sig of: Nothing
  used TH splices: False
  where
exports:
  Test.Constraints.tests
module dependencies:
package dependencies: ansi-terminal-0.7.1.1 ansi-wl-pprint-0.6.8.1
                      array-0.5.2.0 async-2.1.1.1 base-4.10.1.0 binary-0.8.5.1
                      bytestring-0.10.8.2 clock-0.7.2 colour-2.3.4 containers-0.5.10.2
                      deepseq-1.4.3.0 ghc-boot-th-8.2.2 ghc-prim-0.5.1.1 inline-r-0.9.0.2
                      integer-gmp-1.0.1.0 mtl-2.2.1 optparse-applicative-0.14.0.0
                      parsec-3.1.11 pretty-1.1.3.3 primitive-0.6.2.0 process-1.6.1.0
                      regex-base-0.93.2 regex-tdfa-1.2.2 safe-0.3.15 singletons-2.3.1
                      stm-2.4.4.1 syb-0.7 tagged-0.8.5 tasty-0.11.3 tasty-hunit-0.9.2
                      template-haskell-2.12.0.0 text-1.2.2.2 th-desugar-1.7
                      th-expand-syns-0.4.3.0 th-lift-0.7.7 th-lift-instances-0.1.11
                      th-orphans-0.13.4 th-reify-many-0.1.8 transformers-0.5.2.0
                      unbounded-delays-0.1.1.0 unix-2.7.2.2 vector-0.12.0.1
orphans: singletons-2.3.1:Data.Singletons.TypeLits
         singletons-2.3.1:Data.Singletons.TypeLits.Internal
         singletons-2.3.1:Data.Singletons.Prelude.Instances
         singletons-2.3.1:Data.Singletons.Decide
         th-orphans-0.13.4:Language.Haskell.TH.Instances
         th-lift-instances-0.1.11:Instances.TH.Lift
         th-lift-0.7.7:Language.Haskell.TH.Lift
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         syb-0.7:Data.Generics.Instances stm-2.4.4.1:Control.Monad.STM
         regex-tdfa-1.2.2:Text.Regex.TDFA.ByteString
         regex-tdfa-1.2.2:Text.Regex.TDFA.ByteString.Lazy
         regex-tdfa-1.2.2:Text.Regex.TDFA.Sequence
         regex-tdfa-1.2.2:Text.Regex.TDFA.String text-1.2.2.2:Data.Text.Lazy
         text-1.2.2.2:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.2.2:Data.Text.Show
         transformers-0.5.2.0:Control.Monad.Trans.Error
         regex-base-0.93.2:Text.Regex.Base.Context colour-2.3.4:Data.Colour
         base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Complex base-4.10.1.0:Data.Either
                         base-4.10.1.0:Data.Functor.Compose base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats clock-0.7.2:System.Clock
                         containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         ghc-boot-th-8.2.2:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.2.2:GHC.LanguageExtensions.Type
                         inline-r-0.9.0.2:Foreign.R.Type
                         pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0:Control.Monad.Primitive
                         primitive-0.6.2.0:Data.Primitive.Array
                         singletons-2.3.1:Data.Singletons
                         singletons-2.3.1:Data.Singletons.Prelude.Bool
                         singletons-2.3.1:Data.Singletons.Prelude.Eq
                         singletons-2.3.1:Data.Singletons.Prelude.Instances
                         singletons-2.3.1:Data.Singletons.Prelude.Num
                         singletons-2.3.1:Data.Singletons.Prelude.Ord
                         singletons-2.3.1:Data.Singletons.Syntax
                         singletons-2.3.1:Data.Singletons.TypeLits
                         singletons-2.3.1:Data.Singletons.TypeLits.Internal
                         tagged-0.8.5:Data.Tagged tasty-0.11.3:Test.Tasty.Core
                         template-haskell-2.12.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2:Data.Text text-1.2.2.2:Data.Text.Lazy
                         th-desugar-1.7:Language.Haskell.TH.Desugar.Core
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.10.1.0:Control.Monad ebed2e8e7444944e0c1d827c6faf40a4
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  inline-r-0.9.0.2:Foreign.R.Constraints 5e190340d29314eb38fd1cdb5ab46fca
import  -/  inline-r-0.9.0.2:Foreign.R.Type c66cc062d80b456888eb0e05aa6a4002
import  -/  tasty-0.11.3:Test.Tasty fd7a7d678fb037373a84e0d2c94ba977
import  -/  tasty-0.11.3:Test.Tasty.Core ad38a7bfdd07cb983b46499179f5feea
import  -/  tasty-hunit-0.9.2:Test.Tasty.HUnit e2c91e2e2a1aa9764fce15de0bdca332
d42c14c55226b302f6a165f4c17e5208
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Test.Constraints.$trModule3
                   Test.Constraints.$trModule1) -}
993176139c1779fd00f7f54d07638d83
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Test.Constraints.$trModule2) -}
bf443249af9403d9939a61c5100a55ed
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Test.Constraints"#) -}
453c9c38bb841d023bb9b7777698ee06
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Test.Constraints.$trModule4) -}
ff8e8284943059f036fd7dd837b1a649
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
461717b4be37cc5282cca820e344b90c
  tests :: Test.Tasty.Core.TestTree
  {- Strictness: m2,
     Unfolding: (Test.Tasty.Core.TestGroup
                   Test.Constraints.tests22
                   Test.Constraints.tests1) -}
16f442475a62356633afb6b56aeba556
  tests1 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Test.Constraints.tests19
                   Test.Constraints.tests2) -}
4fb52f3f0192541eb37dd066a0005079
  tests10 :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Test.Constraints.tests11
                   Test.Constraints.tests7
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
e7e62ea8d0a1336f5e4538931798fd95
  tests11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Test.Constraints.tests12) -}
9a3252ba1f9fd50fd610534deaa67f91
  tests12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("right associativity"#) -}
dcf46573077efd7b9fc7f0a367574510
  tests13 :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Test.Constraints.tests14
                   Test.Constraints.tests7
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
5672dcf2e915a80838c85372ad1b37d0
  tests14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Test.Constraints.tests15) -}
e69ebbf77f0f6f668aeaa0755ec76c92
  tests15 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("left extension"#) -}
95b4b96381415797e757c5250dbd4f6e
  tests16 :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Test.Constraints.tests17
                   Test.Constraints.tests7
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
db22557ba31588b2cf18f158a7e639ed
  tests17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Test.Constraints.tests18) -}
d3b90048661084000a63a0c966530d51
  tests18 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("right extension"#) -}
a80943fc24dfa34ba7c68d0fceb75c2f
  tests19 :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Test.Constraints.tests20
                   Test.Constraints.tests7
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
134bdea7ab8d52eeb620d18f46b168d5
  tests2 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Test.Constraints.tests16
                   Test.Constraints.tests3) -}
41228c5fc6a4c2e60ee576cfbe44851f
  tests20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Test.Constraints.tests21) -}
d37bbca8cee825bc1a08b306ca0ce124
  tests21 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("reflexivity"#) -}
08d942754e4ba34340e1179f78c983e1
  tests22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Test.Constraints.tests23) -}
5502881a72546094e4c87fbfbe603454
  tests23 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Constraints"#) -}
6438142df12d4e312d29c5bd25ee10e9
  tests3 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Test.Constraints.tests13
                   Test.Constraints.tests4) -}
a75e1efe8632265287bceae4becf4a90
  tests4 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Test.Constraints.tests10
                   Test.Constraints.tests5) -}
4e663a1dcd5082cacf492f554315785d
  tests5 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Test.Constraints.tests6
                   (GHC.Types.[] @ Test.Tasty.Core.TestTree)) -}
9c63aa94ec45cf3094dc230772636ae3
  tests6 :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Test.Constraints.tests8
                   Test.Constraints.tests7
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
259db8d6b171912520542a524b53c907
  tests7 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# s, GHC.Types.[] @ GHC.Types.Char #)) -}
55b0c06c3fb02267f2dd1e262bbfdd02
  tests8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Test.Constraints.tests9) -}
ac04b10477531c51c306e7de2051f29f
  tests9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("reverse"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

