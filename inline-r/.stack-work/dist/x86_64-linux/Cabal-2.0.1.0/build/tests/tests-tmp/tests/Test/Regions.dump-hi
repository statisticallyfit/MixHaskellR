
==================== FINAL INTERFACE ====================
2017-12-28 08:50:03.446971 UTC

interface main:Test.Regions 8022
  interface hash: b8d8b0c1abf94bf35d945226e57600f1
  ABI hash: a25f05e54f5dc80c43aa5f99298889ed
  export-list hash: d5378e99b75d87cfd15e3fa028dd3b60
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 400aae8099bddca942f914b05ff9ea03
  sig of: Nothing
  used TH splices: True
  where
exports:
  Test.Regions.tests
module dependencies:
package dependencies: ansi-terminal-0.7.1.1 ansi-wl-pprint-0.6.8.1
                      array-0.5.2.0 async-2.1.1.1 base-4.10.1.0 binary-0.8.5.1
                      bytestring-0.10.8.2 clock-0.7.2 colour-2.3.4 containers-0.5.10.2
                      data-default-class-0.1.2.0 deepseq-1.4.3.0 exceptions-0.8.3
                      ghc-boot-th-8.2.2 ghc-prim-0.5.1.1 inline-r-0.9.0.2
                      integer-gmp-1.0.1.0 mtl-2.2.1 optparse-applicative-0.14.0.0
                      parsec-3.1.11 pretty-1.1.3.3 primitive-0.6.2.0 process-1.6.1.0
                      reflection-2.1.2 regex-base-0.93.2 regex-tdfa-1.2.2 safe-0.3.15
                      setenv-0.1.1.3 singletons-2.3.1 stm-2.4.4.1 syb-0.7 tagged-0.8.5
                      tasty-0.11.3 tasty-hunit-0.9.2 template-haskell-2.12.0.0
                      text-1.2.2.2 th-desugar-1.7 th-expand-syns-0.4.3.0 th-lift-0.7.7
                      th-lift-instances-0.1.11 th-orphans-0.13.4 th-reify-many-0.1.8
                      transformers-0.5.2.0 unbounded-delays-0.1.1.0 unix-2.7.2.2
                      vector-0.12.0.1
orphans: reflection-2.1.2:Data.Reflection
         singletons-2.3.1:Data.Singletons.TypeLits
         singletons-2.3.1:Data.Singletons.TypeLits.Internal
         singletons-2.3.1:Data.Singletons.Prelude.Instances
         singletons-2.3.1:Data.Singletons.Decide
         th-orphans-0.13.4:Language.Haskell.TH.Instances
         th-lift-instances-0.1.11:Instances.TH.Lift
         th-lift-0.7.7:Language.Haskell.TH.Lift
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         syb-0.7:Data.Generics.Instances stm-2.4.4.1:Control.Monad.STM
         regex-tdfa-1.2.2:Text.Regex.TDFA.ByteString
         regex-tdfa-1.2.2:Text.Regex.TDFA.ByteString.Lazy
         regex-tdfa-1.2.2:Text.Regex.TDFA.Sequence
         regex-tdfa-1.2.2:Text.Regex.TDFA.String text-1.2.2.2:Data.Text.Lazy
         text-1.2.2.2:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.2.2:Data.Text.Show
         transformers-0.5.2.0:Control.Monad.Trans.Error
         regex-base-0.93.2:Text.Regex.Base.Context colour-2.3.4:Data.Colour
         base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Complex base-4.10.1.0:Data.Either
                         base-4.10.1.0:Data.Functor.Compose base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats clock-0.7.2:System.Clock
                         containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         ghc-boot-th-8.2.2:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.2.2:GHC.LanguageExtensions.Type
                         inline-r-0.9.0.2:Control.Memory.Region
                         inline-r-0.9.0.2:Data.Vector.SEXP inline-r-0.9.0.2:Foreign.R.Type
                         inline-r-0.9.0.2:Language.R.Instance
                         pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0:Control.Monad.Primitive
                         primitive-0.6.2.0:Data.Primitive.Array
                         singletons-2.3.1:Data.Singletons
                         singletons-2.3.1:Data.Singletons.Prelude.Bool
                         singletons-2.3.1:Data.Singletons.Prelude.Eq
                         singletons-2.3.1:Data.Singletons.Prelude.Instances
                         singletons-2.3.1:Data.Singletons.Prelude.Num
                         singletons-2.3.1:Data.Singletons.Prelude.Ord
                         singletons-2.3.1:Data.Singletons.Syntax
                         singletons-2.3.1:Data.Singletons.TypeLits
                         singletons-2.3.1:Data.Singletons.TypeLits.Internal
                         tagged-0.8.5:Data.Tagged tasty-0.11.3:Test.Tasty.Core
                         template-haskell-2.12.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2:Data.Text text-1.2.2.2:Data.Text.Lazy
                         th-desugar-1.7:Language.Haskell.TH.Desugar.Core
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.10.1.0:Foreign 6e1e49cc01b9f846dbcb01cc4a57d323
import  -/  base-4.10.1.0:Foreign.Storable c463817097bdd1b4c7f7c325680a9964
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.IO.Unsafe 0aa7e5adc396c9f651baef415ce018da
import  -/  base-4.10.1.0:GHC.Int f3b679d79c8ad65bf2b736aa9628303f
import  -/  base-4.10.1.0:GHC.Ptr f6ff03f1ebd95f085d6be4b1fdb71ff8
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  inline-r-0.9.0.2:Control.Monad.R.Class e5a0c4056d91754aa90b5adf4bc59248
import  -/  inline-r-0.9.0.2:Foreign.R 51460710da704a1aff942901939ab83a
import  -/  inline-r-0.9.0.2:Foreign.R.Internal 0950ef2cc999f128080e9690ff115a12
import  -/  inline-r-0.9.0.2:Foreign.R.Type c66cc062d80b456888eb0e05aa6a4002
import  -/  inline-r-0.9.0.2:H.Prelude e36d2c9f12de64ccb9a431bc0e48e285
import  -/  inline-r-0.9.0.2:Language.R e598fe485b33abac7367c6e28d8b9814
import  -/  inline-r-0.9.0.2:Language.R.Globals 6466af466952ec50029e279d952209f8
import  -/  inline-r-0.9.0.2:Language.R.Instance 7c21de0bbc964770a1fa7d8ec3cc550d
import  -/  inline-r-0.9.0.2:Language.R.Literal ad8f87454366c7ad983921c1f51fd824
import  -/  inline-r-0.9.0.2:Language.R.QQ 1885758794873fa7a90ccf5c301146fd
import  -/  tasty-0.11.3:Test.Tasty fd7a7d678fb037373a84e0d2c94ba977
import  -/  tasty-0.11.3:Test.Tasty.Core ad38a7bfdd07cb983b46499179f5feea
import  -/  tasty-hunit-0.9.2:Test.Tasty.HUnit e2c91e2e2a1aa9764fce15de0bdca332
import  -/  tasty-hunit-0.9.2:Test.Tasty.HUnit.Orig cabfe6febc3dd1bdd12e76f191fca3cf
addDependentFile "/usr/share/R/include/Rversion.h"
addDependentFile "/datascience/bin/stack/programs/x86_64-linux/ghc-8.2.2/lib/ghc-8.2.2/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-2.0.1.0/build/tests/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
ef476ad34ca5181abb10f38cd564a10e
  $s$fMonadRR1 ::
    (Control.Memory.Region.Void :: *)
    GHC.Types.~~
    (Control.Memory.Region.Void :: *)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Control.Memory.Region.Void
                   @ Control.Memory.Region.Void
                   @~ <Control.Memory.Region.Void>_N) -}
d88d151db5841875739cd8b5683bab12
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Test.Regions.$trModule3
                   Test.Regions.$trModule1) -}
f1a053574ba89a46ffa51fe3b7ee3dbc
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Test.Regions.$trModule2) -}
3ae29b3a58501062d72ff2726acdde12
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Test.Regions"#) -}
da66b0bd2af1fb1bc92a0d6d8909d2fb
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Test.Regions.$trModule4) -}
57a16b3a46cf429136f1c71aba1c2419
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
92e5db45fb869a6d7c48e55e1311c452
  $w$j ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> GHC.Prim.Int#
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot]
                   (ww :: GHC.Prim.Int#)[OneShot] ->
                 case GHC.Prim.getMaskingState# w of ds { (#,#) ipv ipv1 ->
                 case ipv1 of ds1 {
                   DEFAULT
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Language.R.Instance.runRegion3
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ ()
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskAsyncExceptions#
                                @ ()
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Test.Regions.tests12
                                        (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                          `cast`
                                        (Trans
                                             (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                             (Nth:2
                                                  (Trans
                                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                 <*>_N
                                                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                                                 <GHC.Types.IO>_R
                                                                 <()>_N))
                                                       (Nth:3
                                                            (Nth:3
                                                                 (Trans
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Control.Monad.Trans.Reader.ReaderT
                                                                               (GHC.IORef.IORef
                                                                                  GHC.Types.Int)
                                                                               GHC.Types.IO
                                                                               ()>_R
                                                                       ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                <*>_N
                                                                                <GHC.IORef.IORef
                                                                                   GHC.Types.Int>_R
                                                                                <GHC.Types.IO>_R
                                                                                <()>_N)
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Control.Monad.Trans.Reader.ReaderT
                                                                               (GHC.IORef.IORef
                                                                                  GHC.Types.Int)
                                                                               GHC.Types.IO
                                                                               ()>_R
                                                                       ->_R <GHC.IORef.IORef
                                                                               GHC.Types.Int>_R
                                                                       ->_R GHC.Types.N:IO[0]
                                                                                <()>_R)))))))
                                        s1 of ds3 { (#,#) ipv4 ipv5 ->
                                 case ipv5 of wild { () -> ds3 } }))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.readMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv3
                                     s1 of ds3 { (#,#) ipv4 ipv5 ->
                              case ipv5 of wild { GHC.Types.I# x# ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld #)}
                                     (GHC.Prim.narrow32Int# x#)
                                     ipv4 of wild1 { Unit# ds4 ->
                              GHC.Prim.raiseIO# @ GHC.Exception.SomeException @ () e1 ds4 } } })
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             ipv3
                             ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                      case ipv8 of wild { GHC.Types.I# x# ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld #)}
                             (GHC.Prim.narrow32Int# x#)
                             ipv7 of wild1 { Unit# ds5 ->
                      case ww of wild2 {
                        DEFAULT
                        -> case Test.Regions.tests16 (GHC.Int.I32# wild2) ds5
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        8# -> (# ds5, GHC.Types.[] @ GHC.Types.Char #) } } } } } }
                   0#
                   -> case GHC.Prim.maskAsyncExceptions#
                             @ ()
                             Test.Regions.tests11
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ww of wild {
                        DEFAULT
                        -> case Test.Regions.tests16 (GHC.Int.I32# wild) ipv2
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        8# -> (# ipv2, GHC.Types.[] @ GHC.Types.Char #) } }
                   1#
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Language.R.Instance.runRegion3
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ ()
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskUninterruptible#
                                @ ()
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Test.Regions.tests12
                                        (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                          `cast`
                                        (Trans
                                             (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                             (Nth:2
                                                  (Trans
                                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                 <*>_N
                                                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                                                 <GHC.Types.IO>_R
                                                                 <()>_N))
                                                       (Nth:3
                                                            (Nth:3
                                                                 (Trans
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Control.Monad.Trans.Reader.ReaderT
                                                                               (GHC.IORef.IORef
                                                                                  GHC.Types.Int)
                                                                               GHC.Types.IO
                                                                               ()>_R
                                                                       ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                <*>_N
                                                                                <GHC.IORef.IORef
                                                                                   GHC.Types.Int>_R
                                                                                <GHC.Types.IO>_R
                                                                                <()>_N)
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Control.Monad.Trans.Reader.ReaderT
                                                                               (GHC.IORef.IORef
                                                                                  GHC.Types.Int)
                                                                               GHC.Types.IO
                                                                               ()>_R
                                                                       ->_R <GHC.IORef.IORef
                                                                               GHC.Types.Int>_R
                                                                       ->_R GHC.Types.N:IO[0]
                                                                                <()>_R)))))))
                                        s1 of ds3 { (#,#) ipv4 ipv5 ->
                                 case ipv5 of wild { () -> ds3 } }))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.readMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv3
                                     s1 of ds3 { (#,#) ipv4 ipv5 ->
                              case ipv5 of wild { GHC.Types.I# x# ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld #)}
                                     (GHC.Prim.narrow32Int# x#)
                                     ipv4 of wild1 { Unit# ds4 ->
                              GHC.Prim.raiseIO# @ GHC.Exception.SomeException @ () e1 ds4 } } })
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             ipv3
                             ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                      case ipv8 of wild { GHC.Types.I# x# ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld #)}
                             (GHC.Prim.narrow32Int# x#)
                             ipv7 of wild1 { Unit# ds5 ->
                      case ww of wild2 {
                        DEFAULT
                        -> case Test.Regions.tests16 (GHC.Int.I32# wild2) ds5
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        8# -> (# ds5, GHC.Types.[] @ GHC.Types.Char #) } } } } } } } }) -}
7b5b52b19a6c70349bedf5dd70eadc13
  tests :: Test.Tasty.Core.TestTree
  {- Strictness: m2,
     Unfolding: (Test.Tasty.Core.TestGroup
                   Test.Regions.tests32
                   Test.Regions.tests1) -}
d6c268a4a1b85a512a24b1be8b32e43b
  tests1 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Test.Regions.tests26
                   Test.Regions.tests2) -}
3fb3061cd4fc11de09c1402c8ef3e5db
  tests10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("function(){ 5+3 }"#) -}
f276441d62ee78373cd612014f5c1384
  tests11 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newMutVar#
                        @ GHC.Types.Int
                        @ GHC.Prim.RealWorld
                        Language.R.Instance.runRegion3
                        s1 of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.catch#
                        @ ()
                        @ GHC.Exception.SomeException
                        (GHC.Prim.unmaskAsyncExceptions#
                           @ ()
                           (\ (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                            case Test.Regions.tests12
                                   (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                     `cast`
                                   (Trans
                                        (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                        (Nth:2
                                             (Trans
                                                  (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                            <*>_N
                                                            <GHC.IORef.IORef GHC.Types.Int>_R
                                                            <GHC.Types.IO>_R
                                                            <()>_N))
                                                  (Nth:3
                                                       (Nth:3
                                                            (Trans
                                                                 (<Control.Monad.Trans.Reader.ReaderT
                                                                     (GHC.IORef.IORef GHC.Types.Int)
                                                                     GHC.Types.IO
                                                                     (Foreign.R.Internal.SomeSEXP
                                                                        GHC.Types.Any)>_R
                                                                  ->_R <Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          ()>_R
                                                                  ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                           <*>_N
                                                                           <GHC.IORef.IORef
                                                                              GHC.Types.Int>_R
                                                                           <GHC.Types.IO>_R
                                                                           <()>_N)
                                                                 (<Control.Monad.Trans.Reader.ReaderT
                                                                     (GHC.IORef.IORef GHC.Types.Int)
                                                                     GHC.Types.IO
                                                                     (Foreign.R.Internal.SomeSEXP
                                                                        GHC.Types.Any)>_R
                                                                  ->_R <Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          ()>_R
                                                                  ->_R <GHC.IORef.IORef
                                                                          GHC.Types.Int>_R
                                                                  ->_R GHC.Types.N:IO[0]
                                                                           <()>_R)))))))
                                   s2 of ds3 { (#,#) ipv4 ipv5 ->
                            case ipv5 of wild { () -> ds3 } }))
                        (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                           (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.readMutVar#
                                @ GHC.Prim.RealWorld
                                @ GHC.Types.Int
                                ipv3
                                s2 of ds3 { (#,#) ipv4 ipv5 ->
                         case ipv5 of wild { GHC.Types.I# x# ->
                         case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                                               -> (# GHC.Prim.State#
                                                                       GHC.Prim.RealWorld #)}
                                (GHC.Prim.narrow32Int# x#)
                                ipv4 of wild1 { Unit# ds4 ->
                         GHC.Prim.raiseIO# @ GHC.Exception.SomeException @ () e1 ds4 } } })
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        ipv3
                        ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                 case ipv8 of wild { GHC.Types.I# x# ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        (GHC.Prim.narrow32Int# x#)
                        ipv7 of wild1 { Unit# ds5 ->
                 (# ds5, ipv5 #) } } } } }) -}
e7acb6546768ca1b62885a3d205e1318
  tests12 ::
    GHC.IORef.IORef GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (r1 :: GHC.IORef.IORef GHC.Types.Int)[OneShot]
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Foreign.R.Internal.SomeSEXP Control.Memory.Region.V #)
                        Test.Regions.tests13 of ds { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Foreign.R.Internal.SomeSEXP a dt ->
                 case Language.R.Globals.nilValue
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.G>_P <'Foreign.R.Type.Nil>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.G
                                 'Foreign.R.Type.Nil, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        dt
                        ds3
                        s of wild1 { (#,#) ds4 ds5 ->
                 case ((Language.R.$wevalEnv
                          @ (Language.R.Instance.R GHC.Types.Any)
                          @ Control.Memory.Region.V
                          @ 'Foreign.R.Type.Lang
                          (Language.R.Instance.$fMonadRR @ GHC.Types.Any)
                          ds5
                          Language.R.Globals.globalEnv
                            `cast`
                          (Trans
                               (Foreign.R.Internal.N:SEXP[0]
                                    <Control.Memory.Region.G>_P <'Foreign.R.Type.Env>_P)
                               (Trans
                                    (GHC.Ptr.Ptr
                                       <Language.R.HExp.HExp
                                          Control.Memory.Region.G
                                          'Foreign.R.Type.Env, Language.R.HExp.HExp
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Env>)_R
                                    (Sym (Foreign.R.Internal.N:SEXP[0]
                                              <Control.Memory.Region.V>_P
                                              <'Foreign.R.Type.Env>_P)))))
                         `cast`
                       (Trans
                            (Nth:3
                                 (Trans
                                      (<Foreign.R.Internal.SEXP
                                          Control.Memory.Region.V 'Foreign.R.Type.Lang>_R
                                       ->_R (Language.R.Instance.R
                                               <GHC.Types.Any>_P
                                               (Foreign.R.Internal.SomeSEXP
                                                  (Language.R.Instance.D:R:PrimStateR[0]
                                                       <GHC.Types.Any>_N))_N)_R)
                                      (Trans
                                           (<Foreign.R.Internal.SEXP
                                               Control.Memory.Region.V 'Foreign.R.Type.Lang>_R
                                            ->_R Language.R.Instance.N:R[0]
                                                     <GHC.Types.Any>_P <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any>_N)
                                           (Nth:2
                                                (Nth:3
                                                     (Trans
                                                          (<Control.Monad.Trans.Reader.ReaderT
                                                              (GHC.IORef.IORef GHC.Types.Int)
                                                              GHC.Types.IO
                                                              (Foreign.R.Internal.SEXP
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Lang)>_R
                                                           ->_R <Foreign.R.Internal.SEXP
                                                                   Control.Memory.Region.V
                                                                   'Foreign.R.Type.Lang
                                                                 -> Control.Monad.Trans.Reader.ReaderT
                                                                      (GHC.IORef.IORef
                                                                         GHC.Types.Int)
                                                                      GHC.Types.IO
                                                                      (Foreign.R.Internal.SomeSEXP
                                                                         GHC.Types.Any)>_R
                                                           ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                    <*>_N
                                                                    <GHC.IORef.IORef
                                                                       GHC.Types.Int>_R
                                                                    <GHC.Types.IO>_R
                                                                    <Foreign.R.Internal.SomeSEXP
                                                                       GHC.Types.Any>_N)
                                                          (<Control.Monad.Trans.Reader.ReaderT
                                                              (GHC.IORef.IORef GHC.Types.Int)
                                                              GHC.Types.IO
                                                              (Foreign.R.Internal.SEXP
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Lang)>_R
                                                           ->_R <Foreign.R.Internal.SEXP
                                                                   Control.Memory.Region.V
                                                                   'Foreign.R.Type.Lang
                                                                 -> Control.Monad.Trans.Reader.ReaderT
                                                                      (GHC.IORef.IORef
                                                                         GHC.Types.Int)
                                                                      GHC.Types.IO
                                                                      (Foreign.R.Internal.SomeSEXP
                                                                         GHC.Types.Any)>_R
                                                           ->_R <GHC.IORef.IORef GHC.Types.Int>_R
                                                           ->_R GHC.Types.N:IO[0]
                                                                    <Foreign.R.Internal.SomeSEXP
                                                                       GHC.Types.Any>_R)))))))
                            (Control.Monad.Trans.Reader.N:ReaderT[0]
                                 <*>_N
                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                 <GHC.Types.IO>_R
                                 <Foreign.R.Internal.SomeSEXP GHC.Types.Any>_N))
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP GHC.Types.Any>_R)
                        ds4 of ds1 { (#,#) ipv2 ipv3 ->
                 (# ipv2, GHC.Tuple.() #) } } } } }) -}
fdc91e23ff5c895c215f669e6410a042
  tests13 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP Control.Memory.Region.V #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.noDuplicate#
                        @ GHC.Prim.RealWorld
                        s of s' { DEFAULT ->
                 case Language.R.QQ.parse1
                        Test.Regions.tests14
                        s' of ds1 { (#,#) ipv ipv1 ->
                 case ipv1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.V>_P <'Foreign.R.Type.Expr>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.V
                                 'Foreign.R.Type.Expr, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds2 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        ds2
                        0#
                        ipv of wild1 { (#,#) ds3 ds4 ->
                 case Language.R.Globals.globalEnv
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.G>_P <'Foreign.R.Type.Env>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.G
                                 'Foreign.R.Type.Env, Foreign.R.Internal.SEXPREC>)_R) of ds5 { GHC.Ptr.Ptr ds6 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        ds4
                        ds6
                        ds3 of wild { (#,#) ds7 ds8 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        ds8
                        ds7 of wild2 { Unit# ds9 ->
                 (# ds9,
                    Foreign.R.Internal.SomeSEXP
                      @ Control.Memory.Region.V
                      @ GHC.Types.Any
                      ds8 #) } } } } } } }) -}
eb12df64475b5570742191704c401525
  tests14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Regions.tests15) -}
ff7c53309d91b1434eb2153c14f53182
  tests15 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("function(){ gc() }"#) -}
6868c34a39710a74371c866aff3d0fa8
  tests16 ::
    GHC.Int.Int32
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <B,U><B,U>x -}
869bf1f222e7b20a95cd605d0b282070
  tests17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Regions.tests18) -}
c504804e9f9179f9b9d72dca7789d6c4
  tests18 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("runRegion-no-leaked-thunks"#) -}
b7ccffb854484e627fa7117741326e09
  tests19 :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Test.Regions.tests24
                   Test.Regions.tests20
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
8ea734e526994f12b6aaf1408ee20b24
  tests2 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Test.Regions.tests19
                   Test.Regions.tests3) -}
3565e11c76d04bad7ed53fe3f2eb9112
  tests20 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.readIntOffAddr#
                        @ GHC.Prim.RealWorld
                        __label "R_PPStackTop" (data)
                        0#
                        s of ds2 { (#,#) ipv ipv1 ->
                 case GHC.Prim.getMaskingState# ipv of ds { (#,#) ipv2 ipv3 ->
                 case ipv3 of ds1 {
                   DEFAULT
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Language.R.Instance.runRegion3
                             ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.catch#
                             @ ()
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskAsyncExceptions#
                                @ ()
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Test.Regions.tests22
                                        (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5)
                                          `cast`
                                        (Trans
                                             (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                             (Nth:2
                                                  (Trans
                                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                 <*>_N
                                                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                                                 <GHC.Types.IO>_R
                                                                 <()>_N))
                                                       (Nth:3
                                                            (Nth:3
                                                                 (Trans
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SEXP
                                                                             GHC.Types.Any
                                                                             'Foreign.R.Type.Int)>_R
                                                                       ->_R <Foreign.R.Internal.SEXP
                                                                               GHC.Types.Any
                                                                               'Foreign.R.Type.Int
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  ()>_R
                                                                       ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                <*>_N
                                                                                <GHC.IORef.IORef
                                                                                   GHC.Types.Int>_R
                                                                                <GHC.Types.IO>_R
                                                                                <()>_N)
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SEXP
                                                                             GHC.Types.Any
                                                                             'Foreign.R.Type.Int)>_R
                                                                       ->_R <Foreign.R.Internal.SEXP
                                                                               GHC.Types.Any
                                                                               'Foreign.R.Type.Int
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  ()>_R
                                                                       ->_R <GHC.IORef.IORef
                                                                               GHC.Types.Int>_R
                                                                       ->_R GHC.Types.N:IO[0]
                                                                                <()>_R)))))))
                                        s1 of ds3 { (#,#) ipv6 ipv7 ->
                                 case ipv7 of wild { () -> ds3 } }))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.readMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv5
                                     s1 of ds3 { (#,#) ipv6 ipv7 ->
                              case ipv7 of wild { GHC.Types.I# x# ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld #)}
                                     (GHC.Prim.narrow32Int# x#)
                                     ipv6 of wild1 { Unit# ds5 ->
                              GHC.Prim.raiseIO# @ GHC.Exception.SomeException @ () e1 ds5 } } })
                             ipv4 of ds3 { (#,#) ipv6 ipv7 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             ipv5
                             ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                      case ipv9 of wild { GHC.Types.I# x# ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld #)}
                             (GHC.Prim.narrow32Int# x#)
                             ipv8 of wild1 { Unit# ds6 ->
                      case GHC.Prim.readIntOffAddr#
                             @ GHC.Prim.RealWorld
                             __label "R_PPStackTop" (data)
                             0#
                             ds6 of ds7 { (#,#) ipv10 ipv11 ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# ipv11 ipv1) of wild2 {
                        GHC.Types.False
                        -> case Test.Regions.tests23 ipv1 ipv11 ipv10
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True
                        -> (# ipv10, GHC.Types.[] @ GHC.Types.Char #) } } } } } } }
                   0#
                   -> case GHC.Prim.maskAsyncExceptions#
                             @ ()
                             Test.Regions.tests21
                             ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readIntOffAddr#
                             @ GHC.Prim.RealWorld
                             __label "R_PPStackTop" (data)
                             0#
                             ipv4 of ds5 { (#,#) ipv6 ipv7 ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# ipv7 ipv1) of wild {
                        GHC.Types.False
                        -> case Test.Regions.tests23 ipv1 ipv7 ipv6
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True -> (# ipv6, GHC.Types.[] @ GHC.Types.Char #) } } }
                   1#
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Language.R.Instance.runRegion3
                             ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.catch#
                             @ ()
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskUninterruptible#
                                @ ()
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Test.Regions.tests22
                                        (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5)
                                          `cast`
                                        (Trans
                                             (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                             (Nth:2
                                                  (Trans
                                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                 <*>_N
                                                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                                                 <GHC.Types.IO>_R
                                                                 <()>_N))
                                                       (Nth:3
                                                            (Nth:3
                                                                 (Trans
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SEXP
                                                                             GHC.Types.Any
                                                                             'Foreign.R.Type.Int)>_R
                                                                       ->_R <Foreign.R.Internal.SEXP
                                                                               GHC.Types.Any
                                                                               'Foreign.R.Type.Int
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  ()>_R
                                                                       ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                <*>_N
                                                                                <GHC.IORef.IORef
                                                                                   GHC.Types.Int>_R
                                                                                <GHC.Types.IO>_R
                                                                                <()>_N)
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SEXP
                                                                             GHC.Types.Any
                                                                             'Foreign.R.Type.Int)>_R
                                                                       ->_R <Foreign.R.Internal.SEXP
                                                                               GHC.Types.Any
                                                                               'Foreign.R.Type.Int
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  ()>_R
                                                                       ->_R <GHC.IORef.IORef
                                                                               GHC.Types.Int>_R
                                                                       ->_R GHC.Types.N:IO[0]
                                                                                <()>_R)))))))
                                        s1 of ds3 { (#,#) ipv6 ipv7 ->
                                 case ipv7 of wild { () -> ds3 } }))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.readMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv5
                                     s1 of ds3 { (#,#) ipv6 ipv7 ->
                              case ipv7 of wild { GHC.Types.I# x# ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld #)}
                                     (GHC.Prim.narrow32Int# x#)
                                     ipv6 of wild1 { Unit# ds5 ->
                              GHC.Prim.raiseIO# @ GHC.Exception.SomeException @ () e1 ds5 } } })
                             ipv4 of ds3 { (#,#) ipv6 ipv7 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             ipv5
                             ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                      case ipv9 of wild { GHC.Types.I# x# ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld #)}
                             (GHC.Prim.narrow32Int# x#)
                             ipv8 of wild1 { Unit# ds6 ->
                      case GHC.Prim.readIntOffAddr#
                             @ GHC.Prim.RealWorld
                             __label "R_PPStackTop" (data)
                             0#
                             ds6 of ds7 { (#,#) ipv10 ipv11 ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# ipv11 ipv1) of wild2 {
                        GHC.Types.False
                        -> case Test.Regions.tests23 ipv1 ipv11 ipv10
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True
                        -> (# ipv10,
                              GHC.Types.[] @ GHC.Types.Char #) } } } } } } } } } }) -}
9e8bd68a0cc12ae6409d3f9025f7d6fd
  tests21 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newMutVar#
                        @ GHC.Types.Int
                        @ GHC.Prim.RealWorld
                        Language.R.Instance.runRegion3
                        s1 of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.catch#
                        @ ()
                        @ GHC.Exception.SomeException
                        (GHC.Prim.unmaskAsyncExceptions#
                           @ ()
                           (\ (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                            case Test.Regions.tests22
                                   (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                     `cast`
                                   (Trans
                                        (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                        (Nth:2
                                             (Trans
                                                  (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                            <*>_N
                                                            <GHC.IORef.IORef GHC.Types.Int>_R
                                                            <GHC.Types.IO>_R
                                                            <()>_N))
                                                  (Nth:3
                                                       (Nth:3
                                                            (Trans
                                                                 (<Control.Monad.Trans.Reader.ReaderT
                                                                     (GHC.IORef.IORef GHC.Types.Int)
                                                                     GHC.Types.IO
                                                                     (Foreign.R.Internal.SEXP
                                                                        GHC.Types.Any
                                                                        'Foreign.R.Type.Int)>_R
                                                                  ->_R <Foreign.R.Internal.SEXP
                                                                          GHC.Types.Any
                                                                          'Foreign.R.Type.Int
                                                                        -> Control.Monad.Trans.Reader.ReaderT
                                                                             (GHC.IORef.IORef
                                                                                GHC.Types.Int)
                                                                             GHC.Types.IO
                                                                             ()>_R
                                                                  ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                           <*>_N
                                                                           <GHC.IORef.IORef
                                                                              GHC.Types.Int>_R
                                                                           <GHC.Types.IO>_R
                                                                           <()>_N)
                                                                 (<Control.Monad.Trans.Reader.ReaderT
                                                                     (GHC.IORef.IORef GHC.Types.Int)
                                                                     GHC.Types.IO
                                                                     (Foreign.R.Internal.SEXP
                                                                        GHC.Types.Any
                                                                        'Foreign.R.Type.Int)>_R
                                                                  ->_R <Foreign.R.Internal.SEXP
                                                                          GHC.Types.Any
                                                                          'Foreign.R.Type.Int
                                                                        -> Control.Monad.Trans.Reader.ReaderT
                                                                             (GHC.IORef.IORef
                                                                                GHC.Types.Int)
                                                                             GHC.Types.IO
                                                                             ()>_R
                                                                  ->_R <GHC.IORef.IORef
                                                                          GHC.Types.Int>_R
                                                                  ->_R GHC.Types.N:IO[0]
                                                                           <()>_R)))))))
                                   s2 of ds3 { (#,#) ipv4 ipv5 ->
                            case ipv5 of wild { () -> ds3 } }))
                        (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                           (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.readMutVar#
                                @ GHC.Prim.RealWorld
                                @ GHC.Types.Int
                                ipv3
                                s2 of ds3 { (#,#) ipv4 ipv5 ->
                         case ipv5 of wild { GHC.Types.I# x# ->
                         case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                                               -> (# GHC.Prim.State#
                                                                       GHC.Prim.RealWorld #)}
                                (GHC.Prim.narrow32Int# x#)
                                ipv4 of wild1 { Unit# ds4 ->
                         GHC.Prim.raiseIO# @ GHC.Exception.SomeException @ () e1 ds4 } } })
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        ipv3
                        ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                 case ipv8 of wild { GHC.Types.I# x# ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        (GHC.Prim.narrow32Int# x#)
                        ipv7 of wild1 { Unit# ds5 ->
                 (# ds5, ipv5 #) } } } } }) -}
2596dee467cab8bbc9bb5425ff168de7
  tests22 ::
    GHC.IORef.IORef GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U(U)><S,U> -}
3fbe539193c179e36a6e19d9f5b09125
  tests23 ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <B,U><B,U><B,U>x -}
792253b0f4143f35e92ba9821982d738
  tests24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Regions.tests25) -}
f3f7969dd24925662298a942bcdbb0b8
  tests25 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("mksexp-object-live-inside-extend"#) -}
ad0fc718a18568b90c591c842ed1d99a
  tests26 :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Test.Regions.tests30
                   Test.Regions.tests27
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
91686986bcf2b177fb633981dfd58392
  tests27 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.readIntOffAddr#
                        @ GHC.Prim.RealWorld
                        __label "R_PPStackTop" (data)
                        0#
                        s of ds2 { (#,#) ipv ipv1 ->
                 case GHC.Prim.getMaskingState# ipv of ds { (#,#) ipv2 ipv3 ->
                 case ipv3 of ds1 {
                   DEFAULT
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Language.R.Instance.runRegion3
                             ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.catch#
                             @ ()
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskAsyncExceptions#
                                @ ()
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Test.Regions.tests29
                                        (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5)
                                          `cast`
                                        (Trans
                                             (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                             (Nth:2
                                                  (Trans
                                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                 <*>_N
                                                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                                                 <GHC.Types.IO>_R
                                                                 <()>_N))
                                                       (Nth:3
                                                            (Nth:3
                                                                 (Trans
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  ()>_R
                                                                       ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                <*>_N
                                                                                <GHC.IORef.IORef
                                                                                   GHC.Types.Int>_R
                                                                                <GHC.Types.IO>_R
                                                                                <()>_N)
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  ()>_R
                                                                       ->_R <GHC.IORef.IORef
                                                                               GHC.Types.Int>_R
                                                                       ->_R GHC.Types.N:IO[0]
                                                                                <()>_R)))))))
                                        s1 of ds3 { (#,#) ipv6 ipv7 ->
                                 case ipv7 of wild { () -> ds3 } }))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.readMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv5
                                     s1 of ds3 { (#,#) ipv6 ipv7 ->
                              case ipv7 of wild { GHC.Types.I# x# ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld #)}
                                     (GHC.Prim.narrow32Int# x#)
                                     ipv6 of wild1 { Unit# ds5 ->
                              GHC.Prim.raiseIO# @ GHC.Exception.SomeException @ () e1 ds5 } } })
                             ipv4 of ds3 { (#,#) ipv6 ipv7 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             ipv5
                             ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                      case ipv9 of wild { GHC.Types.I# x# ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld #)}
                             (GHC.Prim.narrow32Int# x#)
                             ipv8 of wild1 { Unit# ds6 ->
                      case GHC.Prim.readIntOffAddr#
                             @ GHC.Prim.RealWorld
                             __label "R_PPStackTop" (data)
                             0#
                             ds6 of ds7 { (#,#) ipv10 ipv11 ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# ipv11 ipv1) of wild2 {
                        GHC.Types.False
                        -> case Test.Regions.tests23 ipv1 ipv11 ipv10
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True
                        -> (# ipv10, GHC.Types.[] @ GHC.Types.Char #) } } } } } } }
                   0#
                   -> case GHC.Prim.maskAsyncExceptions#
                             @ ()
                             Test.Regions.tests28
                             ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readIntOffAddr#
                             @ GHC.Prim.RealWorld
                             __label "R_PPStackTop" (data)
                             0#
                             ipv4 of ds5 { (#,#) ipv6 ipv7 ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# ipv7 ipv1) of wild {
                        GHC.Types.False
                        -> case Test.Regions.tests23 ipv1 ipv7 ipv6
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True -> (# ipv6, GHC.Types.[] @ GHC.Types.Char #) } } }
                   1#
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Language.R.Instance.runRegion3
                             ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.catch#
                             @ ()
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskUninterruptible#
                                @ ()
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Test.Regions.tests29
                                        (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv5)
                                          `cast`
                                        (Trans
                                             (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                             (Nth:2
                                                  (Trans
                                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                 <*>_N
                                                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                                                 <GHC.Types.IO>_R
                                                                 <()>_N))
                                                       (Nth:3
                                                            (Nth:3
                                                                 (Trans
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  ()>_R
                                                                       ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                <*>_N
                                                                                <GHC.IORef.IORef
                                                                                   GHC.Types.Int>_R
                                                                                <GHC.Types.IO>_R
                                                                                <()>_N)
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  ()>_R
                                                                       ->_R <GHC.IORef.IORef
                                                                               GHC.Types.Int>_R
                                                                       ->_R GHC.Types.N:IO[0]
                                                                                <()>_R)))))))
                                        s1 of ds3 { (#,#) ipv6 ipv7 ->
                                 case ipv7 of wild { () -> ds3 } }))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.readMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv5
                                     s1 of ds3 { (#,#) ipv6 ipv7 ->
                              case ipv7 of wild { GHC.Types.I# x# ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld #)}
                                     (GHC.Prim.narrow32Int# x#)
                                     ipv6 of wild1 { Unit# ds5 ->
                              GHC.Prim.raiseIO# @ GHC.Exception.SomeException @ () e1 ds5 } } })
                             ipv4 of ds3 { (#,#) ipv6 ipv7 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             ipv5
                             ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                      case ipv9 of wild { GHC.Types.I# x# ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld #)}
                             (GHC.Prim.narrow32Int# x#)
                             ipv8 of wild1 { Unit# ds6 ->
                      case GHC.Prim.readIntOffAddr#
                             @ GHC.Prim.RealWorld
                             __label "R_PPStackTop" (data)
                             0#
                             ds6 of ds7 { (#,#) ipv10 ipv11 ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# ipv11 ipv1) of wild2 {
                        GHC.Types.False
                        -> case Test.Regions.tests23 ipv1 ipv11 ipv10
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True
                        -> (# ipv10,
                              GHC.Types.[] @ GHC.Types.Char #) } } } } } } } } } }) -}
0f6d50c071408b8b797f893b1ce4c4fe
  tests28 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newMutVar#
                        @ GHC.Types.Int
                        @ GHC.Prim.RealWorld
                        Language.R.Instance.runRegion3
                        s1 of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.catch#
                        @ ()
                        @ GHC.Exception.SomeException
                        (GHC.Prim.unmaskAsyncExceptions#
                           @ ()
                           (\ (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                            case Test.Regions.tests29
                                   (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                     `cast`
                                   (Trans
                                        (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                        (Nth:2
                                             (Trans
                                                  (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                            <*>_N
                                                            <GHC.IORef.IORef GHC.Types.Int>_R
                                                            <GHC.Types.IO>_R
                                                            <()>_N))
                                                  (Nth:3
                                                       (Nth:3
                                                            (Trans
                                                                 (<Control.Monad.Trans.Reader.ReaderT
                                                                     (GHC.IORef.IORef GHC.Types.Int)
                                                                     GHC.Types.IO
                                                                     (Foreign.R.Internal.SomeSEXP
                                                                        GHC.Types.Any)>_R
                                                                  ->_R <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any
                                                                        -> Control.Monad.Trans.Reader.ReaderT
                                                                             (GHC.IORef.IORef
                                                                                GHC.Types.Int)
                                                                             GHC.Types.IO
                                                                             ()>_R
                                                                  ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                           <*>_N
                                                                           <GHC.IORef.IORef
                                                                              GHC.Types.Int>_R
                                                                           <GHC.Types.IO>_R
                                                                           <()>_N)
                                                                 (<Control.Monad.Trans.Reader.ReaderT
                                                                     (GHC.IORef.IORef GHC.Types.Int)
                                                                     GHC.Types.IO
                                                                     (Foreign.R.Internal.SomeSEXP
                                                                        GHC.Types.Any)>_R
                                                                  ->_R <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any
                                                                        -> Control.Monad.Trans.Reader.ReaderT
                                                                             (GHC.IORef.IORef
                                                                                GHC.Types.Int)
                                                                             GHC.Types.IO
                                                                             ()>_R
                                                                  ->_R <GHC.IORef.IORef
                                                                          GHC.Types.Int>_R
                                                                  ->_R GHC.Types.N:IO[0]
                                                                           <()>_R)))))))
                                   s2 of ds3 { (#,#) ipv4 ipv5 ->
                            case ipv5 of wild { () -> ds3 } }))
                        (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                           (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.readMutVar#
                                @ GHC.Prim.RealWorld
                                @ GHC.Types.Int
                                ipv3
                                s2 of ds3 { (#,#) ipv4 ipv5 ->
                         case ipv5 of wild { GHC.Types.I# x# ->
                         case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                                               -> (# GHC.Prim.State#
                                                                       GHC.Prim.RealWorld #)}
                                (GHC.Prim.narrow32Int# x#)
                                ipv4 of wild1 { Unit# ds4 ->
                         GHC.Prim.raiseIO# @ GHC.Exception.SomeException @ () e1 ds4 } } })
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        ipv3
                        ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                 case ipv8 of wild { GHC.Types.I# x# ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        (GHC.Prim.narrow32Int# x#)
                        ipv7 of wild1 { Unit# ds5 ->
                 (# ds5, ipv5 #) } } } } }) -}
1abe389a49aa9715edf213a915706c20
  tests29 ::
    GHC.IORef.IORef GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><L,U> -}
2780213fcb62b10ff2c30eb6edbc11d4
  tests3 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Test.Regions.tests4
                   (GHC.Types.[] @ Test.Tasty.Core.TestTree)) -}
ac3a8fc6640048de69c3d540cb1c206b
  tests30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Regions.tests31) -}
176aa1a777bd92cfb585bde42fcf22ce
  tests31 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("qq-object-live-inside-extend"#) -}
8ec6f0395f28c73a551cd591b2ecad58
  tests32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Regions.tests33) -}
82315bd866151bfe3343351baa4191a7
  tests33 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("regions"#) -}
098ef77fea89ba3b9e8a860b009387c8
  tests4 :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Test.Regions.tests17
                   Test.Regions.tests5
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
9cf6bb07e3cf3a3428b0aa2e1d06c55c
  tests5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.getMaskingState# s of ds { (#,#) ipv ipv1 ->
                 case ipv1 of ds1 {
                   DEFAULT
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Language.R.Instance.runRegion3
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ GHC.Int.Int32
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskAsyncExceptions#
                                @ GHC.Int.Int32
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Test.Regions.tests7
                                        (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                          `cast`
                                        (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                        s1 of ds3 { (#,#) ipv4 ipv5 ->
                                 case ipv5 of ds4 { GHC.Int.I32# ipv7 -> ds3 } }))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.readMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv3
                                     s1 of ds3 { (#,#) ipv4 ipv5 ->
                              case ipv5 of wild { GHC.Types.I# x# ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld #)}
                                     (GHC.Prim.narrow32Int# x#)
                                     ipv4 of wild1 { Unit# ds4 ->
                              GHC.Prim.raiseIO#
                                @ GHC.Exception.SomeException
                                @ GHC.Int.Int32
                                e1
                                ds4 } } })
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             ipv3
                             ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                      case ipv8 of wild { GHC.Types.I# x# ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld #)}
                             (GHC.Prim.narrow32Int# x#)
                             ipv7 of wild1 { Unit# ds5 ->
                      case ipv5 of ww { GHC.Int.I32# ww1 ->
                      Test.Regions.$w$j ds5 ww1 } } } } } }
                   0#
                   -> case GHC.Prim.maskAsyncExceptions#
                             @ GHC.Int.Int32
                             Test.Regions.tests6
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ipv3 of ww { GHC.Int.I32# ww1 ->
                      Test.Regions.$w$j ipv2 ww1 } }
                   1#
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Language.R.Instance.runRegion3
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ GHC.Int.Int32
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskUninterruptible#
                                @ GHC.Int.Int32
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Test.Regions.tests7
                                        (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                          `cast`
                                        (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                        s1 of ds3 { (#,#) ipv4 ipv5 ->
                                 case ipv5 of ds4 { GHC.Int.I32# ipv7 -> ds3 } }))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.readMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv3
                                     s1 of ds3 { (#,#) ipv4 ipv5 ->
                              case ipv5 of wild { GHC.Types.I# x# ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld #)}
                                     (GHC.Prim.narrow32Int# x#)
                                     ipv4 of wild1 { Unit# ds4 ->
                              GHC.Prim.raiseIO#
                                @ GHC.Exception.SomeException
                                @ GHC.Int.Int32
                                e1
                                ds4 } } })
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             ipv3
                             ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                      case ipv8 of wild { GHC.Types.I# x# ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld #)}
                             (GHC.Prim.narrow32Int# x#)
                             ipv7 of wild1 { Unit# ds5 ->
                      case ipv5 of ww { GHC.Int.I32# ww1 ->
                      Test.Regions.$w$j ds5 ww1 } } } } } } } }) -}
7b5200b5862c4ff353dd91a88ced74d9
  tests6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Int.Int32 #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newMutVar#
                        @ GHC.Types.Int
                        @ GHC.Prim.RealWorld
                        Language.R.Instance.runRegion3
                        s1 of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.catch#
                        @ GHC.Int.Int32
                        @ GHC.Exception.SomeException
                        (GHC.Prim.unmaskAsyncExceptions#
                           @ GHC.Int.Int32
                           (\ (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                            case Test.Regions.tests7
                                   (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                     `cast`
                                   (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                   s2 of ds3 { (#,#) ipv4 ipv5 ->
                            case ipv5 of ds1 { GHC.Int.I32# ipv -> ds3 } }))
                        (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                           (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.readMutVar#
                                @ GHC.Prim.RealWorld
                                @ GHC.Types.Int
                                ipv3
                                s2 of ds3 { (#,#) ipv4 ipv5 ->
                         case ipv5 of wild { GHC.Types.I# x# ->
                         case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                                               -> (# GHC.Prim.State#
                                                                       GHC.Prim.RealWorld #)}
                                (GHC.Prim.narrow32Int# x#)
                                ipv4 of wild1 { Unit# ds4 ->
                         GHC.Prim.raiseIO#
                           @ GHC.Exception.SomeException
                           @ GHC.Int.Int32
                           e1
                           ds4 } } })
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        ipv3
                        ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                 case ipv8 of wild { GHC.Types.I# x# ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        (GHC.Prim.narrow32Int# x#)
                        ipv7 of wild1 { Unit# ds5 ->
                 (# ds5, ipv5 #) } } } } }) -}
168cc9d6fd1460e3e64b48398d27102c
  tests7 ::
    GHC.IORef.IORef GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Int.Int32 #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (x :: GHC.IORef.IORef GHC.Types.Int)[OneShot]
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Foreign.R.Internal.SomeSEXP Control.Memory.Region.V #)
                        Test.Regions.tests8 of ds { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Foreign.R.Internal.SomeSEXP a dt ->
                 case Language.R.Globals.nilValue
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.G>_P <'Foreign.R.Type.Nil>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.G
                                 'Foreign.R.Type.Nil, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        dt
                        ds3
                        s of wild1 { (#,#) ds4 ds5 ->
                 case ((Language.R.$wevalEnv
                          @ (Language.R.Instance.R GHC.Types.Any)
                          @ Control.Memory.Region.V
                          @ 'Foreign.R.Type.Lang
                          (Language.R.Instance.$fMonadRR @ GHC.Types.Any)
                          ds5
                          Language.R.Globals.globalEnv
                            `cast`
                          (Trans
                               (Foreign.R.Internal.N:SEXP[0]
                                    <Control.Memory.Region.G>_P <'Foreign.R.Type.Env>_P)
                               (Trans
                                    (GHC.Ptr.Ptr
                                       <Language.R.HExp.HExp
                                          Control.Memory.Region.G
                                          'Foreign.R.Type.Env, Language.R.HExp.HExp
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Env>)_R
                                    (Sym (Foreign.R.Internal.N:SEXP[0]
                                              <Control.Memory.Region.V>_P
                                              <'Foreign.R.Type.Env>_P)))))
                         `cast`
                       (Trans
                            (Nth:3
                                 (Trans
                                      (<Foreign.R.Internal.SEXP
                                          Control.Memory.Region.V 'Foreign.R.Type.Lang>_R
                                       ->_R (Language.R.Instance.R
                                               <GHC.Types.Any>_P
                                               (Foreign.R.Internal.SomeSEXP
                                                  (Language.R.Instance.D:R:PrimStateR[0]
                                                       <GHC.Types.Any>_N))_N)_R)
                                      (Trans
                                           (<Foreign.R.Internal.SEXP
                                               Control.Memory.Region.V 'Foreign.R.Type.Lang>_R
                                            ->_R Language.R.Instance.N:R[0]
                                                     <GHC.Types.Any>_P <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any>_N)
                                           (Nth:2
                                                (Nth:3
                                                     (Trans
                                                          (<Control.Monad.Trans.Reader.ReaderT
                                                              (GHC.IORef.IORef GHC.Types.Int)
                                                              GHC.Types.IO
                                                              (Foreign.R.Internal.SEXP
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Lang)>_R
                                                           ->_R <Foreign.R.Internal.SEXP
                                                                   Control.Memory.Region.V
                                                                   'Foreign.R.Type.Lang
                                                                 -> Control.Monad.Trans.Reader.ReaderT
                                                                      (GHC.IORef.IORef
                                                                         GHC.Types.Int)
                                                                      GHC.Types.IO
                                                                      (Foreign.R.Internal.SomeSEXP
                                                                         GHC.Types.Any)>_R
                                                           ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                    <*>_N
                                                                    <GHC.IORef.IORef
                                                                       GHC.Types.Int>_R
                                                                    <GHC.Types.IO>_R
                                                                    <Foreign.R.Internal.SomeSEXP
                                                                       GHC.Types.Any>_N)
                                                          (<Control.Monad.Trans.Reader.ReaderT
                                                              (GHC.IORef.IORef GHC.Types.Int)
                                                              GHC.Types.IO
                                                              (Foreign.R.Internal.SEXP
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Lang)>_R
                                                           ->_R <Foreign.R.Internal.SEXP
                                                                   Control.Memory.Region.V
                                                                   'Foreign.R.Type.Lang
                                                                 -> Control.Monad.Trans.Reader.ReaderT
                                                                      (GHC.IORef.IORef
                                                                         GHC.Types.Int)
                                                                      GHC.Types.IO
                                                                      (Foreign.R.Internal.SomeSEXP
                                                                         GHC.Types.Any)>_R
                                                           ->_R <GHC.IORef.IORef GHC.Types.Int>_R
                                                           ->_R GHC.Types.N:IO[0]
                                                                    <Foreign.R.Internal.SomeSEXP
                                                                       GHC.Types.Any>_R)))))))
                            (Control.Monad.Trans.Reader.N:ReaderT[0]
                                 <*>_N
                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                 <GHC.Types.IO>_R
                                 <Foreign.R.Internal.SomeSEXP GHC.Types.Any>_N))
                         x)
                        `cast`
                      (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP GHC.Types.Any>_R)
                        ds4 of ds1 { (#,#) ipv2 ipv3 ->
                 (# ipv2,
                    Language.R.Literal.$wdynSEXP
                      @ GHC.Int.Int32
                      @ GHC.Types.Any
                      @ 'Foreign.R.Type.Int
                      Language.R.Literal.$fLiteralInt32Int
                      ipv3 #) } } } } }) -}
755c226d11af54c20782470352ce917a
  tests8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP Control.Memory.Region.V #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.noDuplicate#
                        @ GHC.Prim.RealWorld
                        s of s' { DEFAULT ->
                 case Language.R.QQ.parse1
                        Test.Regions.tests9
                        s' of ds1 { (#,#) ipv ipv1 ->
                 case ipv1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.V>_P <'Foreign.R.Type.Expr>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.V
                                 'Foreign.R.Type.Expr, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds2 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        ds2
                        0#
                        ipv of wild1 { (#,#) ds3 ds4 ->
                 case Language.R.Globals.globalEnv
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.G>_P <'Foreign.R.Type.Env>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.G
                                 'Foreign.R.Type.Env, Foreign.R.Internal.SEXPREC>)_R) of ds5 { GHC.Ptr.Ptr ds6 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        ds4
                        ds6
                        ds3 of wild { (#,#) ds7 ds8 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        ds8
                        ds7 of wild2 { Unit# ds9 ->
                 (# ds9,
                    Foreign.R.Internal.SomeSEXP
                      @ Control.Memory.Region.V
                      @ GHC.Types.Any
                      ds8 #) } } } } } } }) -}
b265b51d9707fb468560f2ca7aa6d474
  tests9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Regions.tests10) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

