
==================== FINAL INTERFACE ====================
2017-12-28 08:50:03.956931 UTC

interface main:Test.Matcher 8022
  interface hash: b9a526778367a73a4f67048eac601603
  ABI hash: 90031a4b5c2d941c953700f2a985420c
  export-list hash: f385f388a41499e0bdb51b2b45aa0988
  orphan hash: 4905b259631b5d9aeba1217dc5ac8e82
  flag hash: 3493ee98163e5d19602cf1394b68044a
  sig of: Nothing
  used TH splices: True
  where
exports:
  Test.Matcher.tests
module dependencies:
package dependencies: ansi-terminal-0.7.1.1 ansi-wl-pprint-0.6.8.1
                      array-0.5.2.0 async-2.1.1.1 base-4.10.1.0 binary-0.8.5.1
                      bytestring-0.10.8.2 clock-0.7.2 colour-2.3.4 containers-0.5.10.2
                      data-default-class-0.1.2.0 deepseq-1.4.3.0 exceptions-0.8.3
                      ghc-boot-th-8.2.2 ghc-prim-0.5.1.1 inline-r-0.9.0.2
                      integer-gmp-1.0.1.0 mtl-2.2.1 optparse-applicative-0.14.0.0
                      parsec-3.1.11 pretty-1.1.3.3 primitive-0.6.2.0 process-1.6.1.0
                      reflection-2.1.2 regex-base-0.93.2 regex-tdfa-1.2.2 safe-0.3.15
                      setenv-0.1.1.3 singletons-2.3.1 stm-2.4.4.1 syb-0.7 tagged-0.8.5
                      tasty-0.11.3 tasty-hunit-0.9.2 template-haskell-2.12.0.0
                      text-1.2.2.2 th-desugar-1.7 th-expand-syns-0.4.3.0 th-lift-0.7.7
                      th-lift-instances-0.1.11 th-orphans-0.13.4 th-reify-many-0.1.8
                      transformers-0.5.2.0 unbounded-delays-0.1.1.0 unix-2.7.2.2
                      vector-0.12.0.1
orphans: reflection-2.1.2:Data.Reflection
         singletons-2.3.1:Data.Singletons.TypeLits
         singletons-2.3.1:Data.Singletons.TypeLits.Internal
         singletons-2.3.1:Data.Singletons.Prelude.Instances
         singletons-2.3.1:Data.Singletons.Decide
         th-orphans-0.13.4:Language.Haskell.TH.Instances
         th-lift-instances-0.1.11:Instances.TH.Lift
         th-lift-0.7.7:Language.Haskell.TH.Lift
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         syb-0.7:Data.Generics.Instances stm-2.4.4.1:Control.Monad.STM
         regex-tdfa-1.2.2:Text.Regex.TDFA.ByteString
         regex-tdfa-1.2.2:Text.Regex.TDFA.ByteString.Lazy
         regex-tdfa-1.2.2:Text.Regex.TDFA.Sequence
         regex-tdfa-1.2.2:Text.Regex.TDFA.String text-1.2.2.2:Data.Text.Lazy
         text-1.2.2.2:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.2.2:Data.Text.Show
         transformers-0.5.2.0:Control.Monad.Trans.Error
         regex-base-0.93.2:Text.Regex.Base.Context colour-2.3.4:Data.Colour
         base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Complex base-4.10.1.0:Data.Either
                         base-4.10.1.0:Data.Functor.Compose base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats clock-0.7.2:System.Clock
                         containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         ghc-boot-th-8.2.2:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.2.2:GHC.LanguageExtensions.Type
                         inline-r-0.9.0.2:Control.Memory.Region
                         inline-r-0.9.0.2:Data.Vector.SEXP inline-r-0.9.0.2:Foreign.R.Type
                         inline-r-0.9.0.2:Language.R.Instance
                         inline-r-0.9.0.2:Language.R.Matcher
                         pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0:Control.Monad.Primitive
                         primitive-0.6.2.0:Data.Primitive.Array
                         singletons-2.3.1:Data.Singletons
                         singletons-2.3.1:Data.Singletons.Prelude.Bool
                         singletons-2.3.1:Data.Singletons.Prelude.Eq
                         singletons-2.3.1:Data.Singletons.Prelude.Instances
                         singletons-2.3.1:Data.Singletons.Prelude.Num
                         singletons-2.3.1:Data.Singletons.Prelude.Ord
                         singletons-2.3.1:Data.Singletons.Syntax
                         singletons-2.3.1:Data.Singletons.TypeLits
                         singletons-2.3.1:Data.Singletons.TypeLits.Internal
                         tagged-0.8.5:Data.Tagged tasty-0.11.3:Test.Tasty.Core
                         template-haskell-2.12.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2:Data.Text text-1.2.2.2:Data.Text.Lazy
                         th-desugar-1.7:Language.Haskell.TH.Desugar.Core
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.10.1.0:Control.Applicative 99577a9c463ffe4790a1d37547a345bd
import  -/  base-4.10.1.0:Data.Either d7dae5d9bf298dee616e465c14b5d60e
import  -/  base-4.10.1.0:Data.Int e234a0a6d2a21ac9385a90eec01cbcae
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.IO.Unsafe 0aa7e5adc396c9f651baef415ce018da
import  -/  base-4.10.1.0:GHC.Int f3b679d79c8ad65bf2b736aa9628303f
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  inline-r-0.9.0.2:Control.Monad.R.Class e5a0c4056d91754aa90b5adf4bc59248
import  -/  inline-r-0.9.0.2:Foreign.R 51460710da704a1aff942901939ab83a
import  -/  inline-r-0.9.0.2:Foreign.R.Internal 0950ef2cc999f128080e9690ff115a12
import  -/  inline-r-0.9.0.2:Foreign.R.Type c66cc062d80b456888eb0e05aa6a4002
import  -/  inline-r-0.9.0.2:H.Prelude e36d2c9f12de64ccb9a431bc0e48e285
import  -/  inline-r-0.9.0.2:Language.R e598fe485b33abac7367c6e28d8b9814
import  -/  inline-r-0.9.0.2:Language.R.Globals 6466af466952ec50029e279d952209f8
import  -/  inline-r-0.9.0.2:Language.R.Instance 7c21de0bbc964770a1fa7d8ec3cc550d
import  -/  inline-r-0.9.0.2:Language.R.Literal ad8f87454366c7ad983921c1f51fd824
import  -/  inline-r-0.9.0.2:Language.R.Matcher 9fefc6919a78fd5d1d54005d38565026
import  -/  inline-r-0.9.0.2:Language.R.QQ 1885758794873fa7a90ccf5c301146fd
import  -/  tasty-0.11.3:Test.Tasty fd7a7d678fb037373a84e0d2c94ba977
import  -/  tasty-0.11.3:Test.Tasty.Core ad38a7bfdd07cb983b46499179f5feea
import  -/  tasty-hunit-0.9.2:Test.Tasty.HUnit e2c91e2e2a1aa9764fce15de0bdca332
import  -/  tasty-hunit-0.9.2:Test.Tasty.HUnit.Orig cabfe6febc3dd1bdd12e76f191fca3cf
37aeafc0bcd19408577a9ec8f9e0875d
  $s$fShow[] :: GHC.Show.Show [GHC.Int.Int32]
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Int.Int32]
                  (\ (ds :: GHC.Types.Int) -> GHC.Int.$fShowInt32_$cshowList)
                  (\ (x :: [GHC.Int.Int32]) ->
                   GHC.Show.showList__
                     @ GHC.Int.Int32
                     GHC.Int.$fShowInt2
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [[GHC.Int.Int32]]) (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ [GHC.Int.Int32]
                     GHC.Int.$fShowInt32_$cshowList
                     ls
                     s) -}
d8e901750cb9dd0bbe0eb40f90d62e67
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Test.Matcher.$trModule3
                   Test.Matcher.$trModule1) -}
6ff998514dabdb0429ac9e28f1196e7b
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Test.Matcher.$trModule2) -}
dd404d5c094192962d0ec81550baefbf
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Test.Matcher"#) -}
2902e5c1db0a536ec00c8b278475714f
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Test.Matcher.$trModule4) -}
49c4f4304c0d600fc953628a1be6dd90
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
bb317953a30e2bfb8d6ec0964855448f
  tests :: Test.Tasty.Core.TestTree
  {- Strictness: m2,
     Unfolding: (Test.Tasty.Core.TestGroup
                   Test.Matcher.tests131
                   Test.Matcher.tests1) -}
71d89c2274fb87e964e4cf94917e93dc
  tests1 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Test.Matcher.tests119
                   Test.Matcher.tests2) -}
d91bbdfe0ccba2b00fe0f937dcf9ba46
  tests10 :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Test.Matcher.tests25
                   Test.Matcher.tests11
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
3a7c76fb7dfb03c57d1bc7ef0340ffbf
  tests100 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests101) -}
35c430117b46307b604c8a10c1771113
  tests101 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("function(){ x <- matrix(c(1:10)); class(x) <- \"shmatrix\"; x }"#) -}
d2f2b0164e88aface4b66b41e9b5245c
  tests102 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests103) -}
d02230b8565fae46ed47668b264bb640
  tests103 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("s3: matches matrix"#) -}
7037328fcea98d49161768f7f4dd4138
  tests104 :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Test.Matcher.tests117
                   Test.Matcher.tests105
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
c21e0a96f787a97e19f5482cad993fc0
  tests105 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.getMaskingState# s of ds { (#,#) ipv ipv1 ->
                 case ipv1 of ds1 {
                   DEFAULT
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Language.R.Instance.runRegion3
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ GHC.Types.Bool
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskAsyncExceptions#
                                @ GHC.Types.Bool
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Test.Matcher.tests107
                                        (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                          `cast`
                                        (Trans
                                             (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                             (Nth:2
                                                  (Trans
                                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                 <*>_N
                                                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                                                 <GHC.Types.IO>_R
                                                                 <GHC.Types.Bool>_N))
                                                       (Nth:3
                                                            (Nth:3
                                                                 (Trans
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  GHC.Types.Bool>_R
                                                                       ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                <*>_N
                                                                                <GHC.IORef.IORef
                                                                                   GHC.Types.Int>_R
                                                                                <GHC.Types.IO>_R
                                                                                <GHC.Types.Bool>_N)
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  GHC.Types.Bool>_R
                                                                       ->_R <GHC.IORef.IORef
                                                                               GHC.Types.Int>_R
                                                                       ->_R GHC.Types.N:IO[0]
                                                                                <GHC.Types.Bool>_R)))))))
                                        s1 of ds3 { (#,#) ipv4 ipv5 ->
                                 case ipv5 of ds4 { DEFAULT -> ds3 } }))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.readMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv3
                                     s1 of ds3 { (#,#) ipv4 ipv5 ->
                              case ipv5 of wild { GHC.Types.I# x# ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld #)}
                                     (GHC.Prim.narrow32Int# x#)
                                     ipv4 of wild1 { Unit# ds4 ->
                              GHC.Prim.raiseIO#
                                @ GHC.Exception.SomeException
                                @ GHC.Types.Bool
                                e1
                                ds4 } } })
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             ipv3
                             ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                      case ipv8 of wild { GHC.Types.I# x# ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld #)}
                             (GHC.Prim.narrow32Int# x#)
                             ipv7 of wild1 { Unit# ds5 ->
                      case ipv5 of wild2 {
                        GHC.Types.False
                        -> case Test.Matcher.tests70 ds5
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True
                        -> (# ds5, GHC.Types.[] @ GHC.Types.Char #) } } } } } }
                   0#
                   -> case GHC.Prim.maskAsyncExceptions#
                             @ GHC.Types.Bool
                             Test.Matcher.tests106
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ipv3 of wild {
                        GHC.Types.False
                        -> case Test.Matcher.tests70 ipv2
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True -> (# ipv2, GHC.Types.[] @ GHC.Types.Char #) } }
                   1#
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Language.R.Instance.runRegion3
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ GHC.Types.Bool
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskUninterruptible#
                                @ GHC.Types.Bool
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Test.Matcher.tests107
                                        (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                          `cast`
                                        (Trans
                                             (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                             (Nth:2
                                                  (Trans
                                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                 <*>_N
                                                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                                                 <GHC.Types.IO>_R
                                                                 <GHC.Types.Bool>_N))
                                                       (Nth:3
                                                            (Nth:3
                                                                 (Trans
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  GHC.Types.Bool>_R
                                                                       ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                <*>_N
                                                                                <GHC.IORef.IORef
                                                                                   GHC.Types.Int>_R
                                                                                <GHC.Types.IO>_R
                                                                                <GHC.Types.Bool>_N)
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  GHC.Types.Bool>_R
                                                                       ->_R <GHC.IORef.IORef
                                                                               GHC.Types.Int>_R
                                                                       ->_R GHC.Types.N:IO[0]
                                                                                <GHC.Types.Bool>_R)))))))
                                        s1 of ds3 { (#,#) ipv4 ipv5 ->
                                 case ipv5 of ds4 { DEFAULT -> ds3 } }))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.readMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv3
                                     s1 of ds3 { (#,#) ipv4 ipv5 ->
                              case ipv5 of wild { GHC.Types.I# x# ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld #)}
                                     (GHC.Prim.narrow32Int# x#)
                                     ipv4 of wild1 { Unit# ds4 ->
                              GHC.Prim.raiseIO#
                                @ GHC.Exception.SomeException
                                @ GHC.Types.Bool
                                e1
                                ds4 } } })
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             ipv3
                             ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                      case ipv8 of wild { GHC.Types.I# x# ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld #)}
                             (GHC.Prim.narrow32Int# x#)
                             ipv7 of wild1 { Unit# ds5 ->
                      case ipv5 of wild2 {
                        GHC.Types.False
                        -> case Test.Matcher.tests70 ds5
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True
                        -> (# ds5, GHC.Types.[] @ GHC.Types.Char #) } } } } } } } }) -}
b1822f4402419fa2144afc521c130e16
  tests106 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newMutVar#
                        @ GHC.Types.Int
                        @ GHC.Prim.RealWorld
                        Language.R.Instance.runRegion3
                        s1 of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.catch#
                        @ GHC.Types.Bool
                        @ GHC.Exception.SomeException
                        (GHC.Prim.unmaskAsyncExceptions#
                           @ GHC.Types.Bool
                           (\ (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                            case Test.Matcher.tests107
                                   (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                     `cast`
                                   (Trans
                                        (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                        (Nth:2
                                             (Trans
                                                  (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                            <*>_N
                                                            <GHC.IORef.IORef GHC.Types.Int>_R
                                                            <GHC.Types.IO>_R
                                                            <GHC.Types.Bool>_N))
                                                  (Nth:3
                                                       (Nth:3
                                                            (Trans
                                                                 (<Control.Monad.Trans.Reader.ReaderT
                                                                     (GHC.IORef.IORef GHC.Types.Int)
                                                                     GHC.Types.IO
                                                                     (Foreign.R.Internal.SomeSEXP
                                                                        GHC.Types.Any)>_R
                                                                  ->_R <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any
                                                                        -> Control.Monad.Trans.Reader.ReaderT
                                                                             (GHC.IORef.IORef
                                                                                GHC.Types.Int)
                                                                             GHC.Types.IO
                                                                             GHC.Types.Bool>_R
                                                                  ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                           <*>_N
                                                                           <GHC.IORef.IORef
                                                                              GHC.Types.Int>_R
                                                                           <GHC.Types.IO>_R
                                                                           <GHC.Types.Bool>_N)
                                                                 (<Control.Monad.Trans.Reader.ReaderT
                                                                     (GHC.IORef.IORef GHC.Types.Int)
                                                                     GHC.Types.IO
                                                                     (Foreign.R.Internal.SomeSEXP
                                                                        GHC.Types.Any)>_R
                                                                  ->_R <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any
                                                                        -> Control.Monad.Trans.Reader.ReaderT
                                                                             (GHC.IORef.IORef
                                                                                GHC.Types.Int)
                                                                             GHC.Types.IO
                                                                             GHC.Types.Bool>_R
                                                                  ->_R <GHC.IORef.IORef
                                                                          GHC.Types.Int>_R
                                                                  ->_R GHC.Types.N:IO[0]
                                                                           <GHC.Types.Bool>_R)))))))
                                   s2 of ds3 { (#,#) ipv4 ipv5 ->
                            case ipv5 of ds1 { DEFAULT -> ds3 } }))
                        (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                           (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.readMutVar#
                                @ GHC.Prim.RealWorld
                                @ GHC.Types.Int
                                ipv3
                                s2 of ds3 { (#,#) ipv4 ipv5 ->
                         case ipv5 of wild { GHC.Types.I# x# ->
                         case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                                               -> (# GHC.Prim.State#
                                                                       GHC.Prim.RealWorld #)}
                                (GHC.Prim.narrow32Int# x#)
                                ipv4 of wild1 { Unit# ds4 ->
                         GHC.Prim.raiseIO#
                           @ GHC.Exception.SomeException
                           @ GHC.Types.Bool
                           e1
                           ds4 } } })
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        ipv3
                        ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                 case ipv8 of wild { GHC.Types.I# x# ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        (GHC.Prim.narrow32Int# x#)
                        ipv7 of wild1 { Unit# ds5 ->
                 (# ds5, ipv5 #) } } } } }) -}
0bbfdd6e49c2384234f3d508974b0ed7
  tests107 ::
    GHC.IORef.IORef GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (r1 :: GHC.IORef.IORef GHC.Types.Int)[OneShot]
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Foreign.R.Internal.SomeSEXP Control.Memory.Region.V #)
                        Test.Matcher.tests114 of ds { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Foreign.R.Internal.SomeSEXP a dt ->
                 case Language.R.Globals.nilValue
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.G>_P <'Foreign.R.Type.Nil>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.G
                                 'Foreign.R.Type.Nil, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        dt
                        ds3
                        s of wild1 { (#,#) ds4 ds5 ->
                 case ((Language.R.$wevalEnv
                          @ (Language.R.Instance.R GHC.Types.Any)
                          @ Control.Memory.Region.V
                          @ 'Foreign.R.Type.Lang
                          (Language.R.Instance.$fMonadRR @ GHC.Types.Any)
                          ds5
                          Language.R.Globals.globalEnv
                            `cast`
                          (Trans
                               (Foreign.R.Internal.N:SEXP[0]
                                    <Control.Memory.Region.G>_P <'Foreign.R.Type.Env>_P)
                               (Trans
                                    (GHC.Ptr.Ptr
                                       <Language.R.HExp.HExp
                                          Control.Memory.Region.G
                                          'Foreign.R.Type.Env, Language.R.HExp.HExp
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Env>)_R
                                    (Sym (Foreign.R.Internal.N:SEXP[0]
                                              <Control.Memory.Region.V>_P
                                              <'Foreign.R.Type.Env>_P)))))
                         `cast`
                       (Trans
                            (Nth:3
                                 (Trans
                                      (<Foreign.R.Internal.SEXP
                                          Control.Memory.Region.V 'Foreign.R.Type.Lang>_R
                                       ->_R (Language.R.Instance.R
                                               <GHC.Types.Any>_P
                                               (Foreign.R.Internal.SomeSEXP
                                                  (Language.R.Instance.D:R:PrimStateR[0]
                                                       <GHC.Types.Any>_N))_N)_R)
                                      (Trans
                                           (<Foreign.R.Internal.SEXP
                                               Control.Memory.Region.V 'Foreign.R.Type.Lang>_R
                                            ->_R Language.R.Instance.N:R[0]
                                                     <GHC.Types.Any>_P <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any>_N)
                                           (Nth:2
                                                (Nth:3
                                                     (Trans
                                                          (<Control.Monad.Trans.Reader.ReaderT
                                                              (GHC.IORef.IORef GHC.Types.Int)
                                                              GHC.Types.IO
                                                              (Foreign.R.Internal.SEXP
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Lang)>_R
                                                           ->_R <Foreign.R.Internal.SEXP
                                                                   Control.Memory.Region.V
                                                                   'Foreign.R.Type.Lang
                                                                 -> Control.Monad.Trans.Reader.ReaderT
                                                                      (GHC.IORef.IORef
                                                                         GHC.Types.Int)
                                                                      GHC.Types.IO
                                                                      (Foreign.R.Internal.SomeSEXP
                                                                         GHC.Types.Any)>_R
                                                           ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                    <*>_N
                                                                    <GHC.IORef.IORef
                                                                       GHC.Types.Int>_R
                                                                    <GHC.Types.IO>_R
                                                                    <Foreign.R.Internal.SomeSEXP
                                                                       GHC.Types.Any>_N)
                                                          (<Control.Monad.Trans.Reader.ReaderT
                                                              (GHC.IORef.IORef GHC.Types.Int)
                                                              GHC.Types.IO
                                                              (Foreign.R.Internal.SEXP
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Lang)>_R
                                                           ->_R <Foreign.R.Internal.SEXP
                                                                   Control.Memory.Region.V
                                                                   'Foreign.R.Type.Lang
                                                                 -> Control.Monad.Trans.Reader.ReaderT
                                                                      (GHC.IORef.IORef
                                                                         GHC.Types.Int)
                                                                      GHC.Types.IO
                                                                      (Foreign.R.Internal.SomeSEXP
                                                                         GHC.Types.Any)>_R
                                                           ->_R <GHC.IORef.IORef GHC.Types.Int>_R
                                                           ->_R GHC.Types.N:IO[0]
                                                                    <Foreign.R.Internal.SomeSEXP
                                                                       GHC.Types.Any>_R)))))))
                            (Control.Monad.Trans.Reader.N:ReaderT[0]
                                 <*>_N
                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                 <GHC.Types.IO>_R
                                 <Foreign.R.Internal.SomeSEXP GHC.Types.Any>_N))
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP GHC.Types.Any>_R)
                        ds4 of ds1 { (#,#) ipv2 ipv3 ->
                 case ((Language.R.Matcher.attribute1
                          @ 'Foreign.R.Type.String
                          @ GHC.Types.Any
                          Language.R.Matcher.factor12
                            `cast`
                          (Sym (Foreign.R.Type.D:R:SingSEXPTYPEz0[0]) <'Foreign.R.Type.String>_N)
                          Language.R.Matcher.factor10
                          @ (Language.R.Instance.R
                               GHC.Types.Any
                               (Data.Either.Either
                                  (Language.R.Matcher.MatcherError GHC.Types.Any) GHC.Types.Bool))
                          ipv3
                          Test.Matcher.tests110
                          Test.Matcher.tests63
                            `cast`
                          (<Language.R.Matcher.MatcherError GHC.Types.Any>_R
                           ->_R Trans
                                    (<GHC.IORef.IORef GHC.Types.Int>_R
                                     ->_R Sym (GHC.Types.N:IO[0]
                                                   <Data.Either.Either
                                                      (Language.R.Matcher.MatcherError
                                                         GHC.Types.Any)
                                                      GHC.Types.Bool>_R))
                                    (Trans
                                         (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                   <*>_N
                                                   <GHC.IORef.IORef GHC.Types.Int>_R
                                                   <GHC.Types.IO>_R
                                                   <Data.Either.Either
                                                      (Language.R.Matcher.MatcherError
                                                         GHC.Types.Any)
                                                      GHC.Types.Bool>_N))
                                         (Sym (Language.R.Instance.N:R[0]
                                                   <GHC.Types.Any>_P) <Data.Either.Either
                                                                         (Language.R.Matcher.MatcherError
                                                                            GHC.Types.Any)
                                                                         GHC.Types.Bool>_N))))
                         `cast`
                       (Trans
                            (Language.R.Instance.N:R[0] <GHC.Types.Any>_P <Data.Either.Either
                                                                             (Language.R.Matcher.MatcherError
                                                                                GHC.Types.Any)
                                                                             GHC.Types.Bool>_N)
                            (Trans
                                 (Nth:2
                                      (Trans
                                           (<Control.Monad.Trans.Reader.ReaderT
                                               (GHC.IORef.IORef GHC.Types.Int)
                                               GHC.Types.IO
                                               (Data.Either.Either
                                                  (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                  GHC.Types.Bool)>_R
                                            ->_R <Data.Either.Either
                                                    (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                    GHC.Types.Bool
                                                  -> Control.Monad.Trans.Reader.ReaderT
                                                       (GHC.IORef.IORef GHC.Types.Int)
                                                       GHC.Types.IO
                                                       GHC.Types.Bool>_R
                                            ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                     <*>_N
                                                     <GHC.IORef.IORef GHC.Types.Int>_R
                                                     <GHC.Types.IO>_R
                                                     <GHC.Types.Bool>_N)
                                           (<Control.Monad.Trans.Reader.ReaderT
                                               (GHC.IORef.IORef GHC.Types.Int)
                                               GHC.Types.IO
                                               (Data.Either.Either
                                                  (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                  GHC.Types.Bool)>_R
                                            ->_R <Data.Either.Either
                                                    (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                    GHC.Types.Bool
                                                  -> Control.Monad.Trans.Reader.ReaderT
                                                       (GHC.IORef.IORef GHC.Types.Int)
                                                       GHC.Types.IO
                                                       GHC.Types.Bool>_R
                                            ->_R <GHC.IORef.IORef GHC.Types.Int>_R
                                            ->_R GHC.Types.N:IO[0] <GHC.Types.Bool>_R)))
                                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                                      <*>_N
                                      <GHC.IORef.IORef GHC.Types.Int>_R
                                      <GHC.Types.IO>_R
                                      <Data.Either.Either
                                         (Language.R.Matcher.MatcherError GHC.Types.Any)
                                         GHC.Types.Bool>_N)))
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <Data.Either.Either
                              (Language.R.Matcher.MatcherError GHC.Types.Any) GHC.Types.Bool>_R)
                        ipv2 of ds7 { (#,#) ipv4 ipv5 ->
                 case ipv5 of wild2 {
                   Data.Either.Left ipv6
                   -> (GHC.Magic.noinline
                         @ (forall a1. [GHC.Types.Char] -> GHC.Types.IO a1)
                         GHC.IO.failIO1
                           `cast`
                         (forall (a1 :: <*>_N).
                          <GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <a1>_R))
                         @ GHC.Types.Bool
                         Test.Matcher.tests108)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)
                        ipv4
                   Data.Either.Right t -> (# ipv4, t #) } } } } } } }) -}
8363bd3664cd867f63f385acc8519571
  tests108 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests109) -}
b8e646bc70178caba53b8d919910785e
  tests109 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Pattern match failure in do expression at tests/Test/Matcher.hs:26:8-14"#) -}
e7814d514a0b1b11f19cf45094fe5cad
  tests11 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.getMaskingState# s of ds { (#,#) ipv ipv1 ->
                 case ipv1 of ds1 {
                   DEFAULT
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Language.R.Instance.runRegion3
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ [[GHC.Types.Char]]
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskAsyncExceptions#
                                @ [[GHC.Types.Char]]
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Test.Matcher.tests13
                                        (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                          `cast`
                                        (Trans
                                             (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                             (Nth:2
                                                  (Trans
                                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                 <*>_N
                                                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                                                 <GHC.Types.IO>_R
                                                                 <[[GHC.Types.Char]]>_N))
                                                       (Nth:3
                                                            (Nth:3
                                                                 (Trans
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  [[GHC.Types.Char]]>_R
                                                                       ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                <*>_N
                                                                                <GHC.IORef.IORef
                                                                                   GHC.Types.Int>_R
                                                                                <GHC.Types.IO>_R
                                                                                <[[GHC.Types.Char]]>_N)
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  [[GHC.Types.Char]]>_R
                                                                       ->_R <GHC.IORef.IORef
                                                                               GHC.Types.Int>_R
                                                                       ->_R GHC.Types.N:IO[0]
                                                                                <[[GHC.Types.Char]]>_R)))))))
                                        s1 of ds3 { (#,#) ipv4 ipv5 ->
                                 case Test.Matcher.tests_go ipv5 of wild { () -> ds3 } }))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.readMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv3
                                     s1 of ds3 { (#,#) ipv4 ipv5 ->
                              case ipv5 of wild { GHC.Types.I# x# ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld #)}
                                     (GHC.Prim.narrow32Int# x#)
                                     ipv4 of wild1 { Unit# ds4 ->
                              GHC.Prim.raiseIO#
                                @ GHC.Exception.SomeException
                                @ [[GHC.Types.Char]]
                                e1
                                ds4 } } })
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             ipv3
                             ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                      case ipv8 of wild { GHC.Types.I# x# ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld #)}
                             (GHC.Prim.narrow32Int# x#)
                             ipv7 of wild1 { Unit# ds5 ->
                      case GHC.Classes.$fEq[]_$s$c==1
                             ipv5
                             Test.Matcher.tests22 of wild2 {
                        GHC.Types.False
                        -> case Test.Matcher.tests21 ipv5 ds5
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True
                        -> (# ds5, GHC.Types.[] @ GHC.Types.Char #) } } } } } }
                   0#
                   -> case GHC.Prim.maskAsyncExceptions#
                             @ [[GHC.Types.Char]]
                             Test.Matcher.tests12
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Classes.$fEq[]_$s$c==1 ipv3 Test.Matcher.tests22 of wild {
                        GHC.Types.False
                        -> case Test.Matcher.tests21 ipv3 ipv2
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True -> (# ipv2, GHC.Types.[] @ GHC.Types.Char #) } }
                   1#
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Language.R.Instance.runRegion3
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ [[GHC.Types.Char]]
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskUninterruptible#
                                @ [[GHC.Types.Char]]
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Test.Matcher.tests13
                                        (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                          `cast`
                                        (Trans
                                             (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                             (Nth:2
                                                  (Trans
                                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                 <*>_N
                                                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                                                 <GHC.Types.IO>_R
                                                                 <[[GHC.Types.Char]]>_N))
                                                       (Nth:3
                                                            (Nth:3
                                                                 (Trans
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  [[GHC.Types.Char]]>_R
                                                                       ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                <*>_N
                                                                                <GHC.IORef.IORef
                                                                                   GHC.Types.Int>_R
                                                                                <GHC.Types.IO>_R
                                                                                <[[GHC.Types.Char]]>_N)
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  [[GHC.Types.Char]]>_R
                                                                       ->_R <GHC.IORef.IORef
                                                                               GHC.Types.Int>_R
                                                                       ->_R GHC.Types.N:IO[0]
                                                                                <[[GHC.Types.Char]]>_R)))))))
                                        s1 of ds3 { (#,#) ipv4 ipv5 ->
                                 case Test.Matcher.tests_go ipv5 of wild { () -> ds3 } }))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.readMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv3
                                     s1 of ds3 { (#,#) ipv4 ipv5 ->
                              case ipv5 of wild { GHC.Types.I# x# ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld #)}
                                     (GHC.Prim.narrow32Int# x#)
                                     ipv4 of wild1 { Unit# ds4 ->
                              GHC.Prim.raiseIO#
                                @ GHC.Exception.SomeException
                                @ [[GHC.Types.Char]]
                                e1
                                ds4 } } })
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             ipv3
                             ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                      case ipv8 of wild { GHC.Types.I# x# ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld #)}
                             (GHC.Prim.narrow32Int# x#)
                             ipv7 of wild1 { Unit# ds5 ->
                      case GHC.Classes.$fEq[]_$s$c==1
                             ipv5
                             Test.Matcher.tests22 of wild2 {
                        GHC.Types.False
                        -> case Test.Matcher.tests21 ipv5 ds5
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True
                        -> (# ds5, GHC.Types.[] @ GHC.Types.Char #) } } } } } } } }) -}
2afab4368b9dae54e24711aee82ffb62
  tests110 ::
    Foreign.R.Internal.SEXP GHC.Types.Any 'Foreign.R.Type.String
    -> Language.R.Instance.R
         GHC.Types.Any
         (Data.Either.Either
            (Language.R.Matcher.MatcherError GHC.Types.Any) GHC.Types.Bool)
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: (\ (o :: Foreign.R.Internal.SEXP
                           GHC.Types.Any 'Foreign.R.Type.String)[OneShot] ->
                 case o `cast`
                      (Foreign.R.Internal.N:SEXP[0]
                           <GHC.Types.Any>_P
                           <'Foreign.R.Type.String>_P) of ww { GHC.Ptr.Ptr ww1 ->
                 case GHC.Classes.$fEq[]_$s$c==1
                        Test.Matcher.tests111
                        (Language.R.Matcher.$wcharList @ GHC.Types.Any ww1) of wild {
                   GHC.Types.False
                   -> Test.Matcher.tests97
                        `cast`
                      (Trans
                           (<GHC.IORef.IORef GHC.Types.Int>_R
                            ->_R Sym (GHC.Types.N:IO[0]
                                          <Data.Either.Either
                                             (Language.R.Matcher.MatcherError GHC.Types.Any)
                                             GHC.Types.Bool>_R))
                           (Trans
                                (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                          <*>_N
                                          <GHC.IORef.IORef GHC.Types.Int>_R
                                          <GHC.Types.IO>_R
                                          <Data.Either.Either
                                             (Language.R.Matcher.MatcherError GHC.Types.Any)
                                             GHC.Types.Bool>_N))
                                (Sym (Language.R.Instance.N:R[0]
                                          <GHC.Types.Any>_P) <Data.Either.Either
                                                                (Language.R.Matcher.MatcherError
                                                                   GHC.Types.Any)
                                                                GHC.Types.Bool>_N)))
                   GHC.Types.True
                   -> Test.Matcher.tests98
                        `cast`
                      (Trans
                           (<GHC.IORef.IORef GHC.Types.Int>_R
                            ->_R Sym (GHC.Types.N:IO[0]
                                          <Data.Either.Either
                                             (Language.R.Matcher.MatcherError GHC.Types.Any)
                                             GHC.Types.Bool>_R))
                           (Trans
                                (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                          <*>_N
                                          <GHC.IORef.IORef GHC.Types.Int>_R
                                          <GHC.Types.IO>_R
                                          <Data.Either.Either
                                             (Language.R.Matcher.MatcherError GHC.Types.Any)
                                             GHC.Types.Bool>_N))
                                (Sym (Language.R.Instance.N:R[0]
                                          <GHC.Types.Any>_P) <Data.Either.Either
                                                                (Language.R.Matcher.MatcherError
                                                                   GHC.Types.Any)
                                                                GHC.Types.Bool>_N))) } }) -}
734a7ef54aef3d718ad01a793fd6cb81
  tests111 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Test.Matcher.tests112
                   (GHC.Types.[] @ GHC.Base.String)) -}
b24fd1b70aa42c3f73db16e1058c9c3e
  tests112 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests113) -}
43f71c49f9af8aa01bce757facf9a4c1
  tests113 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("matrix"#) -}
e5b0fc2e71b3539e1998ebf63e696e7e
  tests114 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP Control.Memory.Region.V #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.noDuplicate#
                        @ GHC.Prim.RealWorld
                        s of s' { DEFAULT ->
                 case Language.R.QQ.parse1
                        Test.Matcher.tests115
                        s' of ds1 { (#,#) ipv ipv1 ->
                 case ipv1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.V>_P <'Foreign.R.Type.Expr>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.V
                                 'Foreign.R.Type.Expr, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds2 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        ds2
                        0#
                        ipv of wild1 { (#,#) ds3 ds4 ->
                 case Language.R.Globals.globalEnv
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.G>_P <'Foreign.R.Type.Env>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.G
                                 'Foreign.R.Type.Env, Foreign.R.Internal.SEXPREC>)_R) of ds5 { GHC.Ptr.Ptr ds6 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        ds4
                        ds6
                        ds3 of wild { (#,#) ds7 ds8 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        ds8
                        ds7 of wild2 { Unit# ds9 ->
                 (# ds9,
                    Foreign.R.Internal.SomeSEXP
                      @ Control.Memory.Region.V
                      @ GHC.Types.Any
                      ds8 #) } } } } } } }) -}
f9b1ad2318713606fee7b3c54d1d99ed
  tests115 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests116) -}
dec219201ca79a6b0a0e8ff0e04ef0a2
  tests116 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("function(){ c(1:10) }"#) -}
b993fb1f9f26c914b0f8c4a86d781b5c
  tests117 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests118) -}
eeec2e695fc40d6411e746911f9e8b7f
  tests118 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("s3: pass non s3"#) -}
b2dc2923df5243979f206e0252eff8c3
  tests119 :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Test.Matcher.tests129
                   Test.Matcher.tests120
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
1733fa8d077c522f4369542a8d0db051
  tests12 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [[GHC.Types.Char]] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newMutVar#
                        @ GHC.Types.Int
                        @ GHC.Prim.RealWorld
                        Language.R.Instance.runRegion3
                        s1 of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.catch#
                        @ [[GHC.Types.Char]]
                        @ GHC.Exception.SomeException
                        (GHC.Prim.unmaskAsyncExceptions#
                           @ [[GHC.Types.Char]]
                           (\ (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                            case Test.Matcher.tests13
                                   (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                     `cast`
                                   (Trans
                                        (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                        (Nth:2
                                             (Trans
                                                  (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                            <*>_N
                                                            <GHC.IORef.IORef GHC.Types.Int>_R
                                                            <GHC.Types.IO>_R
                                                            <[[GHC.Types.Char]]>_N))
                                                  (Nth:3
                                                       (Nth:3
                                                            (Trans
                                                                 (<Control.Monad.Trans.Reader.ReaderT
                                                                     (GHC.IORef.IORef GHC.Types.Int)
                                                                     GHC.Types.IO
                                                                     (Foreign.R.Internal.SomeSEXP
                                                                        GHC.Types.Any)>_R
                                                                  ->_R <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any
                                                                        -> Control.Monad.Trans.Reader.ReaderT
                                                                             (GHC.IORef.IORef
                                                                                GHC.Types.Int)
                                                                             GHC.Types.IO
                                                                             [[GHC.Types.Char]]>_R
                                                                  ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                           <*>_N
                                                                           <GHC.IORef.IORef
                                                                              GHC.Types.Int>_R
                                                                           <GHC.Types.IO>_R
                                                                           <[[GHC.Types.Char]]>_N)
                                                                 (<Control.Monad.Trans.Reader.ReaderT
                                                                     (GHC.IORef.IORef GHC.Types.Int)
                                                                     GHC.Types.IO
                                                                     (Foreign.R.Internal.SomeSEXP
                                                                        GHC.Types.Any)>_R
                                                                  ->_R <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any
                                                                        -> Control.Monad.Trans.Reader.ReaderT
                                                                             (GHC.IORef.IORef
                                                                                GHC.Types.Int)
                                                                             GHC.Types.IO
                                                                             [[GHC.Types.Char]]>_R
                                                                  ->_R <GHC.IORef.IORef
                                                                          GHC.Types.Int>_R
                                                                  ->_R GHC.Types.N:IO[0]
                                                                           <[[GHC.Types.Char]]>_R)))))))
                                   s2 of ds3 { (#,#) ipv4 ipv5 ->
                            case Test.Matcher.tests_go ipv5 of wild { () -> ds3 } }))
                        (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                           (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.readMutVar#
                                @ GHC.Prim.RealWorld
                                @ GHC.Types.Int
                                ipv3
                                s2 of ds3 { (#,#) ipv4 ipv5 ->
                         case ipv5 of wild { GHC.Types.I# x# ->
                         case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                                               -> (# GHC.Prim.State#
                                                                       GHC.Prim.RealWorld #)}
                                (GHC.Prim.narrow32Int# x#)
                                ipv4 of wild1 { Unit# ds4 ->
                         GHC.Prim.raiseIO#
                           @ GHC.Exception.SomeException
                           @ [[GHC.Types.Char]]
                           e1
                           ds4 } } })
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        ipv3
                        ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                 case ipv8 of wild { GHC.Types.I# x# ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        (GHC.Prim.narrow32Int# x#)
                        ipv7 of wild1 { Unit# ds5 ->
                 (# ds5, ipv5 #) } } } } }) -}
54950c20c2b22080397d15e7f50cf605
  tests120 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.getMaskingState# s of ds { (#,#) ipv ipv1 ->
                 case ipv1 of ds1 {
                   DEFAULT
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Language.R.Instance.runRegion3
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ GHC.Types.Bool
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskAsyncExceptions#
                                @ GHC.Types.Bool
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Test.Matcher.tests122
                                        (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                          `cast`
                                        (Trans
                                             (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                             (Nth:2
                                                  (Trans
                                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                 <*>_N
                                                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                                                 <GHC.Types.IO>_R
                                                                 <GHC.Types.Bool>_N))
                                                       (Nth:3
                                                            (Nth:3
                                                                 (Trans
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  GHC.Types.Bool>_R
                                                                       ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                <*>_N
                                                                                <GHC.IORef.IORef
                                                                                   GHC.Types.Int>_R
                                                                                <GHC.Types.IO>_R
                                                                                <GHC.Types.Bool>_N)
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  GHC.Types.Bool>_R
                                                                       ->_R <GHC.IORef.IORef
                                                                               GHC.Types.Int>_R
                                                                       ->_R GHC.Types.N:IO[0]
                                                                                <GHC.Types.Bool>_R)))))))
                                        s1 of ds3 { (#,#) ipv4 ipv5 ->
                                 case ipv5 of ds4 { DEFAULT -> ds3 } }))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.readMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv3
                                     s1 of ds3 { (#,#) ipv4 ipv5 ->
                              case ipv5 of wild { GHC.Types.I# x# ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld #)}
                                     (GHC.Prim.narrow32Int# x#)
                                     ipv4 of wild1 { Unit# ds4 ->
                              GHC.Prim.raiseIO#
                                @ GHC.Exception.SomeException
                                @ GHC.Types.Bool
                                e1
                                ds4 } } })
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             ipv3
                             ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                      case ipv8 of wild { GHC.Types.I# x# ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld #)}
                             (GHC.Prim.narrow32Int# x#)
                             ipv7 of wild1 { Unit# ds5 ->
                      case ipv5 of wild2 {
                        GHC.Types.False
                        -> case Test.Matcher.tests70 ds5
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True
                        -> (# ds5, GHC.Types.[] @ GHC.Types.Char #) } } } } } }
                   0#
                   -> case GHC.Prim.maskAsyncExceptions#
                             @ GHC.Types.Bool
                             Test.Matcher.tests121
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ipv3 of wild {
                        GHC.Types.False
                        -> case Test.Matcher.tests70 ipv2
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True -> (# ipv2, GHC.Types.[] @ GHC.Types.Char #) } }
                   1#
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Language.R.Instance.runRegion3
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ GHC.Types.Bool
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskUninterruptible#
                                @ GHC.Types.Bool
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Test.Matcher.tests122
                                        (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                          `cast`
                                        (Trans
                                             (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                             (Nth:2
                                                  (Trans
                                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                 <*>_N
                                                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                                                 <GHC.Types.IO>_R
                                                                 <GHC.Types.Bool>_N))
                                                       (Nth:3
                                                            (Nth:3
                                                                 (Trans
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  GHC.Types.Bool>_R
                                                                       ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                <*>_N
                                                                                <GHC.IORef.IORef
                                                                                   GHC.Types.Int>_R
                                                                                <GHC.Types.IO>_R
                                                                                <GHC.Types.Bool>_N)
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  GHC.Types.Bool>_R
                                                                       ->_R <GHC.IORef.IORef
                                                                               GHC.Types.Int>_R
                                                                       ->_R GHC.Types.N:IO[0]
                                                                                <GHC.Types.Bool>_R)))))))
                                        s1 of ds3 { (#,#) ipv4 ipv5 ->
                                 case ipv5 of ds4 { DEFAULT -> ds3 } }))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.readMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv3
                                     s1 of ds3 { (#,#) ipv4 ipv5 ->
                              case ipv5 of wild { GHC.Types.I# x# ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld #)}
                                     (GHC.Prim.narrow32Int# x#)
                                     ipv4 of wild1 { Unit# ds4 ->
                              GHC.Prim.raiseIO#
                                @ GHC.Exception.SomeException
                                @ GHC.Types.Bool
                                e1
                                ds4 } } })
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             ipv3
                             ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                      case ipv8 of wild { GHC.Types.I# x# ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld #)}
                             (GHC.Prim.narrow32Int# x#)
                             ipv7 of wild1 { Unit# ds5 ->
                      case ipv5 of wild2 {
                        GHC.Types.False
                        -> case Test.Matcher.tests70 ds5
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True
                        -> (# ds5, GHC.Types.[] @ GHC.Types.Char #) } } } } } } } }) -}
270c542a42cdf07272c4b539427178cc
  tests121 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newMutVar#
                        @ GHC.Types.Int
                        @ GHC.Prim.RealWorld
                        Language.R.Instance.runRegion3
                        s1 of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.catch#
                        @ GHC.Types.Bool
                        @ GHC.Exception.SomeException
                        (GHC.Prim.unmaskAsyncExceptions#
                           @ GHC.Types.Bool
                           (\ (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                            case Test.Matcher.tests122
                                   (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                     `cast`
                                   (Trans
                                        (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                        (Nth:2
                                             (Trans
                                                  (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                            <*>_N
                                                            <GHC.IORef.IORef GHC.Types.Int>_R
                                                            <GHC.Types.IO>_R
                                                            <GHC.Types.Bool>_N))
                                                  (Nth:3
                                                       (Nth:3
                                                            (Trans
                                                                 (<Control.Monad.Trans.Reader.ReaderT
                                                                     (GHC.IORef.IORef GHC.Types.Int)
                                                                     GHC.Types.IO
                                                                     (Foreign.R.Internal.SomeSEXP
                                                                        GHC.Types.Any)>_R
                                                                  ->_R <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any
                                                                        -> Control.Monad.Trans.Reader.ReaderT
                                                                             (GHC.IORef.IORef
                                                                                GHC.Types.Int)
                                                                             GHC.Types.IO
                                                                             GHC.Types.Bool>_R
                                                                  ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                           <*>_N
                                                                           <GHC.IORef.IORef
                                                                              GHC.Types.Int>_R
                                                                           <GHC.Types.IO>_R
                                                                           <GHC.Types.Bool>_N)
                                                                 (<Control.Monad.Trans.Reader.ReaderT
                                                                     (GHC.IORef.IORef GHC.Types.Int)
                                                                     GHC.Types.IO
                                                                     (Foreign.R.Internal.SomeSEXP
                                                                        GHC.Types.Any)>_R
                                                                  ->_R <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any
                                                                        -> Control.Monad.Trans.Reader.ReaderT
                                                                             (GHC.IORef.IORef
                                                                                GHC.Types.Int)
                                                                             GHC.Types.IO
                                                                             GHC.Types.Bool>_R
                                                                  ->_R <GHC.IORef.IORef
                                                                          GHC.Types.Int>_R
                                                                  ->_R GHC.Types.N:IO[0]
                                                                           <GHC.Types.Bool>_R)))))))
                                   s2 of ds3 { (#,#) ipv4 ipv5 ->
                            case ipv5 of ds1 { DEFAULT -> ds3 } }))
                        (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                           (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.readMutVar#
                                @ GHC.Prim.RealWorld
                                @ GHC.Types.Int
                                ipv3
                                s2 of ds3 { (#,#) ipv4 ipv5 ->
                         case ipv5 of wild { GHC.Types.I# x# ->
                         case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                                               -> (# GHC.Prim.State#
                                                                       GHC.Prim.RealWorld #)}
                                (GHC.Prim.narrow32Int# x#)
                                ipv4 of wild1 { Unit# ds4 ->
                         GHC.Prim.raiseIO#
                           @ GHC.Exception.SomeException
                           @ GHC.Types.Bool
                           e1
                           ds4 } } })
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        ipv3
                        ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                 case ipv8 of wild { GHC.Types.I# x# ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        (GHC.Prim.narrow32Int# x#)
                        ipv7 of wild1 { Unit# ds5 ->
                 (# ds5, ipv5 #) } } } } }) -}
e523719a171a56680466ff2f7306c569
  tests122 ::
    GHC.IORef.IORef GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (r1 :: GHC.IORef.IORef GHC.Types.Int)[OneShot]
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Foreign.R.Internal.SomeSEXP Control.Memory.Region.V #)
                        Test.Matcher.tests126 of ds { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Foreign.R.Internal.SomeSEXP a dt ->
                 case Language.R.Globals.nilValue
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.G>_P <'Foreign.R.Type.Nil>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.G
                                 'Foreign.R.Type.Nil, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        dt
                        ds3
                        s of wild1 { (#,#) ds4 ds5 ->
                 case ((Language.R.$wevalEnv
                          @ (Language.R.Instance.R GHC.Types.Any)
                          @ Control.Memory.Region.V
                          @ 'Foreign.R.Type.Lang
                          (Language.R.Instance.$fMonadRR @ GHC.Types.Any)
                          ds5
                          Language.R.Globals.globalEnv
                            `cast`
                          (Trans
                               (Foreign.R.Internal.N:SEXP[0]
                                    <Control.Memory.Region.G>_P <'Foreign.R.Type.Env>_P)
                               (Trans
                                    (GHC.Ptr.Ptr
                                       <Language.R.HExp.HExp
                                          Control.Memory.Region.G
                                          'Foreign.R.Type.Env, Language.R.HExp.HExp
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Env>)_R
                                    (Sym (Foreign.R.Internal.N:SEXP[0]
                                              <Control.Memory.Region.V>_P
                                              <'Foreign.R.Type.Env>_P)))))
                         `cast`
                       (Trans
                            (Nth:3
                                 (Trans
                                      (<Foreign.R.Internal.SEXP
                                          Control.Memory.Region.V 'Foreign.R.Type.Lang>_R
                                       ->_R (Language.R.Instance.R
                                               <GHC.Types.Any>_P
                                               (Foreign.R.Internal.SomeSEXP
                                                  (Language.R.Instance.D:R:PrimStateR[0]
                                                       <GHC.Types.Any>_N))_N)_R)
                                      (Trans
                                           (<Foreign.R.Internal.SEXP
                                               Control.Memory.Region.V 'Foreign.R.Type.Lang>_R
                                            ->_R Language.R.Instance.N:R[0]
                                                     <GHC.Types.Any>_P <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any>_N)
                                           (Nth:2
                                                (Nth:3
                                                     (Trans
                                                          (<Control.Monad.Trans.Reader.ReaderT
                                                              (GHC.IORef.IORef GHC.Types.Int)
                                                              GHC.Types.IO
                                                              (Foreign.R.Internal.SEXP
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Lang)>_R
                                                           ->_R <Foreign.R.Internal.SEXP
                                                                   Control.Memory.Region.V
                                                                   'Foreign.R.Type.Lang
                                                                 -> Control.Monad.Trans.Reader.ReaderT
                                                                      (GHC.IORef.IORef
                                                                         GHC.Types.Int)
                                                                      GHC.Types.IO
                                                                      (Foreign.R.Internal.SomeSEXP
                                                                         GHC.Types.Any)>_R
                                                           ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                    <*>_N
                                                                    <GHC.IORef.IORef
                                                                       GHC.Types.Int>_R
                                                                    <GHC.Types.IO>_R
                                                                    <Foreign.R.Internal.SomeSEXP
                                                                       GHC.Types.Any>_N)
                                                          (<Control.Monad.Trans.Reader.ReaderT
                                                              (GHC.IORef.IORef GHC.Types.Int)
                                                              GHC.Types.IO
                                                              (Foreign.R.Internal.SEXP
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Lang)>_R
                                                           ->_R <Foreign.R.Internal.SEXP
                                                                   Control.Memory.Region.V
                                                                   'Foreign.R.Type.Lang
                                                                 -> Control.Monad.Trans.Reader.ReaderT
                                                                      (GHC.IORef.IORef
                                                                         GHC.Types.Int)
                                                                      GHC.Types.IO
                                                                      (Foreign.R.Internal.SomeSEXP
                                                                         GHC.Types.Any)>_R
                                                           ->_R <GHC.IORef.IORef GHC.Types.Int>_R
                                                           ->_R GHC.Types.N:IO[0]
                                                                    <Foreign.R.Internal.SomeSEXP
                                                                       GHC.Types.Any>_R)))))))
                            (Control.Monad.Trans.Reader.N:ReaderT[0]
                                 <*>_N
                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                 <GHC.Types.IO>_R
                                 <Foreign.R.Internal.SomeSEXP GHC.Types.Any>_N))
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP GHC.Types.Any>_R)
                        ds4 of ds1 { (#,#) ipv2 ipv3 ->
                 case ((Language.R.Matcher.null3
                          @ 'Foreign.R.Type.Nil
                          @ GHC.Types.Any
                          Language.R.Matcher.null2
                            `cast`
                          (Sym (Foreign.R.Type.D:R:SingSEXPTYPEz0[0]) <'Foreign.R.Type.Nil>_N)
                          @ (Language.R.Instance.R
                               GHC.Types.Any
                               (Data.Either.Either
                                  (Language.R.Matcher.MatcherError GHC.Types.Any) GHC.Types.Bool))
                          ipv3
                          Test.Matcher.tests125
                            `cast`
                          (<Foreign.R.Internal.SEXP GHC.Types.Any 'Foreign.R.Type.Nil>_R
                           ->_R Trans
                                    (<GHC.IORef.IORef GHC.Types.Int>_R
                                     ->_R Sym (GHC.Types.N:IO[0]
                                                   <Data.Either.Either
                                                      (Language.R.Matcher.MatcherError
                                                         GHC.Types.Any)
                                                      GHC.Types.Bool>_R))
                                    (Trans
                                         (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                   <*>_N
                                                   <GHC.IORef.IORef GHC.Types.Int>_R
                                                   <GHC.Types.IO>_R
                                                   <Data.Either.Either
                                                      (Language.R.Matcher.MatcherError
                                                         GHC.Types.Any)
                                                      GHC.Types.Bool>_N))
                                         (Sym (Language.R.Instance.N:R[0]
                                                   <GHC.Types.Any>_P) <Data.Either.Either
                                                                         (Language.R.Matcher.MatcherError
                                                                            GHC.Types.Any)
                                                                         GHC.Types.Bool>_N)))
                          Test.Matcher.tests79
                            `cast`
                          (<Language.R.Matcher.MatcherError GHC.Types.Any>_R
                           ->_R Trans
                                    (<GHC.IORef.IORef GHC.Types.Int>_R
                                     ->_R Sym (GHC.Types.N:IO[0]
                                                   <Data.Either.Either
                                                      (Language.R.Matcher.MatcherError
                                                         GHC.Types.Any)
                                                      GHC.Types.Bool>_R))
                                    (Trans
                                         (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                   <*>_N
                                                   <GHC.IORef.IORef GHC.Types.Int>_R
                                                   <GHC.Types.IO>_R
                                                   <Data.Either.Either
                                                      (Language.R.Matcher.MatcherError
                                                         GHC.Types.Any)
                                                      GHC.Types.Bool>_N))
                                         (Sym (Language.R.Instance.N:R[0]
                                                   <GHC.Types.Any>_P) <Data.Either.Either
                                                                         (Language.R.Matcher.MatcherError
                                                                            GHC.Types.Any)
                                                                         GHC.Types.Bool>_N))))
                         `cast`
                       (Trans
                            (Language.R.Instance.N:R[0] <GHC.Types.Any>_P <Data.Either.Either
                                                                             (Language.R.Matcher.MatcherError
                                                                                GHC.Types.Any)
                                                                             GHC.Types.Bool>_N)
                            (Trans
                                 (Nth:2
                                      (Trans
                                           (<Control.Monad.Trans.Reader.ReaderT
                                               (GHC.IORef.IORef GHC.Types.Int)
                                               GHC.Types.IO
                                               (Data.Either.Either
                                                  (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                  GHC.Types.Bool)>_R
                                            ->_R <Data.Either.Either
                                                    (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                    GHC.Types.Bool
                                                  -> Control.Monad.Trans.Reader.ReaderT
                                                       (GHC.IORef.IORef GHC.Types.Int)
                                                       GHC.Types.IO
                                                       GHC.Types.Bool>_R
                                            ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                     <*>_N
                                                     <GHC.IORef.IORef GHC.Types.Int>_R
                                                     <GHC.Types.IO>_R
                                                     <GHC.Types.Bool>_N)
                                           (<Control.Monad.Trans.Reader.ReaderT
                                               (GHC.IORef.IORef GHC.Types.Int)
                                               GHC.Types.IO
                                               (Data.Either.Either
                                                  (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                  GHC.Types.Bool)>_R
                                            ->_R <Data.Either.Either
                                                    (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                    GHC.Types.Bool
                                                  -> Control.Monad.Trans.Reader.ReaderT
                                                       (GHC.IORef.IORef GHC.Types.Int)
                                                       GHC.Types.IO
                                                       GHC.Types.Bool>_R
                                            ->_R <GHC.IORef.IORef GHC.Types.Int>_R
                                            ->_R GHC.Types.N:IO[0] <GHC.Types.Bool>_R)))
                                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                                      <*>_N
                                      <GHC.IORef.IORef GHC.Types.Int>_R
                                      <GHC.Types.IO>_R
                                      <Data.Either.Either
                                         (Language.R.Matcher.MatcherError GHC.Types.Any)
                                         GHC.Types.Bool>_N)))
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <Data.Either.Either
                              (Language.R.Matcher.MatcherError GHC.Types.Any) GHC.Types.Bool>_R)
                        ipv2 of ds7 { (#,#) ipv4 ipv5 ->
                 case ipv5 of wild2 {
                   Data.Either.Left ipv6
                   -> (GHC.Magic.noinline
                         @ (forall a1. [GHC.Types.Char] -> GHC.Types.IO a1)
                         GHC.IO.failIO1
                           `cast`
                         (forall (a1 :: <*>_N).
                          <GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <a1>_R))
                         @ GHC.Types.Bool
                         Test.Matcher.tests123)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)
                        ipv4
                   Data.Either.Right t -> (# ipv4, t #) } } } } } } }) -}
429ca3a707887d70df5f8cae1b0ad8c3
  tests123 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests124) -}
a7841fb4e19096c612b51398b32da4ea
  tests124 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Pattern match failure in do expression at tests/Test/Matcher.hs:21:10-16"#) -}
a057d9c00664189f18aae0669e39dab6
  tests125 ::
    Foreign.R.Internal.SEXP GHC.Types.Any 'Foreign.R.Type.Nil
    -> GHC.IORef.IORef GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            (Language.R.Matcher.MatcherError GHC.Types.Any) GHC.Types.Bool #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><S,U>,
     Unfolding: (\ (o :: Foreign.R.Internal.SEXP
                           GHC.Types.Any 'Foreign.R.Type.Nil)[OneShot]
                   (eta :: GHC.IORef.IORef GHC.Types.Int)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# eta1, Test.Matcher.tests64 #)) -}
7647d8175ccd407cba6f16e80c48f335
  tests126 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP Control.Memory.Region.V #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.noDuplicate#
                        @ GHC.Prim.RealWorld
                        s of s' { DEFAULT ->
                 case Language.R.QQ.parse1
                        Test.Matcher.tests127
                        s' of ds1 { (#,#) ipv ipv1 ->
                 case ipv1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.V>_P <'Foreign.R.Type.Expr>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.V
                                 'Foreign.R.Type.Expr, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds2 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        ds2
                        0#
                        ipv of wild1 { (#,#) ds3 ds4 ->
                 case Language.R.Globals.globalEnv
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.G>_P <'Foreign.R.Type.Env>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.G
                                 'Foreign.R.Type.Env, Foreign.R.Internal.SEXPREC>)_R) of ds5 { GHC.Ptr.Ptr ds6 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        ds4
                        ds6
                        ds3 of wild { (#,#) ds7 ds8 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        ds8
                        ds7 of wild2 { Unit# ds9 ->
                 (# ds9,
                    Foreign.R.Internal.SomeSEXP
                      @ Control.Memory.Region.V
                      @ GHC.Types.Any
                      ds8 #) } } } } } } }) -}
25c40e9df7cf5c2053922cd970564bde
  tests127 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests128) -}
87225d1f2736c6d446eab174891c1fd0
  tests128 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("function(){ NULL }"#) -}
0b54dcb0b39c364fd16e72c28b716271
  tests129 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests130) -}
df153ec2f76ffc5932b749d168ac22ea
  tests13 ::
    GHC.IORef.IORef GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [[GHC.Types.Char]] #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (r1 :: GHC.IORef.IORef GHC.Types.Int)[OneShot]
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Foreign.R.Internal.SomeSEXP Control.Memory.Region.V #)
                        Test.Matcher.tests18 of ds { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Foreign.R.Internal.SomeSEXP a dt ->
                 case Language.R.Globals.nilValue
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.G>_P <'Foreign.R.Type.Nil>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.G
                                 'Foreign.R.Type.Nil, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        dt
                        ds3
                        s of wild1 { (#,#) ds4 ds5 ->
                 case ((Language.R.$wevalEnv
                          @ (Language.R.Instance.R GHC.Types.Any)
                          @ Control.Memory.Region.V
                          @ 'Foreign.R.Type.Lang
                          (Language.R.Instance.$fMonadRR @ GHC.Types.Any)
                          ds5
                          Language.R.Globals.globalEnv
                            `cast`
                          (Trans
                               (Foreign.R.Internal.N:SEXP[0]
                                    <Control.Memory.Region.G>_P <'Foreign.R.Type.Env>_P)
                               (Trans
                                    (GHC.Ptr.Ptr
                                       <Language.R.HExp.HExp
                                          Control.Memory.Region.G
                                          'Foreign.R.Type.Env, Language.R.HExp.HExp
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Env>)_R
                                    (Sym (Foreign.R.Internal.N:SEXP[0]
                                              <Control.Memory.Region.V>_P
                                              <'Foreign.R.Type.Env>_P)))))
                         `cast`
                       (Trans
                            (Nth:3
                                 (Trans
                                      (<Foreign.R.Internal.SEXP
                                          Control.Memory.Region.V 'Foreign.R.Type.Lang>_R
                                       ->_R (Language.R.Instance.R
                                               <GHC.Types.Any>_P
                                               (Foreign.R.Internal.SomeSEXP
                                                  (Language.R.Instance.D:R:PrimStateR[0]
                                                       <GHC.Types.Any>_N))_N)_R)
                                      (Trans
                                           (<Foreign.R.Internal.SEXP
                                               Control.Memory.Region.V 'Foreign.R.Type.Lang>_R
                                            ->_R Language.R.Instance.N:R[0]
                                                     <GHC.Types.Any>_P <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any>_N)
                                           (Nth:2
                                                (Nth:3
                                                     (Trans
                                                          (<Control.Monad.Trans.Reader.ReaderT
                                                              (GHC.IORef.IORef GHC.Types.Int)
                                                              GHC.Types.IO
                                                              (Foreign.R.Internal.SEXP
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Lang)>_R
                                                           ->_R <Foreign.R.Internal.SEXP
                                                                   Control.Memory.Region.V
                                                                   'Foreign.R.Type.Lang
                                                                 -> Control.Monad.Trans.Reader.ReaderT
                                                                      (GHC.IORef.IORef
                                                                         GHC.Types.Int)
                                                                      GHC.Types.IO
                                                                      (Foreign.R.Internal.SomeSEXP
                                                                         GHC.Types.Any)>_R
                                                           ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                    <*>_N
                                                                    <GHC.IORef.IORef
                                                                       GHC.Types.Int>_R
                                                                    <GHC.Types.IO>_R
                                                                    <Foreign.R.Internal.SomeSEXP
                                                                       GHC.Types.Any>_N)
                                                          (<Control.Monad.Trans.Reader.ReaderT
                                                              (GHC.IORef.IORef GHC.Types.Int)
                                                              GHC.Types.IO
                                                              (Foreign.R.Internal.SEXP
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Lang)>_R
                                                           ->_R <Foreign.R.Internal.SEXP
                                                                   Control.Memory.Region.V
                                                                   'Foreign.R.Type.Lang
                                                                 -> Control.Monad.Trans.Reader.ReaderT
                                                                      (GHC.IORef.IORef
                                                                         GHC.Types.Int)
                                                                      GHC.Types.IO
                                                                      (Foreign.R.Internal.SomeSEXP
                                                                         GHC.Types.Any)>_R
                                                           ->_R <GHC.IORef.IORef GHC.Types.Int>_R
                                                           ->_R GHC.Types.N:IO[0]
                                                                    <Foreign.R.Internal.SomeSEXP
                                                                       GHC.Types.Any>_R)))))))
                            (Control.Monad.Trans.Reader.N:ReaderT[0]
                                 <*>_N
                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                 <GHC.Types.IO>_R
                                 <Foreign.R.Internal.SomeSEXP GHC.Types.Any>_N))
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP GHC.Types.Any>_R)
                        ds4 of ds1 { (#,#) ipv2 ipv3 ->
                 case ((Language.R.Matcher.attribute1
                          @ 'Foreign.R.Type.String
                          @ GHC.Types.Any
                          Language.R.Matcher.factor12
                            `cast`
                          (Sym (Foreign.R.Type.D:R:SingSEXPTYPEz0[0]) <'Foreign.R.Type.String>_N)
                          Language.R.Matcher.factor10
                          @ (Language.R.Instance.R
                               GHC.Types.Any
                               (Data.Either.Either
                                  (Language.R.Matcher.MatcherError GHC.Types.Any)
                                  [GHC.Base.String]))
                          ipv3
                          Test.Matcher.tests17
                          Test.Matcher.tests16)
                         `cast`
                       (Trans
                            (Language.R.Instance.N:R[0] <GHC.Types.Any>_P <Data.Either.Either
                                                                             (Language.R.Matcher.MatcherError
                                                                                GHC.Types.Any)
                                                                             [GHC.Base.String]>_N)
                            (Trans
                                 (Nth:2
                                      (Trans
                                           (<Control.Monad.Trans.Reader.ReaderT
                                               (GHC.IORef.IORef GHC.Types.Int)
                                               GHC.Types.IO
                                               (Data.Either.Either
                                                  (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                  [GHC.Base.String])>_R
                                            ->_R <Data.Either.Either
                                                    (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                    [GHC.Base.String]
                                                  -> Control.Monad.Trans.Reader.ReaderT
                                                       (GHC.IORef.IORef GHC.Types.Int)
                                                       GHC.Types.IO
                                                       [[GHC.Types.Char]]>_R
                                            ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                     <*>_N
                                                     <GHC.IORef.IORef GHC.Types.Int>_R
                                                     <GHC.Types.IO>_R
                                                     <[[GHC.Types.Char]]>_N)
                                           (<Control.Monad.Trans.Reader.ReaderT
                                               (GHC.IORef.IORef GHC.Types.Int)
                                               GHC.Types.IO
                                               (Data.Either.Either
                                                  (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                  [GHC.Base.String])>_R
                                            ->_R <Data.Either.Either
                                                    (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                    [GHC.Base.String]
                                                  -> Control.Monad.Trans.Reader.ReaderT
                                                       (GHC.IORef.IORef GHC.Types.Int)
                                                       GHC.Types.IO
                                                       [[GHC.Types.Char]]>_R
                                            ->_R <GHC.IORef.IORef GHC.Types.Int>_R
                                            ->_R GHC.Types.N:IO[0] <[[GHC.Types.Char]]>_R)))
                                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                                      <*>_N
                                      <GHC.IORef.IORef GHC.Types.Int>_R
                                      <GHC.Types.IO>_R
                                      <Data.Either.Either
                                         (Language.R.Matcher.MatcherError GHC.Types.Any)
                                         [GHC.Base.String]>_N)))
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <Data.Either.Either
                              (Language.R.Matcher.MatcherError GHC.Types.Any)
                              [GHC.Base.String]>_R)
                        ipv2 of ds7 { (#,#) ipv4 ipv5 ->
                 case ipv5 of wild2 {
                   Data.Either.Left ipv6
                   -> (GHC.Magic.noinline
                         @ (forall a1. [GHC.Types.Char] -> GHC.Types.IO a1)
                         GHC.IO.failIO1
                           `cast`
                         (forall (a1 :: <*>_N).
                          <GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <a1>_R))
                         @ [[GHC.Types.Char]]
                         Test.Matcher.tests14)
                        `cast`
                      (GHC.Types.N:IO[0] <[[GHC.Types.Char]]>_R)
                        ipv4
                   Data.Either.Right t -> (# ipv4, t #) } } } } } } }) -}
2a9975b8b7887adb7b61f57244c0f2c1
  tests130 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("null"#) -}
b8164dfd99bceba6b68cdf49e0202581
  tests131 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests132) -}
a925c36d7f57105848f739a7c14aebc7
  tests132 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("matcher"#) -}
ca8a9810a428222e5a2117955e0139e5
  tests14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests15) -}
409eababeea0076a8edfa9f3718560d5
  tests15 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Pattern match failure in do expression at tests/Test/Matcher.hs:61:8-14"#) -}
4c1e4137ae14feddcb1762126ee92c82
  tests16 ::
    Language.R.Matcher.MatcherError GHC.Types.Any
    -> Language.R.Instance.R
         GHC.Types.Any
         (Data.Either.Either
            (Language.R.Matcher.MatcherError GHC.Types.Any) [GHC.Base.String])
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>,
     Unfolding: (\ (x :: Language.R.Matcher.MatcherError
                           GHC.Types.Any) ->
                 let {
                   x1 :: Data.Either.Either
                           (Language.R.Matcher.MatcherError GHC.Types.Any) [GHC.Base.String]
                   = case Language.R.Matcher.$fNFDataMatcherError_$crnf
                            @ GHC.Types.Any
                            x of wild { () ->
                     Data.Either.Left
                       @ (Language.R.Matcher.MatcherError GHC.Types.Any)
                       @ [GHC.Base.String]
                       x }
                 } in
                 (\ (eta :: GHC.IORef.IORef GHC.Types.Int)
                    (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  (# eta1, x1 #))
                   `cast`
                 (Nth:3
                      (Trans
                           (<Data.Either.Either
                               (Language.R.Matcher.MatcherError GHC.Types.Any)
                               [GHC.Base.String]>_R
                            ->_R Trans
                                     (<GHC.IORef.IORef GHC.Types.Int>_R
                                      ->_R Sym (GHC.Types.N:IO[0]
                                                    <Data.Either.Either
                                                       (Language.R.Matcher.MatcherError
                                                          GHC.Types.Any)
                                                       [GHC.Base.String]>_R))
                                     (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                               <*>_N
                                               <GHC.IORef.IORef GHC.Types.Int>_R
                                               <GHC.Types.IO>_R
                                               <Data.Either.Either
                                                  (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                  [GHC.Base.String]>_N)))
                           (<Data.Either.Either
                               (Language.R.Matcher.MatcherError GHC.Types.Any)
                               [GHC.Base.String]>_R
                            ->_R Sym (Language.R.Instance.N:R[0]
                                          <GHC.Types.Any>_P) <Data.Either.Either
                                                                (Language.R.Matcher.MatcherError
                                                                   GHC.Types.Any)
                                                                [GHC.Base.String]>_N)))) -}
e3e760ec4b7477fc37d1646ac9f2a221
  tests17 ::
    Foreign.R.Internal.SEXP GHC.Types.Any 'Foreign.R.Type.String
    -> Language.R.Instance.R
         GHC.Types.Any
         (Data.Either.Either
            (Language.R.Matcher.MatcherError GHC.Types.Any) [GHC.Base.String])
  {- Arity: 1, Strictness: <L,1*U(U)>,
     Unfolding: (\ (o :: Foreign.R.Internal.SEXP
                           GHC.Types.Any 'Foreign.R.Type.String)[OneShot] ->
                 let {
                   x :: Data.Either.Either
                          (Language.R.Matcher.MatcherError GHC.Types.Any) [GHC.Base.String]
                   = case o `cast`
                          (Foreign.R.Internal.N:SEXP[0]
                               <GHC.Types.Any>_P
                               <'Foreign.R.Type.String>_P) of ww { GHC.Ptr.Ptr ww1 ->
                     let {
                       x1 :: [GHC.Base.String]
                       = Language.R.Matcher.$wcharList @ GHC.Types.Any ww1
                     } in
                     case Test.Matcher.tests_go x1 of wild { () ->
                     Data.Either.Right
                       @ (Language.R.Matcher.MatcherError GHC.Types.Any)
                       @ [GHC.Base.String]
                       x1 } }
                 } in
                 (\ (eta :: GHC.IORef.IORef GHC.Types.Int)
                    (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  (# eta1, x #))
                   `cast`
                 (Nth:3
                      (Trans
                           (<Data.Either.Either
                               (Language.R.Matcher.MatcherError GHC.Types.Any)
                               [GHC.Base.String]>_R
                            ->_R Trans
                                     (<GHC.IORef.IORef GHC.Types.Int>_R
                                      ->_R Sym (GHC.Types.N:IO[0]
                                                    <Data.Either.Either
                                                       (Language.R.Matcher.MatcherError
                                                          GHC.Types.Any)
                                                       [GHC.Base.String]>_R))
                                     (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                               <*>_N
                                               <GHC.IORef.IORef GHC.Types.Int>_R
                                               <GHC.Types.IO>_R
                                               <Data.Either.Either
                                                  (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                  [GHC.Base.String]>_N)))
                           (<Data.Either.Either
                               (Language.R.Matcher.MatcherError GHC.Types.Any)
                               [GHC.Base.String]>_R
                            ->_R Sym (Language.R.Instance.N:R[0]
                                          <GHC.Types.Any>_P) <Data.Either.Either
                                                                (Language.R.Matcher.MatcherError
                                                                   GHC.Types.Any)
                                                                [GHC.Base.String]>_N)))) -}
0362486dc34bea3f02c43c62e39cc124
  tests18 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP Control.Memory.Region.V #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.noDuplicate#
                        @ GHC.Prim.RealWorld
                        s of s' { DEFAULT ->
                 case Language.R.QQ.parse1
                        Test.Matcher.tests19
                        s' of ds1 { (#,#) ipv ipv1 ->
                 case ipv1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.V>_P <'Foreign.R.Type.Expr>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.V
                                 'Foreign.R.Type.Expr, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds2 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        ds2
                        0#
                        ipv of wild1 { (#,#) ds3 ds4 ->
                 case Language.R.Globals.globalEnv
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.G>_P <'Foreign.R.Type.Env>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.G
                                 'Foreign.R.Type.Env, Foreign.R.Internal.SEXPREC>)_R) of ds5 { GHC.Ptr.Ptr ds6 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        ds4
                        ds6
                        ds3 of wild { (#,#) ds7 ds8 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        ds8
                        ds7 of wild2 { Unit# ds9 ->
                 (# ds9,
                    Foreign.R.Internal.SomeSEXP
                      @ Control.Memory.Region.V
                      @ GHC.Types.Any
                      ds8 #) } } } } } } }) -}
d4af489ab1cd1fdc76a94d4bc902d324
  tests19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests20) -}
aba31e91fe217b0b8d1006cfc6002f02
  tests2 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Test.Matcher.tests104
                   Test.Matcher.tests3) -}
7465b0ecf35aa3d4ade18eed8b86e26f
  tests20 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("function(){ x <- matrix(c(1:10),2,3); class(x) <- \"shmatrix\"; x }"#) -}
24a05190b994cac8f57e8d796d73b2db
  tests21 ::
    [[GHC.Types.Char]]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <B,U><B,U>x -}
cde8b6642289b4786d84fffa00fb9b6d
  tests22 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Test.Matcher.tests23
                   (GHC.Types.[] @ GHC.Base.String)) -}
819de0f670887e84795e080bc2e8960b
  tests23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests24) -}
20ffaf3413f9d32a06cf7bc4afa16ccb
  tests24 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("shmatrix"#) -}
0b4f4c5b8260f3759ee9412ca2073a98
  tests25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests26) -}
ba622afed6864733fc114bc906793cfc
  tests26 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("getS3Class"#) -}
6be7ca8af44bed03af0b7b2d5f30038e
  tests27 :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Test.Matcher.tests46
                   Test.Matcher.tests28
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
3738a135668cacc8711214a8ec56a5f8
  tests28 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.getMaskingState# s of ds { (#,#) ipv ipv1 ->
                 case ipv1 of ds1 {
                   DEFAULT
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Language.R.Instance.runRegion3
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ [GHC.Int.Int32]
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskAsyncExceptions#
                                @ [GHC.Int.Int32]
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Test.Matcher.tests30
                                        (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                          `cast`
                                        (Trans
                                             (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                             (Nth:2
                                                  (Trans
                                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                 <*>_N
                                                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                                                 <GHC.Types.IO>_R
                                                                 <[GHC.Int.Int32]>_N))
                                                       (Nth:3
                                                            (Nth:3
                                                                 (Trans
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  [GHC.Int.Int32]>_R
                                                                       ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                <*>_N
                                                                                <GHC.IORef.IORef
                                                                                   GHC.Types.Int>_R
                                                                                <GHC.Types.IO>_R
                                                                                <[GHC.Int.Int32]>_N)
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  [GHC.Int.Int32]>_R
                                                                       ->_R <GHC.IORef.IORef
                                                                               GHC.Types.Int>_R
                                                                       ->_R GHC.Types.N:IO[0]
                                                                                <[GHC.Int.Int32]>_R)))))))
                                        s1 of ds3 { (#,#) ipv4 ipv5 ->
                                 case Test.Matcher.tests_go1 ipv5 of wild { () -> ds3 } }))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.readMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv3
                                     s1 of ds3 { (#,#) ipv4 ipv5 ->
                              case ipv5 of wild { GHC.Types.I# x# ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld #)}
                                     (GHC.Prim.narrow32Int# x#)
                                     ipv4 of wild1 { Unit# ds4 ->
                              GHC.Prim.raiseIO#
                                @ GHC.Exception.SomeException
                                @ [GHC.Int.Int32]
                                e1
                                ds4 } } })
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             ipv3
                             ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                      case ipv8 of wild { GHC.Types.I# x# ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld #)}
                             (GHC.Prim.narrow32Int# x#)
                             ipv7 of wild1 { Unit# ds5 ->
                      case GHC.Classes.$fEq[]_$c==
                             @ GHC.Int.Int32
                             GHC.Int.$fEqInt32
                             ipv5
                             Test.Matcher.tests_expected of wild2 {
                        GHC.Types.False
                        -> case Test.Matcher.tests42 ipv5 ds5
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True
                        -> (# ds5, GHC.Types.[] @ GHC.Types.Char #) } } } } } }
                   0#
                   -> case GHC.Prim.maskAsyncExceptions#
                             @ [GHC.Int.Int32]
                             Test.Matcher.tests29
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Classes.$fEq[]_$c==
                             @ GHC.Int.Int32
                             GHC.Int.$fEqInt32
                             ipv3
                             Test.Matcher.tests_expected of wild {
                        GHC.Types.False
                        -> case Test.Matcher.tests42 ipv3 ipv2
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True -> (# ipv2, GHC.Types.[] @ GHC.Types.Char #) } }
                   1#
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Language.R.Instance.runRegion3
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ [GHC.Int.Int32]
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskUninterruptible#
                                @ [GHC.Int.Int32]
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Test.Matcher.tests30
                                        (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                          `cast`
                                        (Trans
                                             (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                             (Nth:2
                                                  (Trans
                                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                 <*>_N
                                                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                                                 <GHC.Types.IO>_R
                                                                 <[GHC.Int.Int32]>_N))
                                                       (Nth:3
                                                            (Nth:3
                                                                 (Trans
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  [GHC.Int.Int32]>_R
                                                                       ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                <*>_N
                                                                                <GHC.IORef.IORef
                                                                                   GHC.Types.Int>_R
                                                                                <GHC.Types.IO>_R
                                                                                <[GHC.Int.Int32]>_N)
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  [GHC.Int.Int32]>_R
                                                                       ->_R <GHC.IORef.IORef
                                                                               GHC.Types.Int>_R
                                                                       ->_R GHC.Types.N:IO[0]
                                                                                <[GHC.Int.Int32]>_R)))))))
                                        s1 of ds3 { (#,#) ipv4 ipv5 ->
                                 case Test.Matcher.tests_go1 ipv5 of wild { () -> ds3 } }))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.readMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv3
                                     s1 of ds3 { (#,#) ipv4 ipv5 ->
                              case ipv5 of wild { GHC.Types.I# x# ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld #)}
                                     (GHC.Prim.narrow32Int# x#)
                                     ipv4 of wild1 { Unit# ds4 ->
                              GHC.Prim.raiseIO#
                                @ GHC.Exception.SomeException
                                @ [GHC.Int.Int32]
                                e1
                                ds4 } } })
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             ipv3
                             ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                      case ipv8 of wild { GHC.Types.I# x# ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld #)}
                             (GHC.Prim.narrow32Int# x#)
                             ipv7 of wild1 { Unit# ds5 ->
                      case GHC.Classes.$fEq[]_$c==
                             @ GHC.Int.Int32
                             GHC.Int.$fEqInt32
                             ipv5
                             Test.Matcher.tests_expected of wild2 {
                        GHC.Types.False
                        -> case Test.Matcher.tests42 ipv5 ds5
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True
                        -> (# ds5, GHC.Types.[] @ GHC.Types.Char #) } } } } } } } }) -}
44acd81b81a05d06420a51c221c995f4
  tests29 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Int.Int32] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newMutVar#
                        @ GHC.Types.Int
                        @ GHC.Prim.RealWorld
                        Language.R.Instance.runRegion3
                        s1 of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.catch#
                        @ [GHC.Int.Int32]
                        @ GHC.Exception.SomeException
                        (GHC.Prim.unmaskAsyncExceptions#
                           @ [GHC.Int.Int32]
                           (\ (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                            case Test.Matcher.tests30
                                   (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                     `cast`
                                   (Trans
                                        (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                        (Nth:2
                                             (Trans
                                                  (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                            <*>_N
                                                            <GHC.IORef.IORef GHC.Types.Int>_R
                                                            <GHC.Types.IO>_R
                                                            <[GHC.Int.Int32]>_N))
                                                  (Nth:3
                                                       (Nth:3
                                                            (Trans
                                                                 (<Control.Monad.Trans.Reader.ReaderT
                                                                     (GHC.IORef.IORef GHC.Types.Int)
                                                                     GHC.Types.IO
                                                                     (Foreign.R.Internal.SomeSEXP
                                                                        GHC.Types.Any)>_R
                                                                  ->_R <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any
                                                                        -> Control.Monad.Trans.Reader.ReaderT
                                                                             (GHC.IORef.IORef
                                                                                GHC.Types.Int)
                                                                             GHC.Types.IO
                                                                             [GHC.Int.Int32]>_R
                                                                  ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                           <*>_N
                                                                           <GHC.IORef.IORef
                                                                              GHC.Types.Int>_R
                                                                           <GHC.Types.IO>_R
                                                                           <[GHC.Int.Int32]>_N)
                                                                 (<Control.Monad.Trans.Reader.ReaderT
                                                                     (GHC.IORef.IORef GHC.Types.Int)
                                                                     GHC.Types.IO
                                                                     (Foreign.R.Internal.SomeSEXP
                                                                        GHC.Types.Any)>_R
                                                                  ->_R <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any
                                                                        -> Control.Monad.Trans.Reader.ReaderT
                                                                             (GHC.IORef.IORef
                                                                                GHC.Types.Int)
                                                                             GHC.Types.IO
                                                                             [GHC.Int.Int32]>_R
                                                                  ->_R <GHC.IORef.IORef
                                                                          GHC.Types.Int>_R
                                                                  ->_R GHC.Types.N:IO[0]
                                                                           <[GHC.Int.Int32]>_R)))))))
                                   s2 of ds3 { (#,#) ipv4 ipv5 ->
                            case Test.Matcher.tests_go1 ipv5 of wild { () -> ds3 } }))
                        (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                           (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.readMutVar#
                                @ GHC.Prim.RealWorld
                                @ GHC.Types.Int
                                ipv3
                                s2 of ds3 { (#,#) ipv4 ipv5 ->
                         case ipv5 of wild { GHC.Types.I# x# ->
                         case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                                               -> (# GHC.Prim.State#
                                                                       GHC.Prim.RealWorld #)}
                                (GHC.Prim.narrow32Int# x#)
                                ipv4 of wild1 { Unit# ds4 ->
                         GHC.Prim.raiseIO#
                           @ GHC.Exception.SomeException
                           @ [GHC.Int.Int32]
                           e1
                           ds4 } } })
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        ipv3
                        ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                 case ipv8 of wild { GHC.Types.I# x# ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        (GHC.Prim.narrow32Int# x#)
                        ipv7 of wild1 { Unit# ds5 ->
                 (# ds5, ipv5 #) } } } } }) -}
78420ad9ff16c6ec5a625faf5c46dd26
  tests3 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Test.Matcher.tests90
                   Test.Matcher.tests4) -}
a25e80bc719473157df5ff6e2097b626
  tests30 ::
    GHC.IORef.IORef GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Int.Int32] #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (r1 :: GHC.IORef.IORef GHC.Types.Int)[OneShot]
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Foreign.R.Internal.SomeSEXP Control.Memory.Region.V #)
                        Test.Matcher.tests39 of ds { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Foreign.R.Internal.SomeSEXP a dt ->
                 case Language.R.Globals.nilValue
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.G>_P <'Foreign.R.Type.Nil>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.G
                                 'Foreign.R.Type.Nil, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        dt
                        ds3
                        s of wild1 { (#,#) ds4 ds5 ->
                 case ((Language.R.$wevalEnv
                          @ (Language.R.Instance.R GHC.Types.Any)
                          @ Control.Memory.Region.V
                          @ 'Foreign.R.Type.Lang
                          (Language.R.Instance.$fMonadRR @ GHC.Types.Any)
                          ds5
                          Language.R.Globals.globalEnv
                            `cast`
                          (Trans
                               (Foreign.R.Internal.N:SEXP[0]
                                    <Control.Memory.Region.G>_P <'Foreign.R.Type.Env>_P)
                               (Trans
                                    (GHC.Ptr.Ptr
                                       <Language.R.HExp.HExp
                                          Control.Memory.Region.G
                                          'Foreign.R.Type.Env, Language.R.HExp.HExp
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Env>)_R
                                    (Sym (Foreign.R.Internal.N:SEXP[0]
                                              <Control.Memory.Region.V>_P
                                              <'Foreign.R.Type.Env>_P)))))
                         `cast`
                       (Trans
                            (Nth:3
                                 (Trans
                                      (<Foreign.R.Internal.SEXP
                                          Control.Memory.Region.V 'Foreign.R.Type.Lang>_R
                                       ->_R (Language.R.Instance.R
                                               <GHC.Types.Any>_P
                                               (Foreign.R.Internal.SomeSEXP
                                                  (Language.R.Instance.D:R:PrimStateR[0]
                                                       <GHC.Types.Any>_N))_N)_R)
                                      (Trans
                                           (<Foreign.R.Internal.SEXP
                                               Control.Memory.Region.V 'Foreign.R.Type.Lang>_R
                                            ->_R Language.R.Instance.N:R[0]
                                                     <GHC.Types.Any>_P <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any>_N)
                                           (Nth:2
                                                (Nth:3
                                                     (Trans
                                                          (<Control.Monad.Trans.Reader.ReaderT
                                                              (GHC.IORef.IORef GHC.Types.Int)
                                                              GHC.Types.IO
                                                              (Foreign.R.Internal.SEXP
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Lang)>_R
                                                           ->_R <Foreign.R.Internal.SEXP
                                                                   Control.Memory.Region.V
                                                                   'Foreign.R.Type.Lang
                                                                 -> Control.Monad.Trans.Reader.ReaderT
                                                                      (GHC.IORef.IORef
                                                                         GHC.Types.Int)
                                                                      GHC.Types.IO
                                                                      (Foreign.R.Internal.SomeSEXP
                                                                         GHC.Types.Any)>_R
                                                           ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                    <*>_N
                                                                    <GHC.IORef.IORef
                                                                       GHC.Types.Int>_R
                                                                    <GHC.Types.IO>_R
                                                                    <Foreign.R.Internal.SomeSEXP
                                                                       GHC.Types.Any>_N)
                                                          (<Control.Monad.Trans.Reader.ReaderT
                                                              (GHC.IORef.IORef GHC.Types.Int)
                                                              GHC.Types.IO
                                                              (Foreign.R.Internal.SEXP
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Lang)>_R
                                                           ->_R <Foreign.R.Internal.SEXP
                                                                   Control.Memory.Region.V
                                                                   'Foreign.R.Type.Lang
                                                                 -> Control.Monad.Trans.Reader.ReaderT
                                                                      (GHC.IORef.IORef
                                                                         GHC.Types.Int)
                                                                      GHC.Types.IO
                                                                      (Foreign.R.Internal.SomeSEXP
                                                                         GHC.Types.Any)>_R
                                                           ->_R <GHC.IORef.IORef GHC.Types.Int>_R
                                                           ->_R GHC.Types.N:IO[0]
                                                                    <Foreign.R.Internal.SomeSEXP
                                                                       GHC.Types.Any>_R)))))))
                            (Control.Monad.Trans.Reader.N:ReaderT[0]
                                 <*>_N
                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                 <GHC.Types.IO>_R
                                 <Foreign.R.Internal.SomeSEXP GHC.Types.Any>_N))
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP GHC.Types.Any>_R)
                        ds4 of ds1 { (#,#) ipv2 ipv3 ->
                 case ((Language.R.Matcher.attribute1
                          @ 'Foreign.R.Type.Int
                          @ GHC.Types.Any
                          Test.Matcher.tests37
                            `cast`
                          (Sym (Foreign.R.Type.D:R:SingSEXPTYPEz0[0]) <'Foreign.R.Type.Int>_N)
                          Test.Matcher.tests35
                          @ (Language.R.Instance.R
                               GHC.Types.Any
                               (Data.Either.Either
                                  (Language.R.Matcher.MatcherError GHC.Types.Any)
                                  (Foreign.R.Internal.SEXP GHC.Types.Any 'Foreign.R.Type.Int)))
                          ipv3
                          Test.Matcher.tests34
                            `cast`
                          (<Foreign.R.Internal.SEXP GHC.Types.Any 'Foreign.R.Type.Int>_R
                           ->_R Trans
                                    (<GHC.IORef.IORef GHC.Types.Int>_R
                                     ->_R Sym (GHC.Types.N:IO[0]
                                                   <Data.Either.Either
                                                      (Language.R.Matcher.MatcherError
                                                         GHC.Types.Any)
                                                      (Foreign.R.Internal.SEXP
                                                         GHC.Types.Any 'Foreign.R.Type.Int)>_R))
                                    (Trans
                                         (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                   <*>_N
                                                   <GHC.IORef.IORef GHC.Types.Int>_R
                                                   <GHC.Types.IO>_R
                                                   <Data.Either.Either
                                                      (Language.R.Matcher.MatcherError
                                                         GHC.Types.Any)
                                                      (Foreign.R.Internal.SEXP
                                                         GHC.Types.Any 'Foreign.R.Type.Int)>_N))
                                         (Sym (Language.R.Instance.N:R[0]
                                                   <GHC.Types.Any>_P) <Data.Either.Either
                                                                         (Language.R.Matcher.MatcherError
                                                                            GHC.Types.Any)
                                                                         (Foreign.R.Internal.SEXP
                                                                            GHC.Types.Any
                                                                            'Foreign.R.Type.Int)>_N)))
                          Test.Matcher.tests33)
                         `cast`
                       (Trans
                            (Language.R.Instance.N:R[0] <GHC.Types.Any>_P <Data.Either.Either
                                                                             (Language.R.Matcher.MatcherError
                                                                                GHC.Types.Any)
                                                                             (Foreign.R.Internal.SEXP
                                                                                GHC.Types.Any
                                                                                'Foreign.R.Type.Int)>_N)
                            (Trans
                                 (Nth:2
                                      (Trans
                                           (<Control.Monad.Trans.Reader.ReaderT
                                               (GHC.IORef.IORef GHC.Types.Int)
                                               GHC.Types.IO
                                               (Data.Either.Either
                                                  (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                  (Foreign.R.Internal.SEXP
                                                     GHC.Types.Any 'Foreign.R.Type.Int))>_R
                                            ->_R <Data.Either.Either
                                                    (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                    (Foreign.R.Internal.SEXP
                                                       GHC.Types.Any 'Foreign.R.Type.Int)
                                                  -> Control.Monad.Trans.Reader.ReaderT
                                                       (GHC.IORef.IORef GHC.Types.Int)
                                                       GHC.Types.IO
                                                       [GHC.Int.Int32]>_R
                                            ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                     <*>_N
                                                     <GHC.IORef.IORef GHC.Types.Int>_R
                                                     <GHC.Types.IO>_R
                                                     <[GHC.Int.Int32]>_N)
                                           (<Control.Monad.Trans.Reader.ReaderT
                                               (GHC.IORef.IORef GHC.Types.Int)
                                               GHC.Types.IO
                                               (Data.Either.Either
                                                  (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                  (Foreign.R.Internal.SEXP
                                                     GHC.Types.Any 'Foreign.R.Type.Int))>_R
                                            ->_R <Data.Either.Either
                                                    (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                    (Foreign.R.Internal.SEXP
                                                       GHC.Types.Any 'Foreign.R.Type.Int)
                                                  -> Control.Monad.Trans.Reader.ReaderT
                                                       (GHC.IORef.IORef GHC.Types.Int)
                                                       GHC.Types.IO
                                                       [GHC.Int.Int32]>_R
                                            ->_R <GHC.IORef.IORef GHC.Types.Int>_R
                                            ->_R GHC.Types.N:IO[0] <[GHC.Int.Int32]>_R)))
                                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                                      <*>_N
                                      <GHC.IORef.IORef GHC.Types.Int>_R
                                      <GHC.Types.IO>_R
                                      <Data.Either.Either
                                         (Language.R.Matcher.MatcherError GHC.Types.Any)
                                         (Foreign.R.Internal.SEXP
                                            GHC.Types.Any 'Foreign.R.Type.Int)>_N)))
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <Data.Either.Either
                              (Language.R.Matcher.MatcherError GHC.Types.Any)
                              (Foreign.R.Internal.SEXP GHC.Types.Any 'Foreign.R.Type.Int)>_R)
                        ipv2 of ds7 { (#,#) ipv4 ipv5 ->
                 case ipv5 of wild2 {
                   Data.Either.Left ipv6
                   -> (GHC.Magic.noinline
                         @ (forall a1. [GHC.Types.Char] -> GHC.Types.IO a1)
                         GHC.IO.failIO1
                           `cast`
                         (forall (a1 :: <*>_N).
                          <GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <a1>_R))
                         @ [GHC.Int.Int32]
                         Test.Matcher.tests31)
                        `cast`
                      (GHC.Types.N:IO[0] <[GHC.Int.Int32]>_R)
                        ipv4
                   Data.Either.Right t
                   -> (# ipv4,
                         Language.R.Literal.$fLiteral[]Int_$cfromSEXP
                           @ GHC.Types.Any
                           t #) } } } } } } }) -}
43a65255d3efb8a8054e3e55d1a3fa91
  tests31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests32) -}
f886fd3d9e408ea1f071778af450af21
  tests32 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Pattern match failure in do expression at tests/Test/Matcher.hs:56:8-14"#) -}
4b283bea36a372fda4750b6660083238
  tests33 ::
    Language.R.Matcher.MatcherError GHC.Types.Any
    -> Language.R.Instance.R
         GHC.Types.Any
         (Data.Either.Either
            (Language.R.Matcher.MatcherError GHC.Types.Any)
            (Foreign.R.Internal.SEXP GHC.Types.Any 'Foreign.R.Type.Int))
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>,
     Unfolding: (\ (x :: Language.R.Matcher.MatcherError
                           GHC.Types.Any) ->
                 let {
                   x1 :: Data.Either.Either
                           (Language.R.Matcher.MatcherError GHC.Types.Any)
                           (Foreign.R.Internal.SEXP GHC.Types.Any 'Foreign.R.Type.Int)
                   = case Language.R.Matcher.$fNFDataMatcherError_$crnf
                            @ GHC.Types.Any
                            x of wild { () ->
                     Data.Either.Left
                       @ (Language.R.Matcher.MatcherError GHC.Types.Any)
                       @ (Foreign.R.Internal.SEXP GHC.Types.Any 'Foreign.R.Type.Int)
                       x }
                 } in
                 (\ (eta :: GHC.IORef.IORef GHC.Types.Int)
                    (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  (# eta1, x1 #))
                   `cast`
                 (Nth:3
                      (Trans
                           (<Data.Either.Either
                               (Language.R.Matcher.MatcherError GHC.Types.Any)
                               (Foreign.R.Internal.SEXP GHC.Types.Any 'Foreign.R.Type.Int)>_R
                            ->_R Trans
                                     (<GHC.IORef.IORef GHC.Types.Int>_R
                                      ->_R Sym (GHC.Types.N:IO[0]
                                                    <Data.Either.Either
                                                       (Language.R.Matcher.MatcherError
                                                          GHC.Types.Any)
                                                       (Foreign.R.Internal.SEXP
                                                          GHC.Types.Any 'Foreign.R.Type.Int)>_R))
                                     (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                               <*>_N
                                               <GHC.IORef.IORef GHC.Types.Int>_R
                                               <GHC.Types.IO>_R
                                               <Data.Either.Either
                                                  (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                  (Foreign.R.Internal.SEXP
                                                     GHC.Types.Any 'Foreign.R.Type.Int)>_N)))
                           (<Data.Either.Either
                               (Language.R.Matcher.MatcherError GHC.Types.Any)
                               (Foreign.R.Internal.SEXP GHC.Types.Any 'Foreign.R.Type.Int)>_R
                            ->_R Sym (Language.R.Instance.N:R[0]
                                          <GHC.Types.Any>_P) <Data.Either.Either
                                                                (Language.R.Matcher.MatcherError
                                                                   GHC.Types.Any)
                                                                (Foreign.R.Internal.SEXP
                                                                   GHC.Types.Any
                                                                   'Foreign.R.Type.Int)>_N)))) -}
841206f076d04ee8af190e3f3a942f2a
  tests34 ::
    Foreign.R.Internal.SEXP GHC.Types.Any 'Foreign.R.Type.Int
    -> GHC.IORef.IORef GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            (Language.R.Matcher.MatcherError GHC.Types.Any)
            (Foreign.R.Internal.SEXP GHC.Types.Any 'Foreign.R.Type.Int) #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*U(U)><L,A><S,U>,
     Unfolding: (\ (x :: Foreign.R.Internal.SEXP
                           GHC.Types.Any 'Foreign.R.Type.Int)[OneShot]
                   (eta :: GHC.IORef.IORef GHC.Types.Int)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# eta1,
                    case x `cast`
                         (Foreign.R.Internal.N:SEXP[0]
                              <GHC.Types.Any>_P
                              <'Foreign.R.Type.Int>_P) of nt { GHC.Ptr.Ptr ipv ->
                    Data.Either.Right
                      @ (Language.R.Matcher.MatcherError GHC.Types.Any)
                      @ (Foreign.R.Internal.SEXP GHC.Types.Any 'Foreign.R.Type.Int)
                      nt
                        `cast`
                      (Sym (Foreign.R.Internal.N:SEXP[0]
                                <GHC.Types.Any>_P <'Foreign.R.Type.Int>_P)) } #)) -}
3a450460e29104e95c9d7e20d66adbed
  tests35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests36) -}
5216d18a2a46d83070a924e49e1c6172
  tests36 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("dim"#) -}
42c5ec35596a6cf69d6428d989459df2
  tests37 :: Foreign.R.Type.R:SingSEXPTYPEz 'Foreign.R.Type.Int
  {- HasNoCafRefs, Strictness: m12,
     Unfolding: (Foreign.R.Type.SInt
                   @ 'Foreign.R.Type.Int
                   Test.Matcher.tests38
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <Foreign.R.Type.SEXPTYPE>_N) <'Foreign.R.Type.Int>_N <'Foreign.R.Type.Int>_N)) -}
7475c46e28dd32fa4cab17423de89f9a
  tests38 ::
    ('Foreign.R.Type.Int :: Foreign.R.Type.SEXPTYPE)
    GHC.Types.~~
    ('Foreign.R.Type.Int :: Foreign.R.Type.SEXPTYPE)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ Foreign.R.Type.SEXPTYPE
                   @ Foreign.R.Type.SEXPTYPE
                   @ 'Foreign.R.Type.Int
                   @ 'Foreign.R.Type.Int
                   @~ <'Foreign.R.Type.Int>_N) -}
f972693e5305b086b83d62cdf5badb1a
  tests39 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP Control.Memory.Region.V #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.noDuplicate#
                        @ GHC.Prim.RealWorld
                        s of s' { DEFAULT ->
                 case Language.R.QQ.parse1
                        Test.Matcher.tests40
                        s' of ds1 { (#,#) ipv ipv1 ->
                 case ipv1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.V>_P <'Foreign.R.Type.Expr>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.V
                                 'Foreign.R.Type.Expr, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds2 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        ds2
                        0#
                        ipv of wild1 { (#,#) ds3 ds4 ->
                 case Language.R.Globals.globalEnv
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.G>_P <'Foreign.R.Type.Env>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.G
                                 'Foreign.R.Type.Env, Foreign.R.Internal.SEXPREC>)_R) of ds5 { GHC.Ptr.Ptr ds6 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        ds4
                        ds6
                        ds3 of wild { (#,#) ds7 ds8 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        ds8
                        ds7 of wild2 { Unit# ds9 ->
                 (# ds9,
                    Foreign.R.Internal.SomeSEXP
                      @ Control.Memory.Region.V
                      @ GHC.Types.Any
                      ds8 #) } } } } } } }) -}
cdb1ad4320390a793d50cde1a1a17d21
  tests4 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Test.Matcher.tests86
                   Test.Matcher.tests5) -}
d0ea8d5d91e1542fae60f1800b8343c7
  tests40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests41) -}
ffb5be09694c15f267c0b7a4bfe1758d
  tests41 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("function(){ matrix(c(1:6), 2,3) }"#) -}
546de23732127ea4e53cb6501946a60b
  tests42 ::
    [GHC.Int.Int32]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <B,U><B,U>x -}
cc947cc539924652a5f6bffb30e41cff
  tests43 :: [GHC.Int.Int32]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Int.Int32
                   Test.Matcher.tests44
                   (GHC.Types.[] @ GHC.Int.Int32)) -}
4dc08c66574e9511ee2421ed97345731
  tests44 :: GHC.Int.Int32
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Int.I32# 3#) -}
d0c35e4298932a0f11741316f96dc315
  tests45 :: GHC.Int.Int32
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Int.I32# 2#) -}
065c263e88c5e0f08f339d5aa8f475a0
  tests46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests47) -}
70de1bd9d52c005649427a90a30a4919
  tests47 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("someAttribute"#) -}
4b18d2488d27b08695320e9195a77dcb
  tests48 :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Test.Matcher.tests46
                   Test.Matcher.tests49
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
b19e35ad90c0c217d45a51bd1676dae0
  tests49 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.getMaskingState# s of ds { (#,#) ipv ipv1 ->
                 case ipv1 of ds1 {
                   DEFAULT
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Language.R.Instance.runRegion3
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ [GHC.Int.Int32]
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskAsyncExceptions#
                                @ [GHC.Int.Int32]
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Test.Matcher.tests51
                                        (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                          `cast`
                                        (Trans
                                             (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                             (Nth:2
                                                  (Trans
                                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                 <*>_N
                                                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                                                 <GHC.Types.IO>_R
                                                                 <[GHC.Int.Int32]>_N))
                                                       (Nth:3
                                                            (Nth:3
                                                                 (Trans
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  [GHC.Int.Int32]>_R
                                                                       ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                <*>_N
                                                                                <GHC.IORef.IORef
                                                                                   GHC.Types.Int>_R
                                                                                <GHC.Types.IO>_R
                                                                                <[GHC.Int.Int32]>_N)
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  [GHC.Int.Int32]>_R
                                                                       ->_R <GHC.IORef.IORef
                                                                               GHC.Types.Int>_R
                                                                       ->_R GHC.Types.N:IO[0]
                                                                                <[GHC.Int.Int32]>_R)))))))
                                        s1 of ds3 { (#,#) ipv4 ipv5 ->
                                 case Test.Matcher.tests_go1 ipv5 of wild { () -> ds3 } }))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.readMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv3
                                     s1 of ds3 { (#,#) ipv4 ipv5 ->
                              case ipv5 of wild { GHC.Types.I# x# ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld #)}
                                     (GHC.Prim.narrow32Int# x#)
                                     ipv4 of wild1 { Unit# ds4 ->
                              GHC.Prim.raiseIO#
                                @ GHC.Exception.SomeException
                                @ [GHC.Int.Int32]
                                e1
                                ds4 } } })
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             ipv3
                             ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                      case ipv8 of wild { GHC.Types.I# x# ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld #)}
                             (GHC.Prim.narrow32Int# x#)
                             ipv7 of wild1 { Unit# ds5 ->
                      case GHC.Classes.$fEq[]_$c==
                             @ GHC.Int.Int32
                             GHC.Int.$fEqInt32
                             ipv5
                             Test.Matcher.tests_expected of wild2 {
                        GHC.Types.False
                        -> case Test.Matcher.tests42 ipv5 ds5
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True
                        -> (# ds5, GHC.Types.[] @ GHC.Types.Char #) } } } } } }
                   0#
                   -> case GHC.Prim.maskAsyncExceptions#
                             @ [GHC.Int.Int32]
                             Test.Matcher.tests50
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Classes.$fEq[]_$c==
                             @ GHC.Int.Int32
                             GHC.Int.$fEqInt32
                             ipv3
                             Test.Matcher.tests_expected of wild {
                        GHC.Types.False
                        -> case Test.Matcher.tests42 ipv3 ipv2
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True -> (# ipv2, GHC.Types.[] @ GHC.Types.Char #) } }
                   1#
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Language.R.Instance.runRegion3
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ [GHC.Int.Int32]
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskUninterruptible#
                                @ [GHC.Int.Int32]
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Test.Matcher.tests51
                                        (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                          `cast`
                                        (Trans
                                             (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                             (Nth:2
                                                  (Trans
                                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                 <*>_N
                                                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                                                 <GHC.Types.IO>_R
                                                                 <[GHC.Int.Int32]>_N))
                                                       (Nth:3
                                                            (Nth:3
                                                                 (Trans
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  [GHC.Int.Int32]>_R
                                                                       ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                <*>_N
                                                                                <GHC.IORef.IORef
                                                                                   GHC.Types.Int>_R
                                                                                <GHC.Types.IO>_R
                                                                                <[GHC.Int.Int32]>_N)
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  [GHC.Int.Int32]>_R
                                                                       ->_R <GHC.IORef.IORef
                                                                               GHC.Types.Int>_R
                                                                       ->_R GHC.Types.N:IO[0]
                                                                                <[GHC.Int.Int32]>_R)))))))
                                        s1 of ds3 { (#,#) ipv4 ipv5 ->
                                 case Test.Matcher.tests_go1 ipv5 of wild { () -> ds3 } }))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.readMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv3
                                     s1 of ds3 { (#,#) ipv4 ipv5 ->
                              case ipv5 of wild { GHC.Types.I# x# ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld #)}
                                     (GHC.Prim.narrow32Int# x#)
                                     ipv4 of wild1 { Unit# ds4 ->
                              GHC.Prim.raiseIO#
                                @ GHC.Exception.SomeException
                                @ [GHC.Int.Int32]
                                e1
                                ds4 } } })
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             ipv3
                             ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                      case ipv8 of wild { GHC.Types.I# x# ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld #)}
                             (GHC.Prim.narrow32Int# x#)
                             ipv7 of wild1 { Unit# ds5 ->
                      case GHC.Classes.$fEq[]_$c==
                             @ GHC.Int.Int32
                             GHC.Int.$fEqInt32
                             ipv5
                             Test.Matcher.tests_expected of wild2 {
                        GHC.Types.False
                        -> case Test.Matcher.tests42 ipv5 ds5
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True
                        -> (# ds5, GHC.Types.[] @ GHC.Types.Char #) } } } } } } } }) -}
99f12767f3cac68ab649b744b87d0bec
  tests5 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Test.Matcher.tests73
                   Test.Matcher.tests6) -}
6cc037484e04f9520fdb02f47a8c96fd
  tests50 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Int.Int32] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newMutVar#
                        @ GHC.Types.Int
                        @ GHC.Prim.RealWorld
                        Language.R.Instance.runRegion3
                        s1 of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.catch#
                        @ [GHC.Int.Int32]
                        @ GHC.Exception.SomeException
                        (GHC.Prim.unmaskAsyncExceptions#
                           @ [GHC.Int.Int32]
                           (\ (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                            case Test.Matcher.tests51
                                   (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                     `cast`
                                   (Trans
                                        (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                        (Nth:2
                                             (Trans
                                                  (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                            <*>_N
                                                            <GHC.IORef.IORef GHC.Types.Int>_R
                                                            <GHC.Types.IO>_R
                                                            <[GHC.Int.Int32]>_N))
                                                  (Nth:3
                                                       (Nth:3
                                                            (Trans
                                                                 (<Control.Monad.Trans.Reader.ReaderT
                                                                     (GHC.IORef.IORef GHC.Types.Int)
                                                                     GHC.Types.IO
                                                                     (Foreign.R.Internal.SomeSEXP
                                                                        GHC.Types.Any)>_R
                                                                  ->_R <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any
                                                                        -> Control.Monad.Trans.Reader.ReaderT
                                                                             (GHC.IORef.IORef
                                                                                GHC.Types.Int)
                                                                             GHC.Types.IO
                                                                             [GHC.Int.Int32]>_R
                                                                  ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                           <*>_N
                                                                           <GHC.IORef.IORef
                                                                              GHC.Types.Int>_R
                                                                           <GHC.Types.IO>_R
                                                                           <[GHC.Int.Int32]>_N)
                                                                 (<Control.Monad.Trans.Reader.ReaderT
                                                                     (GHC.IORef.IORef GHC.Types.Int)
                                                                     GHC.Types.IO
                                                                     (Foreign.R.Internal.SomeSEXP
                                                                        GHC.Types.Any)>_R
                                                                  ->_R <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any
                                                                        -> Control.Monad.Trans.Reader.ReaderT
                                                                             (GHC.IORef.IORef
                                                                                GHC.Types.Int)
                                                                             GHC.Types.IO
                                                                             [GHC.Int.Int32]>_R
                                                                  ->_R <GHC.IORef.IORef
                                                                          GHC.Types.Int>_R
                                                                  ->_R GHC.Types.N:IO[0]
                                                                           <[GHC.Int.Int32]>_R)))))))
                                   s2 of ds3 { (#,#) ipv4 ipv5 ->
                            case Test.Matcher.tests_go1 ipv5 of wild { () -> ds3 } }))
                        (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                           (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.readMutVar#
                                @ GHC.Prim.RealWorld
                                @ GHC.Types.Int
                                ipv3
                                s2 of ds3 { (#,#) ipv4 ipv5 ->
                         case ipv5 of wild { GHC.Types.I# x# ->
                         case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                                               -> (# GHC.Prim.State#
                                                                       GHC.Prim.RealWorld #)}
                                (GHC.Prim.narrow32Int# x#)
                                ipv4 of wild1 { Unit# ds4 ->
                         GHC.Prim.raiseIO#
                           @ GHC.Exception.SomeException
                           @ [GHC.Int.Int32]
                           e1
                           ds4 } } })
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        ipv3
                        ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                 case ipv8 of wild { GHC.Types.I# x# ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        (GHC.Prim.narrow32Int# x#)
                        ipv7 of wild1 { Unit# ds5 ->
                 (# ds5, ipv5 #) } } } } }) -}
7140169b7d11ba2d6395dd8b5cbccfff
  tests51 ::
    GHC.IORef.IORef GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Int.Int32] #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (r1 :: GHC.IORef.IORef GHC.Types.Int)[OneShot]
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Foreign.R.Internal.SomeSEXP Control.Memory.Region.V #)
                        Test.Matcher.tests39 of ds { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Foreign.R.Internal.SomeSEXP a dt ->
                 case Language.R.Globals.nilValue
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.G>_P <'Foreign.R.Type.Nil>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.G
                                 'Foreign.R.Type.Nil, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        dt
                        ds3
                        s of wild1 { (#,#) ds4 ds5 ->
                 case ((Language.R.$wevalEnv
                          @ (Language.R.Instance.R GHC.Types.Any)
                          @ Control.Memory.Region.V
                          @ 'Foreign.R.Type.Lang
                          (Language.R.Instance.$fMonadRR @ GHC.Types.Any)
                          ds5
                          Language.R.Globals.globalEnv
                            `cast`
                          (Trans
                               (Foreign.R.Internal.N:SEXP[0]
                                    <Control.Memory.Region.G>_P <'Foreign.R.Type.Env>_P)
                               (Trans
                                    (GHC.Ptr.Ptr
                                       <Language.R.HExp.HExp
                                          Control.Memory.Region.G
                                          'Foreign.R.Type.Env, Language.R.HExp.HExp
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Env>)_R
                                    (Sym (Foreign.R.Internal.N:SEXP[0]
                                              <Control.Memory.Region.V>_P
                                              <'Foreign.R.Type.Env>_P)))))
                         `cast`
                       (Trans
                            (Nth:3
                                 (Trans
                                      (<Foreign.R.Internal.SEXP
                                          Control.Memory.Region.V 'Foreign.R.Type.Lang>_R
                                       ->_R (Language.R.Instance.R
                                               <GHC.Types.Any>_P
                                               (Foreign.R.Internal.SomeSEXP
                                                  (Language.R.Instance.D:R:PrimStateR[0]
                                                       <GHC.Types.Any>_N))_N)_R)
                                      (Trans
                                           (<Foreign.R.Internal.SEXP
                                               Control.Memory.Region.V 'Foreign.R.Type.Lang>_R
                                            ->_R Language.R.Instance.N:R[0]
                                                     <GHC.Types.Any>_P <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any>_N)
                                           (Nth:2
                                                (Nth:3
                                                     (Trans
                                                          (<Control.Monad.Trans.Reader.ReaderT
                                                              (GHC.IORef.IORef GHC.Types.Int)
                                                              GHC.Types.IO
                                                              (Foreign.R.Internal.SEXP
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Lang)>_R
                                                           ->_R <Foreign.R.Internal.SEXP
                                                                   Control.Memory.Region.V
                                                                   'Foreign.R.Type.Lang
                                                                 -> Control.Monad.Trans.Reader.ReaderT
                                                                      (GHC.IORef.IORef
                                                                         GHC.Types.Int)
                                                                      GHC.Types.IO
                                                                      (Foreign.R.Internal.SomeSEXP
                                                                         GHC.Types.Any)>_R
                                                           ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                    <*>_N
                                                                    <GHC.IORef.IORef
                                                                       GHC.Types.Int>_R
                                                                    <GHC.Types.IO>_R
                                                                    <Foreign.R.Internal.SomeSEXP
                                                                       GHC.Types.Any>_N)
                                                          (<Control.Monad.Trans.Reader.ReaderT
                                                              (GHC.IORef.IORef GHC.Types.Int)
                                                              GHC.Types.IO
                                                              (Foreign.R.Internal.SEXP
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Lang)>_R
                                                           ->_R <Foreign.R.Internal.SEXP
                                                                   Control.Memory.Region.V
                                                                   'Foreign.R.Type.Lang
                                                                 -> Control.Monad.Trans.Reader.ReaderT
                                                                      (GHC.IORef.IORef
                                                                         GHC.Types.Int)
                                                                      GHC.Types.IO
                                                                      (Foreign.R.Internal.SomeSEXP
                                                                         GHC.Types.Any)>_R
                                                           ->_R <GHC.IORef.IORef GHC.Types.Int>_R
                                                           ->_R GHC.Types.N:IO[0]
                                                                    <Foreign.R.Internal.SomeSEXP
                                                                       GHC.Types.Any>_R)))))))
                            (Control.Monad.Trans.Reader.N:ReaderT[0]
                                 <*>_N
                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                 <GHC.Types.IO>_R
                                 <Foreign.R.Internal.SomeSEXP GHC.Types.Any>_N))
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP GHC.Types.Any>_R)
                        ds4 of ds1 { (#,#) ipv2 ipv3 ->
                 case ((Language.R.Matcher.lookupAttribute2
                          @ GHC.Types.Any
                          (GHC.CString.unpackCString# Test.Matcher.tests36)
                          @ (Language.R.Instance.R
                               GHC.Types.Any
                               (Data.Either.Either
                                  (Language.R.Matcher.MatcherError GHC.Types.Any)
                                  (Foreign.R.Internal.SomeSEXP GHC.Types.Any)))
                          ipv3
                          Test.Matcher.tests56
                            `cast`
                          (<Foreign.R.Internal.SomeSEXP GHC.Types.Any>_R
                           ->_R Trans
                                    (<GHC.IORef.IORef GHC.Types.Int>_R
                                     ->_R Sym (GHC.Types.N:IO[0]
                                                   <Data.Either.Either
                                                      (Language.R.Matcher.MatcherError
                                                         GHC.Types.Any)
                                                      (Foreign.R.Internal.SomeSEXP
                                                         GHC.Types.Any)>_R))
                                    (Trans
                                         (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                   <*>_N
                                                   <GHC.IORef.IORef GHC.Types.Int>_R
                                                   <GHC.Types.IO>_R
                                                   <Data.Either.Either
                                                      (Language.R.Matcher.MatcherError
                                                         GHC.Types.Any)
                                                      (Foreign.R.Internal.SomeSEXP
                                                         GHC.Types.Any)>_N))
                                         (Sym (Language.R.Instance.N:R[0]
                                                   <GHC.Types.Any>_P) <Data.Either.Either
                                                                         (Language.R.Matcher.MatcherError
                                                                            GHC.Types.Any)
                                                                         (Foreign.R.Internal.SomeSEXP
                                                                            GHC.Types.Any)>_N)))
                          Test.Matcher.tests55)
                         `cast`
                       (Trans
                            (Language.R.Instance.N:R[0] <GHC.Types.Any>_P <Data.Either.Either
                                                                             (Language.R.Matcher.MatcherError
                                                                                GHC.Types.Any)
                                                                             (Foreign.R.Internal.SomeSEXP
                                                                                GHC.Types.Any)>_N)
                            (Trans
                                 (Nth:2
                                      (Trans
                                           (<Control.Monad.Trans.Reader.ReaderT
                                               (GHC.IORef.IORef GHC.Types.Int)
                                               GHC.Types.IO
                                               (Data.Either.Either
                                                  (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                  (Foreign.R.Internal.SomeSEXP GHC.Types.Any))>_R
                                            ->_R <Data.Either.Either
                                                    (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                    (Foreign.R.Internal.SomeSEXP GHC.Types.Any)
                                                  -> Control.Monad.Trans.Reader.ReaderT
                                                       (GHC.IORef.IORef GHC.Types.Int)
                                                       GHC.Types.IO
                                                       [GHC.Int.Int32]>_R
                                            ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                     <*>_N
                                                     <GHC.IORef.IORef GHC.Types.Int>_R
                                                     <GHC.Types.IO>_R
                                                     <[GHC.Int.Int32]>_N)
                                           (<Control.Monad.Trans.Reader.ReaderT
                                               (GHC.IORef.IORef GHC.Types.Int)
                                               GHC.Types.IO
                                               (Data.Either.Either
                                                  (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                  (Foreign.R.Internal.SomeSEXP GHC.Types.Any))>_R
                                            ->_R <Data.Either.Either
                                                    (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                    (Foreign.R.Internal.SomeSEXP GHC.Types.Any)
                                                  -> Control.Monad.Trans.Reader.ReaderT
                                                       (GHC.IORef.IORef GHC.Types.Int)
                                                       GHC.Types.IO
                                                       [GHC.Int.Int32]>_R
                                            ->_R <GHC.IORef.IORef GHC.Types.Int>_R
                                            ->_R GHC.Types.N:IO[0] <[GHC.Int.Int32]>_R)))
                                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                                      <*>_N
                                      <GHC.IORef.IORef GHC.Types.Int>_R
                                      <GHC.Types.IO>_R
                                      <Data.Either.Either
                                         (Language.R.Matcher.MatcherError GHC.Types.Any)
                                         (Foreign.R.Internal.SomeSEXP GHC.Types.Any)>_N)))
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <Data.Either.Either
                              (Language.R.Matcher.MatcherError GHC.Types.Any)
                              (Foreign.R.Internal.SomeSEXP GHC.Types.Any)>_R)
                        ipv2 of ds7 { (#,#) ipv4 ipv5 ->
                 case ipv5 of wild2 {
                   Data.Either.Left ipv6
                   -> (GHC.Magic.noinline
                         @ (forall a1. [GHC.Types.Char] -> GHC.Types.IO a1)
                         GHC.IO.failIO1
                           `cast`
                         (forall (a1 :: <*>_N).
                          <GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <a1>_R))
                         @ [GHC.Int.Int32]
                         Test.Matcher.tests53)
                        `cast`
                      (GHC.Types.N:IO[0] <[GHC.Int.Int32]>_R)
                        ipv4
                   Data.Either.Right t
                   -> (# ipv4,
                         case Foreign.R.Internal.$wunsafeCast
                                @ GHC.Types.Any
                                @ 'Foreign.R.Type.Int
                                Test.Matcher.tests52
                                  `cast`
                                (Sub (Foreign.R.Type.D:R:DemoteSEXPTYPE[0]))
                                t of ww { DEFAULT ->
                         Language.R.Literal.$w$cfromSEXP5
                           @ GHC.Types.Any
                           ww } #) } } } } } } }) -}
75b3866600de34ba64fbee62141953b3
  tests52 :: Data.Singletons.Demote Foreign.R.Type.SEXPTYPE
  {- Unfolding: (Foreign.R.Type.$fSingKindSEXPTYPE_$cfromSing
                   @ 'Foreign.R.Type.Int
                   Test.Matcher.tests37
                     `cast`
                   (Sym (Foreign.R.Type.D:R:SingSEXPTYPEz0[0]) <'Foreign.R.Type.Int>_N)) -}
694a794565e67b33c4605f9db9010d64
  tests53 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests54) -}
6bf6fa7781e944ddbe5c6e4d4db94c3a
  tests54 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Pattern match failure in do expression at tests/Test/Matcher.hs:51:8-14"#) -}
e0969976afc316b0606a9089999345a2
  tests55 ::
    Language.R.Matcher.MatcherError GHC.Types.Any
    -> Language.R.Instance.R
         GHC.Types.Any
         (Data.Either.Either
            (Language.R.Matcher.MatcherError GHC.Types.Any)
            (Foreign.R.Internal.SomeSEXP GHC.Types.Any))
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>,
     Unfolding: (\ (x :: Language.R.Matcher.MatcherError
                           GHC.Types.Any)[OneShot] ->
                 let {
                   x1 :: Data.Either.Either
                           (Language.R.Matcher.MatcherError GHC.Types.Any)
                           (Foreign.R.Internal.SomeSEXP GHC.Types.Any)
                   = case Language.R.Matcher.$fNFDataMatcherError_$crnf
                            @ GHC.Types.Any
                            x of wild { () ->
                     Data.Either.Left
                       @ (Language.R.Matcher.MatcherError GHC.Types.Any)
                       @ (Foreign.R.Internal.SomeSEXP GHC.Types.Any)
                       x }
                 } in
                 (\ (eta :: GHC.IORef.IORef GHC.Types.Int)
                    (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  (# eta1, x1 #))
                   `cast`
                 (Nth:3
                      (Trans
                           (<Data.Either.Either
                               (Language.R.Matcher.MatcherError GHC.Types.Any)
                               (Foreign.R.Internal.SomeSEXP GHC.Types.Any)>_R
                            ->_R Trans
                                     (<GHC.IORef.IORef GHC.Types.Int>_R
                                      ->_R Sym (GHC.Types.N:IO[0]
                                                    <Data.Either.Either
                                                       (Language.R.Matcher.MatcherError
                                                          GHC.Types.Any)
                                                       (Foreign.R.Internal.SomeSEXP
                                                          GHC.Types.Any)>_R))
                                     (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                               <*>_N
                                               <GHC.IORef.IORef GHC.Types.Int>_R
                                               <GHC.Types.IO>_R
                                               <Data.Either.Either
                                                  (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                  (Foreign.R.Internal.SomeSEXP GHC.Types.Any)>_N)))
                           (<Data.Either.Either
                               (Language.R.Matcher.MatcherError GHC.Types.Any)
                               (Foreign.R.Internal.SomeSEXP GHC.Types.Any)>_R
                            ->_R Sym (Language.R.Instance.N:R[0]
                                          <GHC.Types.Any>_P) <Data.Either.Either
                                                                (Language.R.Matcher.MatcherError
                                                                   GHC.Types.Any)
                                                                (Foreign.R.Internal.SomeSEXP
                                                                   GHC.Types.Any)>_N)))) -}
a38ed0a7963e4b42083b69b30b250a87
  tests56 ::
    Foreign.R.Internal.SomeSEXP GHC.Types.Any
    -> GHC.IORef.IORef GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            (Language.R.Matcher.MatcherError GHC.Types.Any)
            (Foreign.R.Internal.SomeSEXP GHC.Types.Any) #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*U><L,A><S,U>,
     Unfolding: (\ (x :: Foreign.R.Internal.SomeSEXP
                           GHC.Types.Any)[OneShot]
                   (eta :: GHC.IORef.IORef GHC.Types.Int)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# eta1,
                    case x of ds1 { Foreign.R.Internal.SomeSEXP ipv ipv1 ->
                    Data.Either.Right
                      @ (Language.R.Matcher.MatcherError GHC.Types.Any)
                      @ (Foreign.R.Internal.SomeSEXP GHC.Types.Any)
                      ds1 } #)) -}
09099f5355bcf8a4247ba9ff18fa6770
  tests57 :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Test.Matcher.tests71
                   Test.Matcher.tests58
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
a0e3ba4c0d9d33af3dfe401053b80250
  tests58 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.getMaskingState# s of ds { (#,#) ipv ipv1 ->
                 case ipv1 of ds1 {
                   DEFAULT
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Language.R.Instance.runRegion3
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ GHC.Types.Bool
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskAsyncExceptions#
                                @ GHC.Types.Bool
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Test.Matcher.tests60
                                        (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                          `cast`
                                        (Trans
                                             (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                             (Nth:2
                                                  (Trans
                                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                 <*>_N
                                                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                                                 <GHC.Types.IO>_R
                                                                 <GHC.Types.Bool>_N))
                                                       (Nth:3
                                                            (Nth:3
                                                                 (Trans
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  GHC.Types.Bool>_R
                                                                       ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                <*>_N
                                                                                <GHC.IORef.IORef
                                                                                   GHC.Types.Int>_R
                                                                                <GHC.Types.IO>_R
                                                                                <GHC.Types.Bool>_N)
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  GHC.Types.Bool>_R
                                                                       ->_R <GHC.IORef.IORef
                                                                               GHC.Types.Int>_R
                                                                       ->_R GHC.Types.N:IO[0]
                                                                                <GHC.Types.Bool>_R)))))))
                                        s1 of ds3 { (#,#) ipv4 ipv5 ->
                                 case ipv5 of ds4 { DEFAULT -> ds3 } }))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.readMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv3
                                     s1 of ds3 { (#,#) ipv4 ipv5 ->
                              case ipv5 of wild { GHC.Types.I# x# ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld #)}
                                     (GHC.Prim.narrow32Int# x#)
                                     ipv4 of wild1 { Unit# ds4 ->
                              GHC.Prim.raiseIO#
                                @ GHC.Exception.SomeException
                                @ GHC.Types.Bool
                                e1
                                ds4 } } })
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             ipv3
                             ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                      case ipv8 of wild { GHC.Types.I# x# ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld #)}
                             (GHC.Prim.narrow32Int# x#)
                             ipv7 of wild1 { Unit# ds5 ->
                      case ipv5 of wild2 {
                        GHC.Types.False
                        -> case Test.Matcher.tests70 ds5
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True
                        -> (# ds5, GHC.Types.[] @ GHC.Types.Char #) } } } } } }
                   0#
                   -> case GHC.Prim.maskAsyncExceptions#
                             @ GHC.Types.Bool
                             Test.Matcher.tests59
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ipv3 of wild {
                        GHC.Types.False
                        -> case Test.Matcher.tests70 ipv2
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True -> (# ipv2, GHC.Types.[] @ GHC.Types.Char #) } }
                   1#
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Language.R.Instance.runRegion3
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ GHC.Types.Bool
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskUninterruptible#
                                @ GHC.Types.Bool
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Test.Matcher.tests60
                                        (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                          `cast`
                                        (Trans
                                             (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                             (Nth:2
                                                  (Trans
                                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                 <*>_N
                                                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                                                 <GHC.Types.IO>_R
                                                                 <GHC.Types.Bool>_N))
                                                       (Nth:3
                                                            (Nth:3
                                                                 (Trans
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  GHC.Types.Bool>_R
                                                                       ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                <*>_N
                                                                                <GHC.IORef.IORef
                                                                                   GHC.Types.Int>_R
                                                                                <GHC.Types.IO>_R
                                                                                <GHC.Types.Bool>_N)
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  GHC.Types.Bool>_R
                                                                       ->_R <GHC.IORef.IORef
                                                                               GHC.Types.Int>_R
                                                                       ->_R GHC.Types.N:IO[0]
                                                                                <GHC.Types.Bool>_R)))))))
                                        s1 of ds3 { (#,#) ipv4 ipv5 ->
                                 case ipv5 of ds4 { DEFAULT -> ds3 } }))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.readMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv3
                                     s1 of ds3 { (#,#) ipv4 ipv5 ->
                              case ipv5 of wild { GHC.Types.I# x# ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld #)}
                                     (GHC.Prim.narrow32Int# x#)
                                     ipv4 of wild1 { Unit# ds4 ->
                              GHC.Prim.raiseIO#
                                @ GHC.Exception.SomeException
                                @ GHC.Types.Bool
                                e1
                                ds4 } } })
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             ipv3
                             ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                      case ipv8 of wild { GHC.Types.I# x# ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld #)}
                             (GHC.Prim.narrow32Int# x#)
                             ipv7 of wild1 { Unit# ds5 ->
                      case ipv5 of wild2 {
                        GHC.Types.False
                        -> case Test.Matcher.tests70 ds5
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True
                        -> (# ds5, GHC.Types.[] @ GHC.Types.Char #) } } } } } } } }) -}
cf759cf85ea70a4c37e4c9f53c4aed41
  tests59 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newMutVar#
                        @ GHC.Types.Int
                        @ GHC.Prim.RealWorld
                        Language.R.Instance.runRegion3
                        s1 of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.catch#
                        @ GHC.Types.Bool
                        @ GHC.Exception.SomeException
                        (GHC.Prim.unmaskAsyncExceptions#
                           @ GHC.Types.Bool
                           (\ (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                            case Test.Matcher.tests60
                                   (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                     `cast`
                                   (Trans
                                        (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                        (Nth:2
                                             (Trans
                                                  (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                            <*>_N
                                                            <GHC.IORef.IORef GHC.Types.Int>_R
                                                            <GHC.Types.IO>_R
                                                            <GHC.Types.Bool>_N))
                                                  (Nth:3
                                                       (Nth:3
                                                            (Trans
                                                                 (<Control.Monad.Trans.Reader.ReaderT
                                                                     (GHC.IORef.IORef GHC.Types.Int)
                                                                     GHC.Types.IO
                                                                     (Foreign.R.Internal.SomeSEXP
                                                                        GHC.Types.Any)>_R
                                                                  ->_R <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any
                                                                        -> Control.Monad.Trans.Reader.ReaderT
                                                                             (GHC.IORef.IORef
                                                                                GHC.Types.Int)
                                                                             GHC.Types.IO
                                                                             GHC.Types.Bool>_R
                                                                  ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                           <*>_N
                                                                           <GHC.IORef.IORef
                                                                              GHC.Types.Int>_R
                                                                           <GHC.Types.IO>_R
                                                                           <GHC.Types.Bool>_N)
                                                                 (<Control.Monad.Trans.Reader.ReaderT
                                                                     (GHC.IORef.IORef GHC.Types.Int)
                                                                     GHC.Types.IO
                                                                     (Foreign.R.Internal.SomeSEXP
                                                                        GHC.Types.Any)>_R
                                                                  ->_R <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any
                                                                        -> Control.Monad.Trans.Reader.ReaderT
                                                                             (GHC.IORef.IORef
                                                                                GHC.Types.Int)
                                                                             GHC.Types.IO
                                                                             GHC.Types.Bool>_R
                                                                  ->_R <GHC.IORef.IORef
                                                                          GHC.Types.Int>_R
                                                                  ->_R GHC.Types.N:IO[0]
                                                                           <GHC.Types.Bool>_R)))))))
                                   s2 of ds3 { (#,#) ipv4 ipv5 ->
                            case ipv5 of ds1 { DEFAULT -> ds3 } }))
                        (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                           (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.readMutVar#
                                @ GHC.Prim.RealWorld
                                @ GHC.Types.Int
                                ipv3
                                s2 of ds3 { (#,#) ipv4 ipv5 ->
                         case ipv5 of wild { GHC.Types.I# x# ->
                         case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                                               -> (# GHC.Prim.State#
                                                                       GHC.Prim.RealWorld #)}
                                (GHC.Prim.narrow32Int# x#)
                                ipv4 of wild1 { Unit# ds4 ->
                         GHC.Prim.raiseIO#
                           @ GHC.Exception.SomeException
                           @ GHC.Types.Bool
                           e1
                           ds4 } } })
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        ipv3
                        ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                 case ipv8 of wild { GHC.Types.I# x# ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        (GHC.Prim.narrow32Int# x#)
                        ipv7 of wild1 { Unit# ds5 ->
                 (# ds5, ipv5 #) } } } } }) -}
c134acb97cd1b8b2acf0a76867ae52b9
  tests6 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Test.Matcher.tests57
                   Test.Matcher.tests7) -}
95a6974ca308c26d14705cb7e1c5aceb
  tests60 ::
    GHC.IORef.IORef GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (r1 :: GHC.IORef.IORef GHC.Types.Int)[OneShot]
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Foreign.R.Internal.SomeSEXP Control.Memory.Region.V #)
                        Test.Matcher.tests67 of ds { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Foreign.R.Internal.SomeSEXP a dt ->
                 case Language.R.Globals.nilValue
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.G>_P <'Foreign.R.Type.Nil>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.G
                                 'Foreign.R.Type.Nil, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        dt
                        ds3
                        s of wild1 { (#,#) ds4 ds5 ->
                 case ((Language.R.$wevalEnv
                          @ (Language.R.Instance.R GHC.Types.Any)
                          @ Control.Memory.Region.V
                          @ 'Foreign.R.Type.Lang
                          (Language.R.Instance.$fMonadRR @ GHC.Types.Any)
                          ds5
                          Language.R.Globals.globalEnv
                            `cast`
                          (Trans
                               (Foreign.R.Internal.N:SEXP[0]
                                    <Control.Memory.Region.G>_P <'Foreign.R.Type.Env>_P)
                               (Trans
                                    (GHC.Ptr.Ptr
                                       <Language.R.HExp.HExp
                                          Control.Memory.Region.G
                                          'Foreign.R.Type.Env, Language.R.HExp.HExp
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Env>)_R
                                    (Sym (Foreign.R.Internal.N:SEXP[0]
                                              <Control.Memory.Region.V>_P
                                              <'Foreign.R.Type.Env>_P)))))
                         `cast`
                       (Trans
                            (Nth:3
                                 (Trans
                                      (<Foreign.R.Internal.SEXP
                                          Control.Memory.Region.V 'Foreign.R.Type.Lang>_R
                                       ->_R (Language.R.Instance.R
                                               <GHC.Types.Any>_P
                                               (Foreign.R.Internal.SomeSEXP
                                                  (Language.R.Instance.D:R:PrimStateR[0]
                                                       <GHC.Types.Any>_N))_N)_R)
                                      (Trans
                                           (<Foreign.R.Internal.SEXP
                                               Control.Memory.Region.V 'Foreign.R.Type.Lang>_R
                                            ->_R Language.R.Instance.N:R[0]
                                                     <GHC.Types.Any>_P <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any>_N)
                                           (Nth:2
                                                (Nth:3
                                                     (Trans
                                                          (<Control.Monad.Trans.Reader.ReaderT
                                                              (GHC.IORef.IORef GHC.Types.Int)
                                                              GHC.Types.IO
                                                              (Foreign.R.Internal.SEXP
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Lang)>_R
                                                           ->_R <Foreign.R.Internal.SEXP
                                                                   Control.Memory.Region.V
                                                                   'Foreign.R.Type.Lang
                                                                 -> Control.Monad.Trans.Reader.ReaderT
                                                                      (GHC.IORef.IORef
                                                                         GHC.Types.Int)
                                                                      GHC.Types.IO
                                                                      (Foreign.R.Internal.SomeSEXP
                                                                         GHC.Types.Any)>_R
                                                           ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                    <*>_N
                                                                    <GHC.IORef.IORef
                                                                       GHC.Types.Int>_R
                                                                    <GHC.Types.IO>_R
                                                                    <Foreign.R.Internal.SomeSEXP
                                                                       GHC.Types.Any>_N)
                                                          (<Control.Monad.Trans.Reader.ReaderT
                                                              (GHC.IORef.IORef GHC.Types.Int)
                                                              GHC.Types.IO
                                                              (Foreign.R.Internal.SEXP
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Lang)>_R
                                                           ->_R <Foreign.R.Internal.SEXP
                                                                   Control.Memory.Region.V
                                                                   'Foreign.R.Type.Lang
                                                                 -> Control.Monad.Trans.Reader.ReaderT
                                                                      (GHC.IORef.IORef
                                                                         GHC.Types.Int)
                                                                      GHC.Types.IO
                                                                      (Foreign.R.Internal.SomeSEXP
                                                                         GHC.Types.Any)>_R
                                                           ->_R <GHC.IORef.IORef GHC.Types.Int>_R
                                                           ->_R GHC.Types.N:IO[0]
                                                                    <Foreign.R.Internal.SomeSEXP
                                                                       GHC.Types.Any>_R)))))))
                            (Control.Monad.Trans.Reader.N:ReaderT[0]
                                 <*>_N
                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                 <GHC.Types.IO>_R
                                 <Foreign.R.Internal.SomeSEXP GHC.Types.Any>_N))
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP GHC.Types.Any>_R)
                        ds4 of ds1 { (#,#) ipv2 ipv3 ->
                 case ((Language.R.Matcher.guardType1
                          @ GHC.Types.Any
                          Foreign.R.Type.Int
                          @ (Language.R.Instance.R
                               GHC.Types.Any
                               (Data.Either.Either
                                  (Language.R.Matcher.MatcherError GHC.Types.Any) GHC.Types.Bool))
                          ipv3
                          Test.Matcher.tests65
                            `cast`
                          (<()>_R
                           ->_R Trans
                                    (<GHC.IORef.IORef GHC.Types.Int>_R
                                     ->_R Sym (GHC.Types.N:IO[0]
                                                   <Data.Either.Either
                                                      (Language.R.Matcher.MatcherError
                                                         GHC.Types.Any)
                                                      GHC.Types.Bool>_R))
                                    (Trans
                                         (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                   <*>_N
                                                   <GHC.IORef.IORef GHC.Types.Int>_R
                                                   <GHC.Types.IO>_R
                                                   <Data.Either.Either
                                                      (Language.R.Matcher.MatcherError
                                                         GHC.Types.Any)
                                                      GHC.Types.Bool>_N))
                                         (Sym (Language.R.Instance.N:R[0]
                                                   <GHC.Types.Any>_P) <Data.Either.Either
                                                                         (Language.R.Matcher.MatcherError
                                                                            GHC.Types.Any)
                                                                         GHC.Types.Bool>_N)))
                          Test.Matcher.tests63
                            `cast`
                          (<Language.R.Matcher.MatcherError GHC.Types.Any>_R
                           ->_R Trans
                                    (<GHC.IORef.IORef GHC.Types.Int>_R
                                     ->_R Sym (GHC.Types.N:IO[0]
                                                   <Data.Either.Either
                                                      (Language.R.Matcher.MatcherError
                                                         GHC.Types.Any)
                                                      GHC.Types.Bool>_R))
                                    (Trans
                                         (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                   <*>_N
                                                   <GHC.IORef.IORef GHC.Types.Int>_R
                                                   <GHC.Types.IO>_R
                                                   <Data.Either.Either
                                                      (Language.R.Matcher.MatcherError
                                                         GHC.Types.Any)
                                                      GHC.Types.Bool>_N))
                                         (Sym (Language.R.Instance.N:R[0]
                                                   <GHC.Types.Any>_P) <Data.Either.Either
                                                                         (Language.R.Matcher.MatcherError
                                                                            GHC.Types.Any)
                                                                         GHC.Types.Bool>_N))))
                         `cast`
                       (Trans
                            (Language.R.Instance.N:R[0] <GHC.Types.Any>_P <Data.Either.Either
                                                                             (Language.R.Matcher.MatcherError
                                                                                GHC.Types.Any)
                                                                             GHC.Types.Bool>_N)
                            (Trans
                                 (Nth:2
                                      (Trans
                                           (<Control.Monad.Trans.Reader.ReaderT
                                               (GHC.IORef.IORef GHC.Types.Int)
                                               GHC.Types.IO
                                               (Data.Either.Either
                                                  (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                  GHC.Types.Bool)>_R
                                            ->_R <Data.Either.Either
                                                    (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                    GHC.Types.Bool
                                                  -> Control.Monad.Trans.Reader.ReaderT
                                                       (GHC.IORef.IORef GHC.Types.Int)
                                                       GHC.Types.IO
                                                       GHC.Types.Bool>_R
                                            ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                     <*>_N
                                                     <GHC.IORef.IORef GHC.Types.Int>_R
                                                     <GHC.Types.IO>_R
                                                     <GHC.Types.Bool>_N)
                                           (<Control.Monad.Trans.Reader.ReaderT
                                               (GHC.IORef.IORef GHC.Types.Int)
                                               GHC.Types.IO
                                               (Data.Either.Either
                                                  (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                  GHC.Types.Bool)>_R
                                            ->_R <Data.Either.Either
                                                    (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                    GHC.Types.Bool
                                                  -> Control.Monad.Trans.Reader.ReaderT
                                                       (GHC.IORef.IORef GHC.Types.Int)
                                                       GHC.Types.IO
                                                       GHC.Types.Bool>_R
                                            ->_R <GHC.IORef.IORef GHC.Types.Int>_R
                                            ->_R GHC.Types.N:IO[0] <GHC.Types.Bool>_R)))
                                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                                      <*>_N
                                      <GHC.IORef.IORef GHC.Types.Int>_R
                                      <GHC.Types.IO>_R
                                      <Data.Either.Either
                                         (Language.R.Matcher.MatcherError GHC.Types.Any)
                                         GHC.Types.Bool>_N)))
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <Data.Either.Either
                              (Language.R.Matcher.MatcherError GHC.Types.Any) GHC.Types.Bool>_R)
                        ipv2 of ds7 { (#,#) ipv4 ipv5 ->
                 case ipv5 of wild2 {
                   Data.Either.Left ipv6
                   -> (GHC.Magic.noinline
                         @ (forall a1. [GHC.Types.Char] -> GHC.Types.IO a1)
                         GHC.IO.failIO1
                           `cast`
                         (forall (a1 :: <*>_N).
                          <GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <a1>_R))
                         @ GHC.Types.Bool
                         Test.Matcher.tests61)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)
                        ipv4
                   Data.Either.Right t -> (# ipv4, t #) } } } } } } }) -}
b063d750d6fc621e1d084dd31d4abea6
  tests61 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests62) -}
697034472e645fdbc0186079a9a81523
  tests62 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Pattern match failure in do expression at tests/Test/Matcher.hs:46:8-14"#) -}
3b8f1360ec10e0cb447f3c71b107a8dd
  tests63 ::
    Language.R.Matcher.MatcherError GHC.Types.Any
    -> GHC.IORef.IORef GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            (Language.R.Matcher.MatcherError GHC.Types.Any) GHC.Types.Bool #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><S,U>,
     Unfolding: (\ (e' :: Language.R.Matcher.MatcherError GHC.Types.Any)
                   (eta :: GHC.IORef.IORef GHC.Types.Int)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# eta1, Test.Matcher.tests64 #)) -}
caabff969c55443888af6640526a3817
  tests64 ::
    Data.Either.Either
      (Language.R.Matcher.MatcherError GHC.Types.Any) GHC.Types.Bool
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Either.Right
                   @ (Language.R.Matcher.MatcherError GHC.Types.Any)
                   @ GHC.Types.Bool
                   GHC.Types.True) -}
0985ee8d932bc4cc89fc32451e217d92
  tests65 ::
    ()
    -> GHC.IORef.IORef GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            (Language.R.Matcher.MatcherError GHC.Types.Any) GHC.Types.Bool #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><S,U>,
     Unfolding: (\ (o :: ())[OneShot]
                   (eta :: GHC.IORef.IORef GHC.Types.Int)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# eta1, Test.Matcher.tests66 #)) -}
e38faf0323308a933705ff583b3758c1
  tests66 ::
    Data.Either.Either
      (Language.R.Matcher.MatcherError GHC.Types.Any) GHC.Types.Bool
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Either.Right
                   @ (Language.R.Matcher.MatcherError GHC.Types.Any)
                   @ GHC.Types.Bool
                   GHC.Types.False) -}
cafd3730f11a6b802830517b14970d70
  tests67 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP Control.Memory.Region.V #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.noDuplicate#
                        @ GHC.Prim.RealWorld
                        s of s' { DEFAULT ->
                 case Language.R.QQ.parse1
                        Test.Matcher.tests68
                        s' of ds1 { (#,#) ipv ipv1 ->
                 case ipv1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.V>_P <'Foreign.R.Type.Expr>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.V
                                 'Foreign.R.Type.Expr, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds2 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        ds2
                        0#
                        ipv of wild1 { (#,#) ds3 ds4 ->
                 case Language.R.Globals.globalEnv
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.G>_P <'Foreign.R.Type.Env>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.G
                                 'Foreign.R.Type.Env, Foreign.R.Internal.SEXPREC>)_R) of ds5 { GHC.Ptr.Ptr ds6 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        ds4
                        ds6
                        ds3 of wild { (#,#) ds7 ds8 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        ds8
                        ds7 of wild2 { Unit# ds9 ->
                 (# ds9,
                    Foreign.R.Internal.SomeSEXP
                      @ Control.Memory.Region.V
                      @ GHC.Types.Any
                      ds8 #) } } } } } } }) -}
e958e0d348b1727c84ba844e909a17b2
  tests68 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests69) -}
db23fdf1b46fcdc7d6359a3c9781d254
  tests69 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("function(){ 1.0 }"#) -}
9240c8d38b13a4ccd0cdb4087b1e2cf4
  tests7 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Test.Matcher.tests48
                   Test.Matcher.tests8) -}
5e7970219df433ef20ac3925101fae6d
  tests70 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <B,U>x -}
21aec7c830c7e8dcf76724a1cc250f3e
  tests71 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests72) -}
e3b5ed1452754b77494e2dced4d424cb
  tests72 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("guardType: fails"#) -}
51c542b55eb7cdbcdbe61569a97c7857
  tests73 :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Test.Matcher.tests84
                   Test.Matcher.tests74
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
6b35a38b3421f9301b6bcd09bca5a92c
  tests74 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.getMaskingState# s of ds { (#,#) ipv ipv1 ->
                 case ipv1 of ds1 {
                   DEFAULT
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Language.R.Instance.runRegion3
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ GHC.Types.Bool
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskAsyncExceptions#
                                @ GHC.Types.Bool
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Test.Matcher.tests76
                                        (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                          `cast`
                                        (Trans
                                             (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                             (Nth:2
                                                  (Trans
                                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                 <*>_N
                                                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                                                 <GHC.Types.IO>_R
                                                                 <GHC.Types.Bool>_N))
                                                       (Nth:3
                                                            (Nth:3
                                                                 (Trans
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  GHC.Types.Bool>_R
                                                                       ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                <*>_N
                                                                                <GHC.IORef.IORef
                                                                                   GHC.Types.Int>_R
                                                                                <GHC.Types.IO>_R
                                                                                <GHC.Types.Bool>_N)
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  GHC.Types.Bool>_R
                                                                       ->_R <GHC.IORef.IORef
                                                                               GHC.Types.Int>_R
                                                                       ->_R GHC.Types.N:IO[0]
                                                                                <GHC.Types.Bool>_R)))))))
                                        s1 of ds3 { (#,#) ipv4 ipv5 ->
                                 case ipv5 of ds4 { DEFAULT -> ds3 } }))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.readMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv3
                                     s1 of ds3 { (#,#) ipv4 ipv5 ->
                              case ipv5 of wild { GHC.Types.I# x# ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld #)}
                                     (GHC.Prim.narrow32Int# x#)
                                     ipv4 of wild1 { Unit# ds4 ->
                              GHC.Prim.raiseIO#
                                @ GHC.Exception.SomeException
                                @ GHC.Types.Bool
                                e1
                                ds4 } } })
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             ipv3
                             ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                      case ipv8 of wild { GHC.Types.I# x# ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld #)}
                             (GHC.Prim.narrow32Int# x#)
                             ipv7 of wild1 { Unit# ds5 ->
                      case ipv5 of wild2 {
                        GHC.Types.False
                        -> case Test.Matcher.tests70 ds5
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True
                        -> (# ds5, GHC.Types.[] @ GHC.Types.Char #) } } } } } }
                   0#
                   -> case GHC.Prim.maskAsyncExceptions#
                             @ GHC.Types.Bool
                             Test.Matcher.tests75
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ipv3 of wild {
                        GHC.Types.False
                        -> case Test.Matcher.tests70 ipv2
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True -> (# ipv2, GHC.Types.[] @ GHC.Types.Char #) } }
                   1#
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Language.R.Instance.runRegion3
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ GHC.Types.Bool
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskUninterruptible#
                                @ GHC.Types.Bool
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Test.Matcher.tests76
                                        (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                          `cast`
                                        (Trans
                                             (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                             (Nth:2
                                                  (Trans
                                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                 <*>_N
                                                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                                                 <GHC.Types.IO>_R
                                                                 <GHC.Types.Bool>_N))
                                                       (Nth:3
                                                            (Nth:3
                                                                 (Trans
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  GHC.Types.Bool>_R
                                                                       ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                <*>_N
                                                                                <GHC.IORef.IORef
                                                                                   GHC.Types.Int>_R
                                                                                <GHC.Types.IO>_R
                                                                                <GHC.Types.Bool>_N)
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  GHC.Types.Bool>_R
                                                                       ->_R <GHC.IORef.IORef
                                                                               GHC.Types.Int>_R
                                                                       ->_R GHC.Types.N:IO[0]
                                                                                <GHC.Types.Bool>_R)))))))
                                        s1 of ds3 { (#,#) ipv4 ipv5 ->
                                 case ipv5 of ds4 { DEFAULT -> ds3 } }))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.readMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv3
                                     s1 of ds3 { (#,#) ipv4 ipv5 ->
                              case ipv5 of wild { GHC.Types.I# x# ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld #)}
                                     (GHC.Prim.narrow32Int# x#)
                                     ipv4 of wild1 { Unit# ds4 ->
                              GHC.Prim.raiseIO#
                                @ GHC.Exception.SomeException
                                @ GHC.Types.Bool
                                e1
                                ds4 } } })
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             ipv3
                             ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                      case ipv8 of wild { GHC.Types.I# x# ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld #)}
                             (GHC.Prim.narrow32Int# x#)
                             ipv7 of wild1 { Unit# ds5 ->
                      case ipv5 of wild2 {
                        GHC.Types.False
                        -> case Test.Matcher.tests70 ds5
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True
                        -> (# ds5, GHC.Types.[] @ GHC.Types.Char #) } } } } } } } }) -}
6c0232b90ef09def31f885528af5e7a6
  tests75 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newMutVar#
                        @ GHC.Types.Int
                        @ GHC.Prim.RealWorld
                        Language.R.Instance.runRegion3
                        s1 of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.catch#
                        @ GHC.Types.Bool
                        @ GHC.Exception.SomeException
                        (GHC.Prim.unmaskAsyncExceptions#
                           @ GHC.Types.Bool
                           (\ (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                            case Test.Matcher.tests76
                                   (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                     `cast`
                                   (Trans
                                        (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                        (Nth:2
                                             (Trans
                                                  (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                            <*>_N
                                                            <GHC.IORef.IORef GHC.Types.Int>_R
                                                            <GHC.Types.IO>_R
                                                            <GHC.Types.Bool>_N))
                                                  (Nth:3
                                                       (Nth:3
                                                            (Trans
                                                                 (<Control.Monad.Trans.Reader.ReaderT
                                                                     (GHC.IORef.IORef GHC.Types.Int)
                                                                     GHC.Types.IO
                                                                     (Foreign.R.Internal.SomeSEXP
                                                                        GHC.Types.Any)>_R
                                                                  ->_R <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any
                                                                        -> Control.Monad.Trans.Reader.ReaderT
                                                                             (GHC.IORef.IORef
                                                                                GHC.Types.Int)
                                                                             GHC.Types.IO
                                                                             GHC.Types.Bool>_R
                                                                  ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                           <*>_N
                                                                           <GHC.IORef.IORef
                                                                              GHC.Types.Int>_R
                                                                           <GHC.Types.IO>_R
                                                                           <GHC.Types.Bool>_N)
                                                                 (<Control.Monad.Trans.Reader.ReaderT
                                                                     (GHC.IORef.IORef GHC.Types.Int)
                                                                     GHC.Types.IO
                                                                     (Foreign.R.Internal.SomeSEXP
                                                                        GHC.Types.Any)>_R
                                                                  ->_R <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any
                                                                        -> Control.Monad.Trans.Reader.ReaderT
                                                                             (GHC.IORef.IORef
                                                                                GHC.Types.Int)
                                                                             GHC.Types.IO
                                                                             GHC.Types.Bool>_R
                                                                  ->_R <GHC.IORef.IORef
                                                                          GHC.Types.Int>_R
                                                                  ->_R GHC.Types.N:IO[0]
                                                                           <GHC.Types.Bool>_R)))))))
                                   s2 of ds3 { (#,#) ipv4 ipv5 ->
                            case ipv5 of ds1 { DEFAULT -> ds3 } }))
                        (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                           (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.readMutVar#
                                @ GHC.Prim.RealWorld
                                @ GHC.Types.Int
                                ipv3
                                s2 of ds3 { (#,#) ipv4 ipv5 ->
                         case ipv5 of wild { GHC.Types.I# x# ->
                         case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                                               -> (# GHC.Prim.State#
                                                                       GHC.Prim.RealWorld #)}
                                (GHC.Prim.narrow32Int# x#)
                                ipv4 of wild1 { Unit# ds4 ->
                         GHC.Prim.raiseIO#
                           @ GHC.Exception.SomeException
                           @ GHC.Types.Bool
                           e1
                           ds4 } } })
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        ipv3
                        ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                 case ipv8 of wild { GHC.Types.I# x# ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        (GHC.Prim.narrow32Int# x#)
                        ipv7 of wild1 { Unit# ds5 ->
                 (# ds5, ipv5 #) } } } } }) -}
c6f673d8f42b6279cc795f265ad65856
  tests76 ::
    GHC.IORef.IORef GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (r1 :: GHC.IORef.IORef GHC.Types.Int)[OneShot]
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Foreign.R.Internal.SomeSEXP Control.Memory.Region.V #)
                        Test.Matcher.tests81 of ds { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Foreign.R.Internal.SomeSEXP a dt ->
                 case Language.R.Globals.nilValue
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.G>_P <'Foreign.R.Type.Nil>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.G
                                 'Foreign.R.Type.Nil, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        dt
                        ds3
                        s of wild1 { (#,#) ds4 ds5 ->
                 case ((Language.R.$wevalEnv
                          @ (Language.R.Instance.R GHC.Types.Any)
                          @ Control.Memory.Region.V
                          @ 'Foreign.R.Type.Lang
                          (Language.R.Instance.$fMonadRR @ GHC.Types.Any)
                          ds5
                          Language.R.Globals.globalEnv
                            `cast`
                          (Trans
                               (Foreign.R.Internal.N:SEXP[0]
                                    <Control.Memory.Region.G>_P <'Foreign.R.Type.Env>_P)
                               (Trans
                                    (GHC.Ptr.Ptr
                                       <Language.R.HExp.HExp
                                          Control.Memory.Region.G
                                          'Foreign.R.Type.Env, Language.R.HExp.HExp
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Env>)_R
                                    (Sym (Foreign.R.Internal.N:SEXP[0]
                                              <Control.Memory.Region.V>_P
                                              <'Foreign.R.Type.Env>_P)))))
                         `cast`
                       (Trans
                            (Nth:3
                                 (Trans
                                      (<Foreign.R.Internal.SEXP
                                          Control.Memory.Region.V 'Foreign.R.Type.Lang>_R
                                       ->_R (Language.R.Instance.R
                                               <GHC.Types.Any>_P
                                               (Foreign.R.Internal.SomeSEXP
                                                  (Language.R.Instance.D:R:PrimStateR[0]
                                                       <GHC.Types.Any>_N))_N)_R)
                                      (Trans
                                           (<Foreign.R.Internal.SEXP
                                               Control.Memory.Region.V 'Foreign.R.Type.Lang>_R
                                            ->_R Language.R.Instance.N:R[0]
                                                     <GHC.Types.Any>_P <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any>_N)
                                           (Nth:2
                                                (Nth:3
                                                     (Trans
                                                          (<Control.Monad.Trans.Reader.ReaderT
                                                              (GHC.IORef.IORef GHC.Types.Int)
                                                              GHC.Types.IO
                                                              (Foreign.R.Internal.SEXP
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Lang)>_R
                                                           ->_R <Foreign.R.Internal.SEXP
                                                                   Control.Memory.Region.V
                                                                   'Foreign.R.Type.Lang
                                                                 -> Control.Monad.Trans.Reader.ReaderT
                                                                      (GHC.IORef.IORef
                                                                         GHC.Types.Int)
                                                                      GHC.Types.IO
                                                                      (Foreign.R.Internal.SomeSEXP
                                                                         GHC.Types.Any)>_R
                                                           ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                    <*>_N
                                                                    <GHC.IORef.IORef
                                                                       GHC.Types.Int>_R
                                                                    <GHC.Types.IO>_R
                                                                    <Foreign.R.Internal.SomeSEXP
                                                                       GHC.Types.Any>_N)
                                                          (<Control.Monad.Trans.Reader.ReaderT
                                                              (GHC.IORef.IORef GHC.Types.Int)
                                                              GHC.Types.IO
                                                              (Foreign.R.Internal.SEXP
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Lang)>_R
                                                           ->_R <Foreign.R.Internal.SEXP
                                                                   Control.Memory.Region.V
                                                                   'Foreign.R.Type.Lang
                                                                 -> Control.Monad.Trans.Reader.ReaderT
                                                                      (GHC.IORef.IORef
                                                                         GHC.Types.Int)
                                                                      GHC.Types.IO
                                                                      (Foreign.R.Internal.SomeSEXP
                                                                         GHC.Types.Any)>_R
                                                           ->_R <GHC.IORef.IORef GHC.Types.Int>_R
                                                           ->_R GHC.Types.N:IO[0]
                                                                    <Foreign.R.Internal.SomeSEXP
                                                                       GHC.Types.Any>_R)))))))
                            (Control.Monad.Trans.Reader.N:ReaderT[0]
                                 <*>_N
                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                 <GHC.Types.IO>_R
                                 <Foreign.R.Internal.SomeSEXP GHC.Types.Any>_N))
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP GHC.Types.Any>_R)
                        ds4 of ds1 { (#,#) ipv2 ipv3 ->
                 case ((Language.R.Matcher.guardType1
                          @ GHC.Types.Any
                          Foreign.R.Type.Int
                          @ (Language.R.Instance.R
                               GHC.Types.Any
                               (Data.Either.Either
                                  (Language.R.Matcher.MatcherError GHC.Types.Any) GHC.Types.Bool))
                          ipv3
                          Test.Matcher.tests80
                            `cast`
                          (<()>_R
                           ->_R Trans
                                    (<GHC.IORef.IORef GHC.Types.Int>_R
                                     ->_R Sym (GHC.Types.N:IO[0]
                                                   <Data.Either.Either
                                                      (Language.R.Matcher.MatcherError
                                                         GHC.Types.Any)
                                                      GHC.Types.Bool>_R))
                                    (Trans
                                         (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                   <*>_N
                                                   <GHC.IORef.IORef GHC.Types.Int>_R
                                                   <GHC.Types.IO>_R
                                                   <Data.Either.Either
                                                      (Language.R.Matcher.MatcherError
                                                         GHC.Types.Any)
                                                      GHC.Types.Bool>_N))
                                         (Sym (Language.R.Instance.N:R[0]
                                                   <GHC.Types.Any>_P) <Data.Either.Either
                                                                         (Language.R.Matcher.MatcherError
                                                                            GHC.Types.Any)
                                                                         GHC.Types.Bool>_N)))
                          Test.Matcher.tests79
                            `cast`
                          (<Language.R.Matcher.MatcherError GHC.Types.Any>_R
                           ->_R Trans
                                    (<GHC.IORef.IORef GHC.Types.Int>_R
                                     ->_R Sym (GHC.Types.N:IO[0]
                                                   <Data.Either.Either
                                                      (Language.R.Matcher.MatcherError
                                                         GHC.Types.Any)
                                                      GHC.Types.Bool>_R))
                                    (Trans
                                         (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                   <*>_N
                                                   <GHC.IORef.IORef GHC.Types.Int>_R
                                                   <GHC.Types.IO>_R
                                                   <Data.Either.Either
                                                      (Language.R.Matcher.MatcherError
                                                         GHC.Types.Any)
                                                      GHC.Types.Bool>_N))
                                         (Sym (Language.R.Instance.N:R[0]
                                                   <GHC.Types.Any>_P) <Data.Either.Either
                                                                         (Language.R.Matcher.MatcherError
                                                                            GHC.Types.Any)
                                                                         GHC.Types.Bool>_N))))
                         `cast`
                       (Trans
                            (Language.R.Instance.N:R[0] <GHC.Types.Any>_P <Data.Either.Either
                                                                             (Language.R.Matcher.MatcherError
                                                                                GHC.Types.Any)
                                                                             GHC.Types.Bool>_N)
                            (Trans
                                 (Nth:2
                                      (Trans
                                           (<Control.Monad.Trans.Reader.ReaderT
                                               (GHC.IORef.IORef GHC.Types.Int)
                                               GHC.Types.IO
                                               (Data.Either.Either
                                                  (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                  GHC.Types.Bool)>_R
                                            ->_R <Data.Either.Either
                                                    (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                    GHC.Types.Bool
                                                  -> Control.Monad.Trans.Reader.ReaderT
                                                       (GHC.IORef.IORef GHC.Types.Int)
                                                       GHC.Types.IO
                                                       GHC.Types.Bool>_R
                                            ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                     <*>_N
                                                     <GHC.IORef.IORef GHC.Types.Int>_R
                                                     <GHC.Types.IO>_R
                                                     <GHC.Types.Bool>_N)
                                           (<Control.Monad.Trans.Reader.ReaderT
                                               (GHC.IORef.IORef GHC.Types.Int)
                                               GHC.Types.IO
                                               (Data.Either.Either
                                                  (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                  GHC.Types.Bool)>_R
                                            ->_R <Data.Either.Either
                                                    (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                    GHC.Types.Bool
                                                  -> Control.Monad.Trans.Reader.ReaderT
                                                       (GHC.IORef.IORef GHC.Types.Int)
                                                       GHC.Types.IO
                                                       GHC.Types.Bool>_R
                                            ->_R <GHC.IORef.IORef GHC.Types.Int>_R
                                            ->_R GHC.Types.N:IO[0] <GHC.Types.Bool>_R)))
                                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                                      <*>_N
                                      <GHC.IORef.IORef GHC.Types.Int>_R
                                      <GHC.Types.IO>_R
                                      <Data.Either.Either
                                         (Language.R.Matcher.MatcherError GHC.Types.Any)
                                         GHC.Types.Bool>_N)))
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <Data.Either.Either
                              (Language.R.Matcher.MatcherError GHC.Types.Any) GHC.Types.Bool>_R)
                        ipv2 of ds7 { (#,#) ipv4 ipv5 ->
                 case ipv5 of wild2 {
                   Data.Either.Left ipv6
                   -> (GHC.Magic.noinline
                         @ (forall a1. [GHC.Types.Char] -> GHC.Types.IO a1)
                         GHC.IO.failIO1
                           `cast`
                         (forall (a1 :: <*>_N).
                          <GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <a1>_R))
                         @ GHC.Types.Bool
                         Test.Matcher.tests77)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)
                        ipv4
                   Data.Either.Right t -> (# ipv4, t #) } } } } } } }) -}
7b3f9c7da4887ee35f7b87e91e25c89f
  tests77 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests78) -}
1df4d8736a1e83157fa12a6c7b258fff
  tests78 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Pattern match failure in do expression at tests/Test/Matcher.hs:41:8-14"#) -}
b087813d3be4fcf38777e0c53acf1742
  tests79 ::
    Language.R.Matcher.MatcherError GHC.Types.Any
    -> GHC.IORef.IORef GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            (Language.R.Matcher.MatcherError GHC.Types.Any) GHC.Types.Bool #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><S,U>,
     Unfolding: (\ (e' :: Language.R.Matcher.MatcherError
                            GHC.Types.Any)[OneShot]
                   (eta :: GHC.IORef.IORef GHC.Types.Int)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# eta1, Test.Matcher.tests66 #)) -}
c2a643f43d854268531542cc06422307
  tests8 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Test.Matcher.tests27
                   Test.Matcher.tests9) -}
fe9db0592ebf82b14313753e3b882dfc
  tests80 ::
    ()
    -> GHC.IORef.IORef GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            (Language.R.Matcher.MatcherError GHC.Types.Any) GHC.Types.Bool #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><S,U>,
     Unfolding: (\ (o :: ())[OneShot]
                   (eta :: GHC.IORef.IORef GHC.Types.Int)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# eta1, Test.Matcher.tests64 #)) -}
826c2fc6c2d1f0c50598200644041c08
  tests81 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP Control.Memory.Region.V #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.noDuplicate#
                        @ GHC.Prim.RealWorld
                        s of s' { DEFAULT ->
                 case Language.R.QQ.parse1
                        Test.Matcher.tests82
                        s' of ds1 { (#,#) ipv ipv1 ->
                 case ipv1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.V>_P <'Foreign.R.Type.Expr>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.V
                                 'Foreign.R.Type.Expr, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds2 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        ds2
                        0#
                        ipv of wild1 { (#,#) ds3 ds4 ->
                 case Language.R.Globals.globalEnv
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.G>_P <'Foreign.R.Type.Env>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.G
                                 'Foreign.R.Type.Env, Foreign.R.Internal.SEXPREC>)_R) of ds5 { GHC.Ptr.Ptr ds6 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        ds4
                        ds6
                        ds3 of wild { (#,#) ds7 ds8 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        ds8
                        ds7 of wild2 { Unit# ds9 ->
                 (# ds9,
                    Foreign.R.Internal.SomeSEXP
                      @ Control.Memory.Region.V
                      @ GHC.Types.Any
                      ds8 #) } } } } } } }) -}
bd709509eaaf18e5b5846ca51bf47e51
  tests82 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests83) -}
107d57701673d3af26985b24e7ba003c
  tests83 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("function(){ matrix(c(1:10)) }"#) -}
0d690c918e8ba7b55b11f883a2e4490d
  tests84 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests85) -}
3368bcee42559b6fe1c9acf03b250421
  tests85 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("guardType: proceeds"#) -}
7404933c4cd2af49df3e2f8753463eb5
  tests86 :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Test.Matcher.tests88
                   Test.Matcher.tests87
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
80ded19ef694a4cccdeb2f1b27c1e331
  tests87 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, Strictness: <S,U> -}
ca695e5fc0c50f60776493b80cf97433
  tests88 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests89) -}
79df396e25758bd7f5e34c55438f72c9
  tests89 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("typeOf: reads type"#) -}
2804ed82d3e814e14d99bbca0c0e8e03
  tests9 :: [Test.Tasty.Core.TestTree]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Test.Tasty.Core.TestTree
                   Test.Matcher.tests10
                   (GHC.Types.[] @ Test.Tasty.Core.TestTree)) -}
0d04b9d3030bb48d121404abc2fc4702
  tests90 :: Test.Tasty.Core.TestTree
  {- Unfolding: (Test.Tasty.Core.SingleTest
                   @ Test.Tasty.HUnit.TestCase
                   Test.Tasty.HUnit.$fIsTestTestCase
                   Test.Matcher.tests102
                   Test.Matcher.tests91
                     `cast`
                   (Trans
                        (Sym (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R))
                        (Sym (Test.Tasty.HUnit.N:TestCase[0])))) -}
e18c9ba5e0de0b3f0ba1d118fe6a40ac
  tests91 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.getMaskingState# s of ds { (#,#) ipv ipv1 ->
                 case ipv1 of ds1 {
                   DEFAULT
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Language.R.Instance.runRegion3
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ GHC.Types.Bool
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskAsyncExceptions#
                                @ GHC.Types.Bool
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Test.Matcher.tests93
                                        (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                          `cast`
                                        (Trans
                                             (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                             (Nth:2
                                                  (Trans
                                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                 <*>_N
                                                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                                                 <GHC.Types.IO>_R
                                                                 <GHC.Types.Bool>_N))
                                                       (Nth:3
                                                            (Nth:3
                                                                 (Trans
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  GHC.Types.Bool>_R
                                                                       ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                <*>_N
                                                                                <GHC.IORef.IORef
                                                                                   GHC.Types.Int>_R
                                                                                <GHC.Types.IO>_R
                                                                                <GHC.Types.Bool>_N)
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  GHC.Types.Bool>_R
                                                                       ->_R <GHC.IORef.IORef
                                                                               GHC.Types.Int>_R
                                                                       ->_R GHC.Types.N:IO[0]
                                                                                <GHC.Types.Bool>_R)))))))
                                        s1 of ds3 { (#,#) ipv4 ipv5 ->
                                 case ipv5 of ds4 { DEFAULT -> ds3 } }))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.readMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv3
                                     s1 of ds3 { (#,#) ipv4 ipv5 ->
                              case ipv5 of wild { GHC.Types.I# x# ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld #)}
                                     (GHC.Prim.narrow32Int# x#)
                                     ipv4 of wild1 { Unit# ds4 ->
                              GHC.Prim.raiseIO#
                                @ GHC.Exception.SomeException
                                @ GHC.Types.Bool
                                e1
                                ds4 } } })
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             ipv3
                             ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                      case ipv8 of wild { GHC.Types.I# x# ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld #)}
                             (GHC.Prim.narrow32Int# x#)
                             ipv7 of wild1 { Unit# ds5 ->
                      case ipv5 of wild2 {
                        GHC.Types.False
                        -> case Test.Matcher.tests70 ds5
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True
                        -> (# ds5, GHC.Types.[] @ GHC.Types.Char #) } } } } } }
                   0#
                   -> case GHC.Prim.maskAsyncExceptions#
                             @ GHC.Types.Bool
                             Test.Matcher.tests92
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ipv3 of wild {
                        GHC.Types.False
                        -> case Test.Matcher.tests70 ipv2
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True -> (# ipv2, GHC.Types.[] @ GHC.Types.Char #) } }
                   1#
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Language.R.Instance.runRegion3
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ GHC.Types.Bool
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskUninterruptible#
                                @ GHC.Types.Bool
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Test.Matcher.tests93
                                        (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                          `cast`
                                        (Trans
                                             (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                             (Nth:2
                                                  (Trans
                                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                 <*>_N
                                                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                                                 <GHC.Types.IO>_R
                                                                 <GHC.Types.Bool>_N))
                                                       (Nth:3
                                                            (Nth:3
                                                                 (Trans
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  GHC.Types.Bool>_R
                                                                       ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                <*>_N
                                                                                <GHC.IORef.IORef
                                                                                   GHC.Types.Int>_R
                                                                                <GHC.Types.IO>_R
                                                                                <GHC.Types.Bool>_N)
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          (Foreign.R.Internal.SomeSEXP
                                                                             GHC.Types.Any)>_R
                                                                       ->_R <Foreign.R.Internal.SomeSEXP
                                                                               GHC.Types.Any
                                                                             -> Control.Monad.Trans.Reader.ReaderT
                                                                                  (GHC.IORef.IORef
                                                                                     GHC.Types.Int)
                                                                                  GHC.Types.IO
                                                                                  GHC.Types.Bool>_R
                                                                       ->_R <GHC.IORef.IORef
                                                                               GHC.Types.Int>_R
                                                                       ->_R GHC.Types.N:IO[0]
                                                                                <GHC.Types.Bool>_R)))))))
                                        s1 of ds3 { (#,#) ipv4 ipv5 ->
                                 case ipv5 of ds4 { DEFAULT -> ds3 } }))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.readMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv3
                                     s1 of ds3 { (#,#) ipv4 ipv5 ->
                              case ipv5 of wild { GHC.Types.I# x# ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld #)}
                                     (GHC.Prim.narrow32Int# x#)
                                     ipv4 of wild1 { Unit# ds4 ->
                              GHC.Prim.raiseIO#
                                @ GHC.Exception.SomeException
                                @ GHC.Types.Bool
                                e1
                                ds4 } } })
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             ipv3
                             ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                      case ipv8 of wild { GHC.Types.I# x# ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld #)}
                             (GHC.Prim.narrow32Int# x#)
                             ipv7 of wild1 { Unit# ds5 ->
                      case ipv5 of wild2 {
                        GHC.Types.False
                        -> case Test.Matcher.tests70 ds5
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Char] #)
                           of {}
                        GHC.Types.True
                        -> (# ds5, GHC.Types.[] @ GHC.Types.Char #) } } } } } } } }) -}
5a7a4e116a5a162c7efc90d2357e7fd3
  tests92 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newMutVar#
                        @ GHC.Types.Int
                        @ GHC.Prim.RealWorld
                        Language.R.Instance.runRegion3
                        s1 of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.catch#
                        @ GHC.Types.Bool
                        @ GHC.Exception.SomeException
                        (GHC.Prim.unmaskAsyncExceptions#
                           @ GHC.Types.Bool
                           (\ (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                            case Test.Matcher.tests93
                                   (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                     `cast`
                                   (Trans
                                        (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                        (Nth:2
                                             (Trans
                                                  (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                            <*>_N
                                                            <GHC.IORef.IORef GHC.Types.Int>_R
                                                            <GHC.Types.IO>_R
                                                            <GHC.Types.Bool>_N))
                                                  (Nth:3
                                                       (Nth:3
                                                            (Trans
                                                                 (<Control.Monad.Trans.Reader.ReaderT
                                                                     (GHC.IORef.IORef GHC.Types.Int)
                                                                     GHC.Types.IO
                                                                     (Foreign.R.Internal.SomeSEXP
                                                                        GHC.Types.Any)>_R
                                                                  ->_R <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any
                                                                        -> Control.Monad.Trans.Reader.ReaderT
                                                                             (GHC.IORef.IORef
                                                                                GHC.Types.Int)
                                                                             GHC.Types.IO
                                                                             GHC.Types.Bool>_R
                                                                  ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                           <*>_N
                                                                           <GHC.IORef.IORef
                                                                              GHC.Types.Int>_R
                                                                           <GHC.Types.IO>_R
                                                                           <GHC.Types.Bool>_N)
                                                                 (<Control.Monad.Trans.Reader.ReaderT
                                                                     (GHC.IORef.IORef GHC.Types.Int)
                                                                     GHC.Types.IO
                                                                     (Foreign.R.Internal.SomeSEXP
                                                                        GHC.Types.Any)>_R
                                                                  ->_R <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any
                                                                        -> Control.Monad.Trans.Reader.ReaderT
                                                                             (GHC.IORef.IORef
                                                                                GHC.Types.Int)
                                                                             GHC.Types.IO
                                                                             GHC.Types.Bool>_R
                                                                  ->_R <GHC.IORef.IORef
                                                                          GHC.Types.Int>_R
                                                                  ->_R GHC.Types.N:IO[0]
                                                                           <GHC.Types.Bool>_R)))))))
                                   s2 of ds3 { (#,#) ipv4 ipv5 ->
                            case ipv5 of ds1 { DEFAULT -> ds3 } }))
                        (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                           (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.readMutVar#
                                @ GHC.Prim.RealWorld
                                @ GHC.Types.Int
                                ipv3
                                s2 of ds3 { (#,#) ipv4 ipv5 ->
                         case ipv5 of wild { GHC.Types.I# x# ->
                         case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                                               -> (# GHC.Prim.State#
                                                                       GHC.Prim.RealWorld #)}
                                (GHC.Prim.narrow32Int# x#)
                                ipv4 of wild1 { Unit# ds4 ->
                         GHC.Prim.raiseIO#
                           @ GHC.Exception.SomeException
                           @ GHC.Types.Bool
                           e1
                           ds4 } } })
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        ipv3
                        ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                 case ipv8 of wild { GHC.Types.I# x# ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        (GHC.Prim.narrow32Int# x#)
                        ipv7 of wild1 { Unit# ds5 ->
                 (# ds5, ipv5 #) } } } } }) -}
f6f117d238354e95007da81d5216e6a5
  tests93 ::
    GHC.IORef.IORef GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (r1 :: GHC.IORef.IORef GHC.Types.Int)[OneShot]
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Foreign.R.Internal.SomeSEXP Control.Memory.Region.V #)
                        Test.Matcher.tests99 of ds { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Foreign.R.Internal.SomeSEXP a dt ->
                 case Language.R.Globals.nilValue
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.G>_P <'Foreign.R.Type.Nil>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.G
                                 'Foreign.R.Type.Nil, Foreign.R.Internal.SEXPREC>)_R) of ds2 { GHC.Ptr.Ptr ds3 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        dt
                        ds3
                        s of wild1 { (#,#) ds4 ds5 ->
                 case ((Language.R.$wevalEnv
                          @ (Language.R.Instance.R GHC.Types.Any)
                          @ Control.Memory.Region.V
                          @ 'Foreign.R.Type.Lang
                          (Language.R.Instance.$fMonadRR @ GHC.Types.Any)
                          ds5
                          Language.R.Globals.globalEnv
                            `cast`
                          (Trans
                               (Foreign.R.Internal.N:SEXP[0]
                                    <Control.Memory.Region.G>_P <'Foreign.R.Type.Env>_P)
                               (Trans
                                    (GHC.Ptr.Ptr
                                       <Language.R.HExp.HExp
                                          Control.Memory.Region.G
                                          'Foreign.R.Type.Env, Language.R.HExp.HExp
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Env>)_R
                                    (Sym (Foreign.R.Internal.N:SEXP[0]
                                              <Control.Memory.Region.V>_P
                                              <'Foreign.R.Type.Env>_P)))))
                         `cast`
                       (Trans
                            (Nth:3
                                 (Trans
                                      (<Foreign.R.Internal.SEXP
                                          Control.Memory.Region.V 'Foreign.R.Type.Lang>_R
                                       ->_R (Language.R.Instance.R
                                               <GHC.Types.Any>_P
                                               (Foreign.R.Internal.SomeSEXP
                                                  (Language.R.Instance.D:R:PrimStateR[0]
                                                       <GHC.Types.Any>_N))_N)_R)
                                      (Trans
                                           (<Foreign.R.Internal.SEXP
                                               Control.Memory.Region.V 'Foreign.R.Type.Lang>_R
                                            ->_R Language.R.Instance.N:R[0]
                                                     <GHC.Types.Any>_P <Foreign.R.Internal.SomeSEXP
                                                                          GHC.Types.Any>_N)
                                           (Nth:2
                                                (Nth:3
                                                     (Trans
                                                          (<Control.Monad.Trans.Reader.ReaderT
                                                              (GHC.IORef.IORef GHC.Types.Int)
                                                              GHC.Types.IO
                                                              (Foreign.R.Internal.SEXP
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Lang)>_R
                                                           ->_R <Foreign.R.Internal.SEXP
                                                                   Control.Memory.Region.V
                                                                   'Foreign.R.Type.Lang
                                                                 -> Control.Monad.Trans.Reader.ReaderT
                                                                      (GHC.IORef.IORef
                                                                         GHC.Types.Int)
                                                                      GHC.Types.IO
                                                                      (Foreign.R.Internal.SomeSEXP
                                                                         GHC.Types.Any)>_R
                                                           ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                    <*>_N
                                                                    <GHC.IORef.IORef
                                                                       GHC.Types.Int>_R
                                                                    <GHC.Types.IO>_R
                                                                    <Foreign.R.Internal.SomeSEXP
                                                                       GHC.Types.Any>_N)
                                                          (<Control.Monad.Trans.Reader.ReaderT
                                                              (GHC.IORef.IORef GHC.Types.Int)
                                                              GHC.Types.IO
                                                              (Foreign.R.Internal.SEXP
                                                                 Control.Memory.Region.V
                                                                 'Foreign.R.Type.Lang)>_R
                                                           ->_R <Foreign.R.Internal.SEXP
                                                                   Control.Memory.Region.V
                                                                   'Foreign.R.Type.Lang
                                                                 -> Control.Monad.Trans.Reader.ReaderT
                                                                      (GHC.IORef.IORef
                                                                         GHC.Types.Int)
                                                                      GHC.Types.IO
                                                                      (Foreign.R.Internal.SomeSEXP
                                                                         GHC.Types.Any)>_R
                                                           ->_R <GHC.IORef.IORef GHC.Types.Int>_R
                                                           ->_R GHC.Types.N:IO[0]
                                                                    <Foreign.R.Internal.SomeSEXP
                                                                       GHC.Types.Any>_R)))))))
                            (Control.Monad.Trans.Reader.N:ReaderT[0]
                                 <*>_N
                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                 <GHC.Types.IO>_R
                                 <Foreign.R.Internal.SomeSEXP GHC.Types.Any>_N))
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <Foreign.R.Internal.SomeSEXP GHC.Types.Any>_R)
                        ds4 of ds1 { (#,#) ipv2 ipv3 ->
                 case ((Language.R.Matcher.attribute1
                          @ 'Foreign.R.Type.String
                          @ GHC.Types.Any
                          Language.R.Matcher.factor12
                            `cast`
                          (Sym (Foreign.R.Type.D:R:SingSEXPTYPEz0[0]) <'Foreign.R.Type.String>_N)
                          Language.R.Matcher.factor10
                          @ (Language.R.Instance.R
                               GHC.Types.Any
                               (Data.Either.Either
                                  (Language.R.Matcher.MatcherError GHC.Types.Any) GHC.Types.Bool))
                          ipv3
                          Test.Matcher.tests96
                          Test.Matcher.tests79
                            `cast`
                          (<Language.R.Matcher.MatcherError GHC.Types.Any>_R
                           ->_R Trans
                                    (<GHC.IORef.IORef GHC.Types.Int>_R
                                     ->_R Sym (GHC.Types.N:IO[0]
                                                   <Data.Either.Either
                                                      (Language.R.Matcher.MatcherError
                                                         GHC.Types.Any)
                                                      GHC.Types.Bool>_R))
                                    (Trans
                                         (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                   <*>_N
                                                   <GHC.IORef.IORef GHC.Types.Int>_R
                                                   <GHC.Types.IO>_R
                                                   <Data.Either.Either
                                                      (Language.R.Matcher.MatcherError
                                                         GHC.Types.Any)
                                                      GHC.Types.Bool>_N))
                                         (Sym (Language.R.Instance.N:R[0]
                                                   <GHC.Types.Any>_P) <Data.Either.Either
                                                                         (Language.R.Matcher.MatcherError
                                                                            GHC.Types.Any)
                                                                         GHC.Types.Bool>_N))))
                         `cast`
                       (Trans
                            (Language.R.Instance.N:R[0] <GHC.Types.Any>_P <Data.Either.Either
                                                                             (Language.R.Matcher.MatcherError
                                                                                GHC.Types.Any)
                                                                             GHC.Types.Bool>_N)
                            (Trans
                                 (Nth:2
                                      (Trans
                                           (<Control.Monad.Trans.Reader.ReaderT
                                               (GHC.IORef.IORef GHC.Types.Int)
                                               GHC.Types.IO
                                               (Data.Either.Either
                                                  (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                  GHC.Types.Bool)>_R
                                            ->_R <Data.Either.Either
                                                    (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                    GHC.Types.Bool
                                                  -> Control.Monad.Trans.Reader.ReaderT
                                                       (GHC.IORef.IORef GHC.Types.Int)
                                                       GHC.Types.IO
                                                       GHC.Types.Bool>_R
                                            ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                     <*>_N
                                                     <GHC.IORef.IORef GHC.Types.Int>_R
                                                     <GHC.Types.IO>_R
                                                     <GHC.Types.Bool>_N)
                                           (<Control.Monad.Trans.Reader.ReaderT
                                               (GHC.IORef.IORef GHC.Types.Int)
                                               GHC.Types.IO
                                               (Data.Either.Either
                                                  (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                  GHC.Types.Bool)>_R
                                            ->_R <Data.Either.Either
                                                    (Language.R.Matcher.MatcherError GHC.Types.Any)
                                                    GHC.Types.Bool
                                                  -> Control.Monad.Trans.Reader.ReaderT
                                                       (GHC.IORef.IORef GHC.Types.Int)
                                                       GHC.Types.IO
                                                       GHC.Types.Bool>_R
                                            ->_R <GHC.IORef.IORef GHC.Types.Int>_R
                                            ->_R GHC.Types.N:IO[0] <GHC.Types.Bool>_R)))
                                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                                      <*>_N
                                      <GHC.IORef.IORef GHC.Types.Int>_R
                                      <GHC.Types.IO>_R
                                      <Data.Either.Either
                                         (Language.R.Matcher.MatcherError GHC.Types.Any)
                                         GHC.Types.Bool>_N)))
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <Data.Either.Either
                              (Language.R.Matcher.MatcherError GHC.Types.Any) GHC.Types.Bool>_R)
                        ipv2 of ds7 { (#,#) ipv4 ipv5 ->
                 case ipv5 of wild2 {
                   Data.Either.Left ipv6
                   -> (GHC.Magic.noinline
                         @ (forall a1. [GHC.Types.Char] -> GHC.Types.IO a1)
                         GHC.IO.failIO1
                           `cast`
                         (forall (a1 :: <*>_N).
                          <GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <a1>_R))
                         @ GHC.Types.Bool
                         Test.Matcher.tests94)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)
                        ipv4
                   Data.Either.Right t -> (# ipv4, t #) } } } } } } }) -}
a1c35f5f61ed11514dadf269096f552e
  tests94 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Test.Matcher.tests95) -}
aeecdd7c3b1925b4c7a850db21ec4f2f
  tests95 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Pattern match failure in do expression at tests/Test/Matcher.hs:31:8-14"#) -}
ec65342324e9b70fa1bff31c95d82e00
  tests96 ::
    Foreign.R.Internal.SEXP GHC.Types.Any 'Foreign.R.Type.String
    -> Language.R.Instance.R
         GHC.Types.Any
         (Data.Either.Either
            (Language.R.Matcher.MatcherError GHC.Types.Any) GHC.Types.Bool)
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: (\ (o :: Foreign.R.Internal.SEXP
                           GHC.Types.Any 'Foreign.R.Type.String)[OneShot] ->
                 case o `cast`
                      (Foreign.R.Internal.N:SEXP[0]
                           <GHC.Types.Any>_P
                           <'Foreign.R.Type.String>_P) of ww { GHC.Ptr.Ptr ww1 ->
                 case GHC.Classes.$fEq[]_$s$c==1
                        Test.Matcher.tests22
                        (Language.R.Matcher.$wcharList @ GHC.Types.Any ww1) of wild {
                   GHC.Types.False
                   -> Test.Matcher.tests98
                        `cast`
                      (Trans
                           (<GHC.IORef.IORef GHC.Types.Int>_R
                            ->_R Sym (GHC.Types.N:IO[0]
                                          <Data.Either.Either
                                             (Language.R.Matcher.MatcherError GHC.Types.Any)
                                             GHC.Types.Bool>_R))
                           (Trans
                                (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                          <*>_N
                                          <GHC.IORef.IORef GHC.Types.Int>_R
                                          <GHC.Types.IO>_R
                                          <Data.Either.Either
                                             (Language.R.Matcher.MatcherError GHC.Types.Any)
                                             GHC.Types.Bool>_N))
                                (Sym (Language.R.Instance.N:R[0]
                                          <GHC.Types.Any>_P) <Data.Either.Either
                                                                (Language.R.Matcher.MatcherError
                                                                   GHC.Types.Any)
                                                                GHC.Types.Bool>_N)))
                   GHC.Types.True
                   -> Test.Matcher.tests97
                        `cast`
                      (Trans
                           (<GHC.IORef.IORef GHC.Types.Int>_R
                            ->_R Sym (GHC.Types.N:IO[0]
                                          <Data.Either.Either
                                             (Language.R.Matcher.MatcherError GHC.Types.Any)
                                             GHC.Types.Bool>_R))
                           (Trans
                                (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                          <*>_N
                                          <GHC.IORef.IORef GHC.Types.Int>_R
                                          <GHC.Types.IO>_R
                                          <Data.Either.Either
                                             (Language.R.Matcher.MatcherError GHC.Types.Any)
                                             GHC.Types.Bool>_N))
                                (Sym (Language.R.Instance.N:R[0]
                                          <GHC.Types.Any>_P) <Data.Either.Either
                                                                (Language.R.Matcher.MatcherError
                                                                   GHC.Types.Any)
                                                                GHC.Types.Bool>_N))) } }) -}
3b0a4ce0abbd9b0a4cf6301b2e1f2e86
  tests97 ::
    GHC.IORef.IORef GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            (Language.R.Matcher.MatcherError GHC.Types.Any) GHC.Types.Bool #)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S,U>,
     Unfolding: (\ (eta :: GHC.IORef.IORef GHC.Types.Int)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# eta1, Test.Matcher.tests64 #)) -}
536388b3d16a4f431c0671a979d22b15
  tests98 ::
    GHC.IORef.IORef GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            (Language.R.Matcher.MatcherError GHC.Types.Any) GHC.Types.Bool #)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S,U>,
     Unfolding: (\ (eta :: GHC.IORef.IORef GHC.Types.Int)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# eta1, Test.Matcher.tests66 #)) -}
05a7794ead898773c5278ba38339c760
  tests99 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Foreign.R.Internal.SomeSEXP Control.Memory.Region.V #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.noDuplicate#
                        @ GHC.Prim.RealWorld
                        s of s' { DEFAULT ->
                 case Language.R.QQ.parse1
                        Test.Matcher.tests100
                        s' of ds1 { (#,#) ipv ipv1 ->
                 case ipv1
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.V>_P <'Foreign.R.Type.Expr>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.V
                                 'Foreign.R.Type.Expr, Foreign.R.Internal.SEXPREC>)_R) of ds { GHC.Ptr.Ptr ds2 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        ds2
                        0#
                        ipv of wild1 { (#,#) ds3 ds4 ->
                 case Language.R.Globals.globalEnv
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0]
                                <Control.Memory.Region.G>_P <'Foreign.R.Type.Env>_P)
                           (GHC.Ptr.Ptr
                              <Language.R.HExp.HExp
                                 Control.Memory.Region.G
                                 'Foreign.R.Type.Env, Foreign.R.Internal.SEXPREC>)_R) of ds5 { GHC.Ptr.Ptr ds6 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Addr# #)}
                        ds4
                        ds6
                        ds3 of wild { (#,#) ds7 ds8 ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        ds8
                        ds7 of wild2 { Unit# ds9 ->
                 (# ds9,
                    Foreign.R.Internal.SomeSEXP
                      @ Control.Memory.Region.V
                      @ GHC.Types.Any
                      ds8 #) } } } } } } }) -}
ed87512d5ba0b51f8ddc384b2161b373
  tests_expected :: [GHC.Int.Int32]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Int.Int32
                   Test.Matcher.tests45
                   Test.Matcher.tests43) -}
bb21c409abea42b6ef937361673ec198
  tests_go :: [[GHC.Types.Char]] -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
dda8b9c7be023f9253184a9b64c1d1fe
  tests_go1 :: [GHC.Int.Int32] -> ()
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
"SPEC/Test.Matcher $fShow[] @ Int32" [orphan] forall (v :: GHC.Show.Show
                                                             GHC.Int.Int32)
  GHC.Show.$fShow[] @ GHC.Int.Int32 v = Test.Matcher.$s$fShow[]
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

