
==================== FINAL INTERFACE ====================
2017-12-28 08:50:23.720575 UTC

interface main:Main 8022
  interface hash: 3c3fb18f5184553a5b0c989f33f044d5
  ABI hash: 81da283d0bb7e588132a5624f9d823d4
  export-list hash: ec90c4e394349eef297d0b4e572da6a4
  orphan hash: 9a1a23b71099e399ad9d644947c95eef
  flag hash: 49dfc9cbf5d3c195373e2b4c058738ab
  sig of: Nothing
  used TH splices: True
  where
exports:
  Main.@=?
  Main.hFib
  Main.main
module dependencies:
package dependencies: ansi-terminal-0.7.1.1 ansi-wl-pprint-0.6.8.1
                      array-0.5.2.0 base-4.10.1.0 binary-0.8.5.1 bytestring-0.10.8.2
                      colour-2.3.4 containers-0.5.10.2 data-default-class-0.1.2.0
                      deepseq-1.4.3.0 exceptions-0.8.3 ghc-boot-th-8.2.2 ghc-prim-0.5.1.1
                      inline-r-0.9.0.2 integer-gmp-1.0.1.0 mtl-2.2.1
                      optparse-applicative-0.14.0.0 parsec-3.1.11 pretty-1.1.3.3
                      primitive-0.6.2.0 process-1.6.1.0 reflection-2.1.2
                      regex-base-0.93.2 regex-tdfa-1.2.2 safe-0.3.15 setenv-0.1.1.3
                      singletons-2.3.1 stm-2.4.4.1 syb-0.7 tagged-0.8.5 tasty-0.11.3
                      tasty-hunit-0.9.2 template-haskell-2.12.0.0 text-1.2.2.2
                      th-desugar-1.7 th-expand-syns-0.4.3.0 th-lift-0.7.7
                      th-lift-instances-0.1.11 th-orphans-0.13.4 th-reify-many-0.1.8
                      transformers-0.5.2.0 unix-2.7.2.2 vector-0.12.0.1
orphans: stm-2.4.4.1:Control.Monad.STM
         singletons-2.3.1:Data.Singletons.TypeLits
         singletons-2.3.1:Data.Singletons.TypeLits.Internal
         singletons-2.3.1:Data.Singletons.Prelude.Instances
         singletons-2.3.1:Data.Singletons.Decide
         th-orphans-0.13.4:Language.Haskell.TH.Instances
         th-lift-instances-0.1.11:Instances.TH.Lift
         th-lift-0.7.7:Language.Haskell.TH.Lift
         vector-0.12.0.1:Data.Vector.Unboxed syb-0.7:Data.Generics.Instances
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         reflection-2.1.2:Data.Reflection
         regex-tdfa-1.2.2:Text.Regex.TDFA.ByteString
         regex-tdfa-1.2.2:Text.Regex.TDFA.ByteString.Lazy
         regex-tdfa-1.2.2:Text.Regex.TDFA.Sequence
         regex-tdfa-1.2.2:Text.Regex.TDFA.String text-1.2.2.2:Data.Text.Lazy
         text-1.2.2.2:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.2.2:Data.Text.Show
         transformers-0.5.2.0:Control.Monad.Trans.Error
         regex-base-0.93.2:Text.Regex.Base.Context colour-2.3.4:Data.Colour
         base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Complex base-4.10.1.0:Data.Either
                         base-4.10.1.0:Data.Functor.Compose base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         ghc-boot-th-8.2.2:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.2.2:GHC.LanguageExtensions.Type
                         inline-r-0.9.0.2:Control.Memory.Region
                         inline-r-0.9.0.2:Data.Vector.SEXP inline-r-0.9.0.2:Foreign.R.Type
                         inline-r-0.9.0.2:Language.R.Instance
                         pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0:Control.Monad.Primitive
                         primitive-0.6.2.0:Data.Primitive.Array
                         singletons-2.3.1:Data.Singletons
                         singletons-2.3.1:Data.Singletons.Prelude.Bool
                         singletons-2.3.1:Data.Singletons.Prelude.Eq
                         singletons-2.3.1:Data.Singletons.Prelude.Instances
                         singletons-2.3.1:Data.Singletons.Prelude.Num
                         singletons-2.3.1:Data.Singletons.Prelude.Ord
                         singletons-2.3.1:Data.Singletons.Syntax
                         singletons-2.3.1:Data.Singletons.TypeLits
                         singletons-2.3.1:Data.Singletons.TypeLits.Internal
                         tagged-0.8.5:Data.Tagged tasty-0.11.3:Test.Tasty.Core
                         template-haskell-2.12.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2:Data.Text text-1.2.2.2:Data.Text.Lazy
                         th-desugar-1.7:Language.Haskell.TH.Desugar.Core
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.10.1.0:Control.Applicative 99577a9c463ffe4790a1d37547a345bd
import  -/  base-4.10.1.0:Control.Monad.IO.Class 9d78cd0f73a837f3c00753bd212b9f2c
import  -/  base-4.10.1.0:Data.Functor 2ffda4f936b8f474394d93205750aff3
import  -/  base-4.10.1.0:Data.Int e234a0a6d2a21ac9385a90eec01cbcae
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.IO.Unsafe 0aa7e5adc396c9f651baef415ce018da
import  -/  base-4.10.1.0:GHC.Int f3b679d79c8ad65bf2b736aa9628303f
import  -/  base-4.10.1.0:GHC.Num 6e1dc5d36d99a802edb39b92bb1923b8
import  -/  base-4.10.1.0:GHC.Show 0a8ce2b5e533d1c2cfb7954e6736be45
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  inline-r-0.9.0.2:Control.Memory.Region bd2f465c2e25d1f80c1a2e359d1309ef
import  -/  inline-r-0.9.0.2:Control.Monad.R.Class e5a0c4056d91754aa90b5adf4bc59248
import  -/  inline-r-0.9.0.2:Data.Vector.SEXP 1ba3b4d0f52c5e1239a58edb94ac6587
import  -/  inline-r-0.9.0.2:Data.Vector.SEXP.Mutable 099966697135647881a6d1b4beb0bf6d
import  -/  inline-r-0.9.0.2:Data.Vector.SEXP.Mutable.Internal 2ce42555caaa41eef4158ba025e8960c
import  -/  inline-r-0.9.0.2:Foreign.R 51460710da704a1aff942901939ab83a
import  -/  inline-r-0.9.0.2:Foreign.R.Internal 0950ef2cc999f128080e9690ff115a12
import  -/  inline-r-0.9.0.2:Foreign.R.Type c66cc062d80b456888eb0e05aa6a4002
import  -/  inline-r-0.9.0.2:H.Prelude e36d2c9f12de64ccb9a431bc0e48e285
import  -/  inline-r-0.9.0.2:Language.R e598fe485b33abac7367c6e28d8b9814
import  -/  inline-r-0.9.0.2:Language.R.GC bd8b69fb86c1cbb08a45dc86d421758c
import  -/  inline-r-0.9.0.2:Language.R.Globals 6466af466952ec50029e279d952209f8
import  -/  inline-r-0.9.0.2:Language.R.Instance 7c21de0bbc964770a1fa7d8ec3cc550d
import  -/  inline-r-0.9.0.2:Language.R.Literal ad8f87454366c7ad983921c1f51fd824
import  -/  inline-r-0.9.0.2:Language.R.QQ 1885758794873fa7a90ccf5c301146fd
import  -/  mtl-2.2.1:Control.Monad.Trans 10395338f5946386bd349b5bb00c06e7
import  -/  singletons-2.3.1:Data.Singletons 9da68ca382f47f0899b26cbacf532ec5
import  -/  tasty-hunit-0.9.2:Test.Tasty.HUnit e2c91e2e2a1aa9764fce15de0bdca332
import  -/  tasty-hunit-0.9.2:Test.Tasty.HUnit.Orig cabfe6febc3dd1bdd12e76f191fca3cf
41484b0c0b117ca44a6b6002cadfa5ac
  $s$fLiteralSEXPa ::
    Language.R.Literal.Literal
      (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure)
      'Foreign.R.Type.Closure
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ s.
                  @ (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure)
                  @ 'Foreign.R.Type.Closure
                  Foreign.R.Type.$fSingISEXPTYPEClosure1
                    `cast`
                  (Trans
                       (Sym (Foreign.R.Type.D:R:SingSEXPTYPEz0[0]))
                       (Sym (Data.Singletons.N:SingI[0]) <Foreign.R.Type.SEXPTYPE>_N) <'Foreign.R.Type.Closure>_N)
                  (\ (eta :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure)
                     (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   (# eta1,
                      eta
                        `cast`
                      (Trans
                           (Foreign.R.Internal.N:SEXP[0] <s>_P <'Foreign.R.Type.Closure>_P)
                           (Trans
                                (GHC.Ptr.Ptr
                                   <Language.R.HExp.HExp
                                      s 'Foreign.R.Type.Closure, Language.R.HExp.HExp
                                                                   Control.Memory.Region.V
                                                                   'Foreign.R.Type.Closure>)_R
                                (Sym (Foreign.R.Internal.N:SEXP[0]
                                          <Control.Memory.Region.V>_P
                                          <'Foreign.R.Type.Closure>_P)))) #))
                    `cast`
                  (<Foreign.R.Internal.SEXP s 'Foreign.R.Type.Closure>_R
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <Foreign.R.Internal.SEXP
                                    Control.Memory.Region.V 'Foreign.R.Type.Closure>_R))
                  (\ @ s1
                     (x1 :: Foreign.R.Internal.SEXP s1 'Foreign.R.Type.Closure) ->
                   case x1
                          `cast`
                        (Trans
                             (Foreign.R.Internal.N:SEXP[0] <s1>_P <'Foreign.R.Type.Closure>_P)
                             (GHC.Ptr.Ptr
                                <Language.R.HExp.HExp
                                   s1 'Foreign.R.Type.Closure, Language.R.HExp.HExp
                                                                 s
                                                                 'Foreign.R.Type.Closure>)_R) of dt { GHC.Ptr.Ptr dt1 ->
                   case Foreign.R.Internal.$wunsafeCast
                          @ s
                          @ 'Foreign.R.Type.Closure
                          (Foreign.R.Type.$fSingKindSEXPTYPE_$cfromSing
                             @ 'Foreign.R.Type.Closure
                             Foreign.R.Type.$fSingISEXPTYPEClosure1
                               `cast`
                             (Sym (Foreign.R.Type.D:R:SingSEXPTYPEz0[0]) <'Foreign.R.Type.Closure>_N))
                            `cast`
                          (Sub (Foreign.R.Type.D:R:DemoteSEXPTYPE[0]))
                          (Foreign.R.Internal.SomeSEXP
                             @ s
                             @ 'Foreign.R.Type.Closure
                             dt1) of ww { DEFAULT ->
                   (GHC.Ptr.Ptr @ (Language.R.HExp.HExp s 'Foreign.R.Type.Closure) ww)
                     `cast`
                   (Sym (Foreign.R.Internal.N:SEXP[0]
                             <s>_P <'Foreign.R.Type.Closure>_P)) } }) -}
9d72b2fddb818bcd8919052935e0f1f3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
3108ceeaf5a318be844de422b45de9d8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
33bd129667974f0a0ba4a893af79107d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
9175ad1f37d588abee1cda4b1c9b7057
  $w$s@=? ::
    GHC.Base.String
    -> Foreign.R.Internal.SomeSEXP GHC.Types.Any
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,1*U><L,U>, Inline: [0] -}
07c196025cc38fef31168131c2e93d05
  $w$s@=?1 ::
    GHC.Base.String
    -> Foreign.R.Internal.SEXP
         Control.Memory.Region.G 'Foreign.R.Type.Nil
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,1*U(U)><L,U>, Inline: [0] -}
e57bef5e61afcedc98b0a789d3aae468
  $w$s@=?2 ::
    GHC.Base.String
    -> Foreign.R.Internal.SomeSEXP Control.Memory.Region.G
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,1*U><L,U>, Inline: [0] -}
6a23716f78c7f24bf27181224431d77c
  $w$s@=?3 ::
    GHC.Base.String
    -> Foreign.R.Internal.SEXP GHC.Types.Any 'Foreign.R.Type.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,1*U(U)><L,U>, Inline: [0] -}
5d0a269587469f1e4406afdad146a868
  $w@=? ::
    Language.R.Literal.Literal a b =>
    GHC.Base.String
    -> a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <L,1*U(A,1*C1(C1(U(U,1*U(U)))),A)><L,U><L,U><L,U>,
     Inline: [0] -}
e63ecf21cefaf52c1fa0bdd85a9e8445
  $whFib ::
    GHC.Prim.Addr#
    -> Language.R.Instance.R
         s (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Int)
  {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
f5929772887da117169c565bb8d70e85
  (@=?) ::
    Language.R.Literal.Literal a b =>
    GHC.Base.String -> a -> Language.R.Instance.R s ()
  {- Arity: 5,
     Strictness: <L,1*U(A,1*C1(C1(U(U,1*U(U)))),A)><L,U><L,U><L,A><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.@=?1
                  `cast`
                (forall (a :: <*>_N) (b :: <Foreign.R.Type.SEXPTYPE>_N) (s :: <*>_N).
                 Trans
                     (<Language.R.Literal.Literal a b>_R
                      ->_R <GHC.Base.String>_R
                      ->_R <a>_R
                      ->_R <GHC.IORef.IORef GHC.Types.Int>_R
                      ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                     (<Language.R.Literal.Literal a b>_R
                      ->_R <GHC.Base.String>_R
                      ->_R <a>_R
                      ->_R Trans
                               (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                         <*>_N
                                         <GHC.IORef.IORef GHC.Types.Int>_R
                                         <GHC.Types.IO>_R
                                         <()>_N))
                               (Sym (Language.R.Instance.N:R[0] <s>_P) <()>_N))) -}
6e658430d23d1ebc7f43ad98efef8836
  @=?1 ::
    Language.R.Literal.Literal a b =>
    GHC.Base.String
    -> a
    -> GHC.IORef.IORef GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <L,1*U(A,1*C1(C1(U(U,1*U(U)))),A)><L,U><L,U><L,A><S,U>,
     Inline: [0],
     Unfolding: InlineRule (5, True, True)
                (\ @ a
                   @ b :: Foreign.R.Type.SEXPTYPE
                   @ s
                   (w :: Language.R.Literal.Literal a b)
                   (w1 :: GHC.Base.String)
                   (w2 :: a)
                   (w3 :: GHC.IORef.IORef GHC.Types.Int)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Main.$w@=? @ a @ b @ s w w1 w2 w4) -}
dbc30cea37509789847bf3e1efa44456
  hFib ::
    Foreign.R.Internal.SEXP s 'Foreign.R.Type.Int
    -> Language.R.Instance.R
         s (Foreign.R.Internal.SEXP s 'Foreign.R.Type.Int)
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ @ s (w :: Foreign.R.Internal.SEXP s 'Foreign.R.Type.Int) ->
                 case w `cast`
                      (Foreign.R.Internal.N:SEXP[0]
                           <s>_P <'Foreign.R.Type.Int>_P) of ww { GHC.Ptr.Ptr ww1 ->
                 Main.$whFib @ s ww1 }) -}
26b2f6201871e69b5dea4f8738e81741
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
47cbd3b03cfa37fb4da738af6a55c65d
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Language.R.Instance.$wwithEmbeddedR
                   @ ()
                   (GHC.Base.Nothing @ GHC.Base.String)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <GHC.Base.String>_N)
                   Language.R.Instance.defaultConfig2
                   Language.R.Instance.defaultConfig1
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <GHC.Types.Bool>_N)
                   Main.main2 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))
                   w2) -}
90e3d3a78bc93147c8a7bb31e5bd5f9f
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.getMaskingState# eta of ds { (#,#) ipv ipv1 ->
                 case ipv1 of ds1 {
                   DEFAULT
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Language.R.Instance.runRegion3
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ ()
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskAsyncExceptions#
                                @ ()
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Main.main4
                                        (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                          `cast`
                                        (Trans
                                             (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                             (Nth:2
                                                  (Trans
                                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                 <*>_N
                                                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                                                 <GHC.Types.IO>_R
                                                                 <()>_N))
                                                       (Nth:3
                                                            (Nth:3
                                                                 (Trans
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          ()>_R
                                                                       ->_R <Control.Monad.Trans.Reader.ReaderT
                                                                               (GHC.IORef.IORef
                                                                                  GHC.Types.Int)
                                                                               GHC.Types.IO
                                                                               ()>_R
                                                                       ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                <*>_N
                                                                                <GHC.IORef.IORef
                                                                                   GHC.Types.Int>_R
                                                                                <GHC.Types.IO>_R
                                                                                <()>_N)
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          ()>_R
                                                                       ->_R <Control.Monad.Trans.Reader.ReaderT
                                                                               (GHC.IORef.IORef
                                                                                  GHC.Types.Int)
                                                                               GHC.Types.IO
                                                                               ()>_R
                                                                       ->_R <GHC.IORef.IORef
                                                                               GHC.Types.Int>_R
                                                                       ->_R GHC.Types.N:IO[0]
                                                                                <()>_R)))))))
                                        s1 of ds3 { (#,#) ipv4 ipv5 ->
                                 case ipv5 of wild { () -> ds3 } }))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.readMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv3
                                     s1 of ds3 { (#,#) ipv4 ipv5 ->
                              case ipv5 of wild { GHC.Types.I# x# ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld #)}
                                     (GHC.Prim.narrow32Int# x#)
                                     ipv4 of wild1 { Unit# ds4 ->
                              GHC.Prim.raiseIO# @ GHC.Exception.SomeException @ () e1 ds4 } } })
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             ipv3
                             ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                      case ipv8 of wild { GHC.Types.I# x# ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld #)}
                             (GHC.Prim.narrow32Int# x#)
                             ipv7 of wild1 { Unit# ds5 ->
                      (# ds5, ipv5 #) } } } } }
                   0# -> GHC.Prim.maskAsyncExceptions# @ () Main.main3 ipv
                   1#
                   -> case GHC.Prim.newMutVar#
                             @ GHC.Types.Int
                             @ GHC.Prim.RealWorld
                             Language.R.Instance.runRegion3
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ ()
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskUninterruptible#
                                @ ()
                                (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Main.main4
                                        (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                          `cast`
                                        (Trans
                                             (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                             (Nth:2
                                                  (Trans
                                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                 <*>_N
                                                                 <GHC.IORef.IORef GHC.Types.Int>_R
                                                                 <GHC.Types.IO>_R
                                                                 <()>_N))
                                                       (Nth:3
                                                            (Nth:3
                                                                 (Trans
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          ()>_R
                                                                       ->_R <Control.Monad.Trans.Reader.ReaderT
                                                                               (GHC.IORef.IORef
                                                                                  GHC.Types.Int)
                                                                               GHC.Types.IO
                                                                               ()>_R
                                                                       ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                <*>_N
                                                                                <GHC.IORef.IORef
                                                                                   GHC.Types.Int>_R
                                                                                <GHC.Types.IO>_R
                                                                                <()>_N)
                                                                      (<Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          ()>_R
                                                                       ->_R <Control.Monad.Trans.Reader.ReaderT
                                                                               (GHC.IORef.IORef
                                                                                  GHC.Types.Int)
                                                                               GHC.Types.IO
                                                                               ()>_R
                                                                       ->_R <GHC.IORef.IORef
                                                                               GHC.Types.Int>_R
                                                                       ->_R GHC.Types.N:IO[0]
                                                                                <()>_R)))))))
                                        s1 of ds3 { (#,#) ipv4 ipv5 ->
                                 case ipv5 of wild { () -> ds3 } }))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case GHC.Prim.readMutVar#
                                     @ GHC.Prim.RealWorld
                                     @ GHC.Types.Int
                                     ipv3
                                     s1 of ds3 { (#,#) ipv4 ipv5 ->
                              case ipv5 of wild { GHC.Types.I# x# ->
                              case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                                    -> GHC.Prim.State#
                                                                         GHC.Prim.RealWorld
                                                                    -> (# GHC.Prim.State#
                                                                            GHC.Prim.RealWorld #)}
                                     (GHC.Prim.narrow32Int# x#)
                                     ipv4 of wild1 { Unit# ds4 ->
                              GHC.Prim.raiseIO# @ GHC.Exception.SomeException @ () e1 ds4 } } })
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case GHC.Prim.readMutVar#
                             @ GHC.Prim.RealWorld
                             @ GHC.Types.Int
                             ipv3
                             ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                      case ipv8 of wild { GHC.Types.I# x# ->
                      case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                            -> GHC.Prim.State# GHC.Prim.RealWorld
                                                            -> (# GHC.Prim.State#
                                                                    GHC.Prim.RealWorld #)}
                             (GHC.Prim.narrow32Int# x#)
                             ipv7 of wild1 { Unit# ds5 ->
                      (# ds5, ipv5 #) } } } } } } }) -}
11f5b80abfcc73f69f50d5dfb70fc060
  main3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newMutVar#
                        @ GHC.Types.Int
                        @ GHC.Prim.RealWorld
                        Language.R.Instance.runRegion3
                        s1 of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.catch#
                        @ ()
                        @ GHC.Exception.SomeException
                        (GHC.Prim.unmaskAsyncExceptions#
                           @ ()
                           (\ (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                            case Main.main4
                                   (GHC.STRef.STRef @ GHC.Prim.RealWorld @ GHC.Types.Int ipv3)
                                     `cast`
                                   (Trans
                                        (Sym (GHC.IORef.N:IORef[0]) <GHC.Types.Int>_N)
                                        (Nth:2
                                             (Trans
                                                  (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                            <*>_N
                                                            <GHC.IORef.IORef GHC.Types.Int>_R
                                                            <GHC.Types.IO>_R
                                                            <()>_N))
                                                  (Nth:3
                                                       (Nth:3
                                                            (Trans
                                                                 (<Control.Monad.Trans.Reader.ReaderT
                                                                     (GHC.IORef.IORef GHC.Types.Int)
                                                                     GHC.Types.IO
                                                                     ()>_R
                                                                  ->_R <Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          ()>_R
                                                                  ->_R Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                           <*>_N
                                                                           <GHC.IORef.IORef
                                                                              GHC.Types.Int>_R
                                                                           <GHC.Types.IO>_R
                                                                           <()>_N)
                                                                 (<Control.Monad.Trans.Reader.ReaderT
                                                                     (GHC.IORef.IORef GHC.Types.Int)
                                                                     GHC.Types.IO
                                                                     ()>_R
                                                                  ->_R <Control.Monad.Trans.Reader.ReaderT
                                                                          (GHC.IORef.IORef
                                                                             GHC.Types.Int)
                                                                          GHC.Types.IO
                                                                          ()>_R
                                                                  ->_R <GHC.IORef.IORef
                                                                          GHC.Types.Int>_R
                                                                  ->_R GHC.Types.N:IO[0]
                                                                           <()>_R)))))))
                                   s2 of ds3 { (#,#) ipv4 ipv5 ->
                            case ipv5 of wild { () -> ds3 } }))
                        (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                           (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.readMutVar#
                                @ GHC.Prim.RealWorld
                                @ GHC.Types.Int
                                ipv3
                                s2 of ds3 { (#,#) ipv4 ipv5 ->
                         case ipv5 of wild { GHC.Types.I# x# ->
                         case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                                               -> (# GHC.Prim.State#
                                                                       GHC.Prim.RealWorld #)}
                                (GHC.Prim.narrow32Int# x#)
                                ipv4 of wild1 { Unit# ds4 ->
                         GHC.Prim.raiseIO# @ GHC.Exception.SomeException @ () e1 ds4 } } })
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ GHC.Types.Int
                        ipv3
                        ipv4 of ds4 { (#,#) ipv7 ipv8 ->
                 case ipv8 of wild { GHC.Types.I# x# ->
                 case {__pkg_ccall_GC inline-r-0.9.0.2 GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}
                        (GHC.Prim.narrow32Int# x#)
                        ipv7 of wild1 { Unit# ds5 ->
                 (# ds5, ipv5 #) } } } } }) -}
0b4c2342fe90327ba85e755315d95631
  main4 ::
    GHC.IORef.IORef GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U(U)><S,U> -}
2326bfd81cef0934ab6e5e462ee48ac4
  main5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
"SPEC/Main $fLiteralSEXPa @ 'Closure _" [orphan] forall @ s
                                                        (v :: Data.Singletons.SingI
                                                                'Foreign.R.Type.Closure)
  Language.R.Literal.$fLiteralSEXPa @ 'Foreign.R.Type.Closure @ s v
  = Main.$s$fLiteralSEXPa @ s
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

